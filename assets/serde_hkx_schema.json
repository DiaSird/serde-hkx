{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "ClassPtrMap",
  "description": "- key: class index(e.g `#0001`)\n - value: C++ Class",
  "type": "object",
  "properties": {
    "$schema": {
      "description": "Path of Json schema",
      "type": [
        "string",
        "null"
      ],
      "default": null
    }
  },
  "additionalProperties": {
    "$ref": "#/$defs/Classes"
  },
  "$defs": {
    "$schema": "",
    "AbsoluteTimeCounter": {
      "title": "C++ Info",
      "description": "- name: `AbsoluteTimeCounter`(ctype: `hkEnum<AbsoluteTimeCounter, hkUint32>`)",
      "type": "string",
      "enum": [
        "ABSOLUTE_TIME_TIMER_0",
        "ABSOLUTE_TIME_TIMER_1",
        "ABSOLUTE_TIME_NOT_TIMED"
      ]
    },
    "AlignMode": {
      "title": "C++ Info",
      "description": "- name: `AlignMode`(ctype: `hkEnum<AlignMode, hkInt8>`)",
      "type": "string",
      "enum": [
        "ALIGN_MODE_FORWARD_RIGHT",
        "ALIGN_MODE_FORWARD"
      ]
    },
    "AnimationType": {
      "title": "C++ Info",
      "description": "- name: `AnimationType`(ctype: `hkEnum<AnimationType, hkInt32>`)",
      "type": "string",
      "enum": [
        "HK_UNKNOWN_ANIMATION",
        "HK_INTERLEAVED_ANIMATION",
        "HK_DELTA_COMPRESSED_ANIMATION",
        "HK_WAVELET_COMPRESSED_ANIMATION",
        "HK_MIRRORED_ANIMATION",
        "HK_SPLINE_COMPRESSED_ANIMATION",
        "HK_QUANTIZED_COMPRESSED_ANIMATION"
      ]
    },
    "ArrayType": {
      "title": "C++ Info",
      "description": "- name: `ArrayType`(ctype: `hkEnum<ArrayType, hkInt8>`)",
      "type": "string",
      "enum": [
        "NONE",
        "POINTSOUP",
        "ENTITIES"
      ]
    },
    "AtomType": {
      "title": "C++ Info",
      "description": "- name: `AtomType`(ctype: `hkEnum<AtomType, hkUint16>`)",
      "type": "string",
      "enum": [
        "TYPE_INVALID",
        "TYPE_BRIDGE",
        "TYPE_SET_LOCAL_TRANSFORMS",
        "TYPE_SET_LOCAL_TRANSLATIONS",
        "TYPE_SET_LOCAL_ROTATIONS",
        "TYPE_BALL_SOCKET",
        "TYPE_STIFF_SPRING",
        "TYPE_LIN",
        "TYPE_LIN_SOFT",
        "TYPE_LIN_LIMIT",
        "TYPE_LIN_FRICTION",
        "TYPE_LIN_MOTOR",
        "TYPE_2D_ANG",
        "TYPE_ANG",
        "TYPE_ANG_LIMIT",
        "TYPE_TWIST_LIMIT",
        "TYPE_CONE_LIMIT",
        "TYPE_ANG_FRICTION",
        "TYPE_ANG_MOTOR",
        "TYPE_RAGDOLL_MOTOR",
        "TYPE_PULLEY",
        "TYPE_RACK_AND_PINION",
        "TYPE_COG_WHEEL",
        "TYPE_SETUP_STABILIZATION",
        "TYPE_OVERWRITE_PIVOT",
        "TYPE_CONTACT",
        "TYPE_MODIFIER_SOFT_CONTACT",
        "TYPE_MODIFIER_MASS_CHANGER",
        "TYPE_MODIFIER_VISCOUS_SURFACE",
        "TYPE_MODIFIER_MOVING_SURFACE",
        "TYPE_MODIFIER_IGNORE_CONSTRAINT",
        "TYPE_MODIFIER_CENTER_OF_MASS_CHANGER",
        "TYPE_MAX"
      ]
    },
    "AttachmentType": {
      "title": "C++ Info",
      "description": "- name: `AttachmentType`(ctype: `hkEnum<AttachmentType, hkInt8>`)",
      "type": "string",
      "enum": [
        "ATTACHMENT_TYPE_KEYFRAME_RIGID_BODY",
        "ATTACHMENT_TYPE_BALL_SOCKET_CONSTRAINT",
        "ATTACHMENT_TYPE_RAGDOLL_CONSTRAINT",
        "ATTACHMENT_TYPE_SET_WORLD_FROM_MODEL",
        "ATTACHMENT_TYPE_NONE"
      ]
    },
    "BGSGamebryoSequenceGenerator": {
      "title": "C++ Info",
      "description": "- name: `BGSGamebryoSequenceGenerator`\n - version: `2`\n - signature: `0xc8df2d77`\n - size: ` 72`(x86)/`112`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "bDelayedActivate": {
          "title": "C++ Info",
          "description": "- name: `bDelayedActivate`(ctype: `hkBool`)\n - offset: ` 68`(x86)/`108`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "bLooping": {
          "title": "C++ Info",
          "description": "- name: `bLooping`(ctype: `hkBool`)\n - offset: ` 69`(x86)/`109`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "cloneState": {
          "title": "C++ Info",
          "description": "- name: `cloneState`(ctype: `enum unknown`)\n - offset: ` 38`(x86)/` 66`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "eBlendModeFunction": {
          "title": "C++ Info",
          "description": "- name: `eBlendModeFunction`(ctype: `enum BlendModeFunction`)\n - offset: ` 44`(x86)/` 80`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/BlendModeFunction"
        },
        "events": {
          "title": "C++ Info",
          "description": "- name: `events`(ctype: `hkArray<void>`)\n - offset: ` 52`(x86)/` 88`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "fPercent": {
          "title": "C++ Info",
          "description": "- name: `fPercent`(ctype: `hkReal`)\n - offset: ` 48`(x86)/` 84`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "fTime": {
          "title": "C++ Info",
          "description": "- name: `fTime`(ctype: `hkReal`)\n - offset: ` 64`(x86)/`104`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "number",
          "format": "float"
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkInt16`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "pSequence": {
          "title": "C++ Info",
          "description": "- name: `pSequence`(ctype: `char*`)\n - offset: ` 40`(x86)/` 72`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "padNode": {
          "title": "C++ Info",
          "description": "- name: `padNode`(ctype: `hkBool[1]`)\n - offset: ` 39`(x86)/` 67`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 1,
          "minItems": 1
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "userData",
        "id",
        "cloneState",
        "padNode",
        "eBlendModeFunction",
        "fPercent",
        "events",
        "fTime",
        "bDelayedActivate",
        "bLooping"
      ]
    },
    "BSBoneSwitchGenerator": {
      "title": "C++ Info",
      "description": "- name: `BSBoneSwitchGenerator`\n - version: `1`\n - signature: `0xf33d3eea`\n - size: ` 64`(x86)/`112`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "ChildrenA": {
          "title": "C++ Info",
          "description": "- name: `ChildrenA`(ctype: `hkArray<BSBoneSwitchGeneratorBoneData*>`)\n - offset: ` 52`(x86)/` 88`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "cloneState": {
          "title": "C++ Info",
          "description": "- name: `cloneState`(ctype: `enum unknown`)\n - offset: ` 38`(x86)/` 66`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkInt16`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "pDefaultGenerator": {
          "title": "C++ Info",
          "description": "- name: `pDefaultGenerator`(ctype: `struct hkbGenerator*`)\n - offset: ` 48`(x86)/` 80`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `ALIGN_16`",
          "type": "string"
        },
        "padNode": {
          "title": "C++ Info",
          "description": "- name: `padNode`(ctype: `hkBool[1]`)\n - offset: ` 39`(x86)/` 67`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 1,
          "minItems": 1
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "userData",
        "id",
        "cloneState",
        "padNode",
        "pDefaultGenerator",
        "ChildrenA"
      ]
    },
    "BSBoneSwitchGeneratorBoneData": {
      "title": "C++ Info",
      "description": "- name: `BSBoneSwitchGeneratorBoneData`\n - version: `1`\n - signature: `0xc1215be6`\n - size: ` 48`(x86)/` 64`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "pGenerator": {
          "title": "C++ Info",
          "description": "- name: `pGenerator`(ctype: `struct hkbGenerator*`)\n - offset: ` 32`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `ALIGN_16`",
          "type": "string"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "spBoneWeight": {
          "title": "C++ Info",
          "description": "- name: `spBoneWeight`(ctype: `struct hkbBoneWeightArray*`)\n - offset: ` 36`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "pGenerator",
        "spBoneWeight"
      ]
    },
    "BSComputeAddBoneAnimModifier": {
      "title": "C++ Info",
      "description": "- name: `BSComputeAddBoneAnimModifier`\n - version: `1`\n - signature: `0xa67f8c46`\n - size: `112`(x86)/`160`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "boneIndex": {
          "title": "C++ Info",
          "description": "- name: `boneIndex`(ctype: `hkInt16`)\n - offset: ` 44`(x86)/` 80`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "int16"
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "cloneState": {
          "title": "C++ Info",
          "description": "- name: `cloneState`(ctype: `enum unknown`)\n - offset: ` 38`(x86)/` 66`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "enable": {
          "title": "C++ Info",
          "description": "- name: `enable`(ctype: `hkBool`)\n - offset: ` 40`(x86)/` 72`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkInt16`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "pSkeletonMemory": {
          "title": "C++ Info",
          "description": "- name: `pSkeletonMemory`(ctype: `void*`)\n - offset: ` 96`(x86)/`144`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "padModifier": {
          "title": "C++ Info",
          "description": "- name: `padModifier`(ctype: `hkBool[3]`)\n - offset: ` 41`(x86)/` 73`(x86_64)\n - type_size: `  3`(x86)/`  3`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 3,
          "minItems": 3
        },
        "padNode": {
          "title": "C++ Info",
          "description": "- name: `padNode`(ctype: `hkBool[1]`)\n - offset: ` 39`(x86)/` 67`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 1,
          "minItems": 1
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "rotationLSOut": {
          "title": "C++ Info",
          "description": "- name: `rotationLSOut`(ctype: `hkQuaternion`)\n - offset: ` 64`(x86)/`112`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Quaternion"
        },
        "scaleLSOut": {
          "title": "C++ Info",
          "description": "- name: `scaleLSOut`(ctype: `hkVector4`)\n - offset: ` 80`(x86)/`128`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "translationLSOut": {
          "title": "C++ Info",
          "description": "- name: `translationLSOut`(ctype: `hkVector4`)\n - offset: ` 48`(x86)/` 96`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "userData",
        "id",
        "cloneState",
        "padNode",
        "enable",
        "padModifier",
        "boneIndex",
        "translationLSOut",
        "rotationLSOut",
        "scaleLSOut",
        "pSkeletonMemory"
      ]
    },
    "BSCyclicBlendTransitionGenerator": {
      "title": "C++ Info",
      "description": "- name: `BSCyclicBlendTransitionGenerator`\n - version: `1`\n - signature: `0x5119eb06`\n - size: `112`(x86)/`176`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "EventToCrossBlend": {
          "title": "C++ Info",
          "description": "- name: `EventToCrossBlend`(ctype: `struct hkbEventProperty`)\n - offset: ` 60`(x86)/`104`(x86_64)\n - type_size: `  8`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/hkbEventProperty"
        },
        "EventToFreezeBlendValue": {
          "title": "C++ Info",
          "description": "- name: `EventToFreezeBlendValue`(ctype: `struct hkbEventProperty`)\n - offset: ` 52`(x86)/` 88`(x86_64)\n - type_size: `  8`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/hkbEventProperty"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "cloneState": {
          "title": "C++ Info",
          "description": "- name: `cloneState`(ctype: `enum unknown`)\n - offset: ` 38`(x86)/` 66`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "currentMode": {
          "title": "C++ Info",
          "description": "- name: `currentMode`(ctype: `enum unknown`)\n - offset: `100`(x86)/`168`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "eBlendCurve": {
          "title": "C++ Info",
          "description": "- name: `eBlendCurve`(ctype: `enum BlendCurve`)\n - offset: ` 76`(x86)/`128`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/BlendCurve"
        },
        "fBlendParameter": {
          "title": "C++ Info",
          "description": "- name: `fBlendParameter`(ctype: `hkReal`)\n - offset: ` 68`(x86)/`120`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "fTransitionDuration": {
          "title": "C++ Info",
          "description": "- name: `fTransitionDuration`(ctype: `hkReal`)\n - offset: ` 72`(x86)/`124`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkInt16`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "pBlenderGenerator": {
          "title": "C++ Info",
          "description": "- name: `pBlenderGenerator`(ctype: `struct hkbGenerator*`)\n - offset: ` 48`(x86)/` 80`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `ALIGN_16`",
          "type": "string"
        },
        "pTransitionBlenderGenerator": {
          "title": "C++ Info",
          "description": "- name: `pTransitionBlenderGenerator`(ctype: `void*`)\n - offset: ` 80`(x86)/`144`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `ALIGN_16|SERIALIZE_IGNORED`",
          "type": "string"
        },
        "pTransitionEffect": {
          "title": "C++ Info",
          "description": "- name: `pTransitionEffect`(ctype: `void*`)\n - offset: ` 96`(x86)/`160`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `ALIGN_16|SERIALIZE_IGNORED`",
          "type": "string"
        },
        "padNode": {
          "title": "C++ Info",
          "description": "- name: `padNode`(ctype: `hkBool[1]`)\n - offset: ` 39`(x86)/` 67`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 1,
          "minItems": 1
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "userData",
        "id",
        "cloneState",
        "padNode",
        "pBlenderGenerator",
        "EventToFreezeBlendValue",
        "EventToCrossBlend",
        "fBlendParameter",
        "fTransitionDuration",
        "eBlendCurve",
        "pTransitionBlenderGenerator",
        "pTransitionEffect",
        "currentMode"
      ]
    },
    "BSDecomposeVectorModifier": {
      "title": "C++ Info",
      "description": "- name: `BSDecomposeVectorModifier`\n - version: `0`\n - signature: `0x31f6b8b6`\n - size: ` 80`(x86)/`112`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "cloneState": {
          "title": "C++ Info",
          "description": "- name: `cloneState`(ctype: `enum unknown`)\n - offset: ` 38`(x86)/` 66`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "enable": {
          "title": "C++ Info",
          "description": "- name: `enable`(ctype: `hkBool`)\n - offset: ` 40`(x86)/` 72`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkInt16`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "padModifier": {
          "title": "C++ Info",
          "description": "- name: `padModifier`(ctype: `hkBool[3]`)\n - offset: ` 41`(x86)/` 73`(x86_64)\n - type_size: `  3`(x86)/`  3`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 3,
          "minItems": 3
        },
        "padNode": {
          "title": "C++ Info",
          "description": "- name: `padNode`(ctype: `hkBool[1]`)\n - offset: ` 39`(x86)/` 67`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 1,
          "minItems": 1
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "vector": {
          "title": "C++ Info",
          "description": "- name: `vector`(ctype: `hkVector4`)\n - offset: ` 48`(x86)/` 80`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "w": {
          "title": "C++ Info",
          "description": "- name: `w`(ctype: `hkReal`)\n - offset: ` 76`(x86)/`108`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "x": {
          "title": "C++ Info",
          "description": "- name: `x`(ctype: `hkReal`)\n - offset: ` 64`(x86)/` 96`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "y": {
          "title": "C++ Info",
          "description": "- name: `y`(ctype: `hkReal`)\n - offset: ` 68`(x86)/`100`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "z": {
          "title": "C++ Info",
          "description": "- name: `z`(ctype: `hkReal`)\n - offset: ` 72`(x86)/`104`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "userData",
        "id",
        "cloneState",
        "padNode",
        "enable",
        "padModifier",
        "vector",
        "x",
        "y",
        "z",
        "w"
      ]
    },
    "BSDirectAtModifier": {
      "title": "C++ Info",
      "description": "- name: `BSDirectAtModifier`\n - version: `0`\n - signature: `0x19a005c0`\n - size: `176`(x86)/`224`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "active": {
          "title": "C++ Info",
          "description": "- name: `active`(ctype: `hkBool`)\n - offset: `116`(x86)/`148`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "boneChainIndices": {
          "title": "C++ Info",
          "description": "- name: `boneChainIndices`(ctype: `hkArray<void>`)\n - offset: `160`(x86)/`208`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "cloneState": {
          "title": "C++ Info",
          "description": "- name: `cloneState`(ctype: `enum unknown`)\n - offset: ` 38`(x86)/` 66`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "currentHeadingOffset": {
          "title": "C++ Info",
          "description": "- name: `currentHeadingOffset`(ctype: `hkReal`)\n - offset: `120`(x86)/`152`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "currentPitchOffset": {
          "title": "C++ Info",
          "description": "- name: `currentPitchOffset`(ctype: `hkReal`)\n - offset: `124`(x86)/`156`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "directAtCamera": {
          "title": "C++ Info",
          "description": "- name: `directAtCamera`(ctype: `hkBool`)\n - offset: `100`(x86)/`132`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "directAtCameraX": {
          "title": "C++ Info",
          "description": "- name: `directAtCameraX`(ctype: `hkReal`)\n - offset: `104`(x86)/`136`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "directAtCameraY": {
          "title": "C++ Info",
          "description": "- name: `directAtCameraY`(ctype: `hkReal`)\n - offset: `108`(x86)/`140`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "directAtCameraZ": {
          "title": "C++ Info",
          "description": "- name: `directAtCameraZ`(ctype: `hkReal`)\n - offset: `112`(x86)/`144`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "directAtTarget": {
          "title": "C++ Info",
          "description": "- name: `directAtTarget`(ctype: `hkBool`)\n - offset: ` 44`(x86)/` 80`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "directAtTargetLocation": {
          "title": "C++ Info",
          "description": "- name: `directAtTargetLocation`(ctype: `hkVector4`)\n - offset: `144`(x86)/`192`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "$ref": "#/$defs/Vector4"
        },
        "enable": {
          "title": "C++ Info",
          "description": "- name: `enable`(ctype: `hkBool`)\n - offset: ` 40`(x86)/` 72`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "endBoneIndex": {
          "title": "C++ Info",
          "description": "- name: `endBoneIndex`(ctype: `hkInt16`)\n - offset: ` 50`(x86)/` 86`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "int16"
        },
        "hasTarget": {
          "title": "C++ Info",
          "description": "- name: `hasTarget`(ctype: `hkBool`)\n - offset: `136`(x86)/`176`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkInt16`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "limitHeadingDegrees": {
          "title": "C++ Info",
          "description": "- name: `limitHeadingDegrees`(ctype: `hkReal`)\n - offset: ` 52`(x86)/` 88`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "limitPitchDegrees": {
          "title": "C++ Info",
          "description": "- name: `limitPitchDegrees`(ctype: `hkReal`)\n - offset: ` 56`(x86)/` 92`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "offGain": {
          "title": "C++ Info",
          "description": "- name: `offGain`(ctype: `hkReal`)\n - offset: ` 72`(x86)/`108`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "offsetHeadingDegrees": {
          "title": "C++ Info",
          "description": "- name: `offsetHeadingDegrees`(ctype: `hkReal`)\n - offset: ` 60`(x86)/` 96`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "offsetPitchDegrees": {
          "title": "C++ Info",
          "description": "- name: `offsetPitchDegrees`(ctype: `hkReal`)\n - offset: ` 64`(x86)/`100`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "onGain": {
          "title": "C++ Info",
          "description": "- name: `onGain`(ctype: `hkReal`)\n - offset: ` 68`(x86)/`104`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "pSkeletonMemory": {
          "title": "C++ Info",
          "description": "- name: `pSkeletonMemory`(ctype: `void*`)\n - offset: `132`(x86)/`168`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "padModifier": {
          "title": "C++ Info",
          "description": "- name: `padModifier`(ctype: `hkBool[3]`)\n - offset: ` 41`(x86)/` 73`(x86_64)\n - type_size: `  3`(x86)/`  3`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 3,
          "minItems": 3
        },
        "padNode": {
          "title": "C++ Info",
          "description": "- name: `padNode`(ctype: `hkBool[1]`)\n - offset: ` 39`(x86)/` 67`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 1,
          "minItems": 1
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "sourceBoneIndex": {
          "title": "C++ Info",
          "description": "- name: `sourceBoneIndex`(ctype: `hkInt16`)\n - offset: ` 46`(x86)/` 82`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "int16"
        },
        "startBoneIndex": {
          "title": "C++ Info",
          "description": "- name: `startBoneIndex`(ctype: `hkInt16`)\n - offset: ` 48`(x86)/` 84`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "int16"
        },
        "targetLocation": {
          "title": "C++ Info",
          "description": "- name: `targetLocation`(ctype: `hkVector4`)\n - offset: ` 80`(x86)/`112`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "timeStep": {
          "title": "C++ Info",
          "description": "- name: `timeStep`(ctype: `hkReal`)\n - offset: `128`(x86)/`160`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "number",
          "format": "float"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "userInfo": {
          "title": "C++ Info",
          "description": "- name: `userInfo`(ctype: `hkUint32`)\n - offset: ` 96`(x86)/`128`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "userData",
        "id",
        "cloneState",
        "padNode",
        "enable",
        "padModifier",
        "directAtTarget",
        "sourceBoneIndex",
        "startBoneIndex",
        "endBoneIndex",
        "limitHeadingDegrees",
        "limitPitchDegrees",
        "offsetHeadingDegrees",
        "offsetPitchDegrees",
        "onGain",
        "offGain",
        "targetLocation",
        "userInfo",
        "directAtCamera",
        "directAtCameraX",
        "directAtCameraY",
        "directAtCameraZ",
        "active",
        "currentHeadingOffset",
        "currentPitchOffset",
        "timeStep",
        "pSkeletonMemory",
        "hasTarget",
        "directAtTargetLocation",
        "boneChainIndices"
      ]
    },
    "BSDistTriggerModifier": {
      "title": "C++ Info",
      "description": "- name: `BSDistTriggerModifier`\n - version: `1`\n - signature: `0xb34d2bbd`\n - size: ` 80`(x86)/`128`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "cloneState": {
          "title": "C++ Info",
          "description": "- name: `cloneState`(ctype: `enum unknown`)\n - offset: ` 38`(x86)/` 66`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "distance": {
          "title": "C++ Info",
          "description": "- name: `distance`(ctype: `hkReal`)\n - offset: ` 64`(x86)/` 96`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "distanceTrigger": {
          "title": "C++ Info",
          "description": "- name: `distanceTrigger`(ctype: `hkReal`)\n - offset: ` 68`(x86)/`100`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "enable": {
          "title": "C++ Info",
          "description": "- name: `enable`(ctype: `hkBool`)\n - offset: ` 40`(x86)/` 72`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkInt16`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "padModifier": {
          "title": "C++ Info",
          "description": "- name: `padModifier`(ctype: `hkBool[3]`)\n - offset: ` 41`(x86)/` 73`(x86_64)\n - type_size: `  3`(x86)/`  3`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 3,
          "minItems": 3
        },
        "padNode": {
          "title": "C++ Info",
          "description": "- name: `padNode`(ctype: `hkBool[1]`)\n - offset: ` 39`(x86)/` 67`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 1,
          "minItems": 1
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "targetPosition": {
          "title": "C++ Info",
          "description": "- name: `targetPosition`(ctype: `hkVector4`)\n - offset: ` 48`(x86)/` 80`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "triggerEvent": {
          "title": "C++ Info",
          "description": "- name: `triggerEvent`(ctype: `struct hkbEventProperty`)\n - offset: ` 72`(x86)/`104`(x86_64)\n - type_size: `  8`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/hkbEventProperty"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "userData",
        "id",
        "cloneState",
        "padNode",
        "enable",
        "padModifier",
        "targetPosition",
        "distance",
        "distanceTrigger",
        "triggerEvent"
      ]
    },
    "BSEventEveryNEventsModifier": {
      "title": "C++ Info",
      "description": "- name: `BSEventEveryNEventsModifier`\n - version: `1`\n - signature: `0x6030970c`\n - size: ` 72`(x86)/`128`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "calculatedNumberOfEventsBeforeSend": {
          "title": "C++ Info",
          "description": "- name: `calculatedNumberOfEventsBeforeSend`(ctype: `hkInt8`)\n - offset: ` 68`(x86)/`120`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "cloneState": {
          "title": "C++ Info",
          "description": "- name: `cloneState`(ctype: `enum unknown`)\n - offset: ` 38`(x86)/` 66`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "enable": {
          "title": "C++ Info",
          "description": "- name: `enable`(ctype: `hkBool`)\n - offset: ` 40`(x86)/` 72`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "eventToCheckFor": {
          "title": "C++ Info",
          "description": "- name: `eventToCheckFor`(ctype: `struct hkbEventProperty`)\n - offset: ` 44`(x86)/` 80`(x86_64)\n - type_size: `  8`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/hkbEventProperty"
        },
        "eventToSend": {
          "title": "C++ Info",
          "description": "- name: `eventToSend`(ctype: `struct hkbEventProperty`)\n - offset: ` 52`(x86)/` 96`(x86_64)\n - type_size: `  8`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/hkbEventProperty"
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkInt16`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "minimumNumberOfEventsBeforeSend": {
          "title": "C++ Info",
          "description": "- name: `minimumNumberOfEventsBeforeSend`(ctype: `hkInt8`)\n - offset: ` 61`(x86)/`113`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "int8"
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "numberOfEventsBeforeSend": {
          "title": "C++ Info",
          "description": "- name: `numberOfEventsBeforeSend`(ctype: `hkInt8`)\n - offset: ` 60`(x86)/`112`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "int8"
        },
        "numberOfEventsSeen": {
          "title": "C++ Info",
          "description": "- name: `numberOfEventsSeen`(ctype: `hkInt32`)\n - offset: ` 64`(x86)/`116`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int32"
        },
        "padModifier": {
          "title": "C++ Info",
          "description": "- name: `padModifier`(ctype: `hkBool[3]`)\n - offset: ` 41`(x86)/` 73`(x86_64)\n - type_size: `  3`(x86)/`  3`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 3,
          "minItems": 3
        },
        "padNode": {
          "title": "C++ Info",
          "description": "- name: `padNode`(ctype: `hkBool[1]`)\n - offset: ` 39`(x86)/` 67`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 1,
          "minItems": 1
        },
        "randomizeNumberOfEvents": {
          "title": "C++ Info",
          "description": "- name: `randomizeNumberOfEvents`(ctype: `hkBool`)\n - offset: ` 62`(x86)/`114`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "userData",
        "id",
        "cloneState",
        "padNode",
        "enable",
        "padModifier",
        "eventToCheckFor",
        "eventToSend",
        "numberOfEventsBeforeSend",
        "minimumNumberOfEventsBeforeSend",
        "randomizeNumberOfEvents",
        "numberOfEventsSeen",
        "calculatedNumberOfEventsBeforeSend"
      ]
    },
    "BSEventOnDeactivateModifier": {
      "title": "C++ Info",
      "description": "- name: `BSEventOnDeactivateModifier`\n - version: `1`\n - signature: `0x1062d993`\n - size: ` 52`(x86)/` 96`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "cloneState": {
          "title": "C++ Info",
          "description": "- name: `cloneState`(ctype: `enum unknown`)\n - offset: ` 38`(x86)/` 66`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "enable": {
          "title": "C++ Info",
          "description": "- name: `enable`(ctype: `hkBool`)\n - offset: ` 40`(x86)/` 72`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "event": {
          "title": "C++ Info",
          "description": "- name: `event`(ctype: `struct hkbEventProperty`)\n - offset: ` 44`(x86)/` 80`(x86_64)\n - type_size: `  8`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/hkbEventProperty"
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkInt16`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "padModifier": {
          "title": "C++ Info",
          "description": "- name: `padModifier`(ctype: `hkBool[3]`)\n - offset: ` 41`(x86)/` 73`(x86_64)\n - type_size: `  3`(x86)/`  3`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 3,
          "minItems": 3
        },
        "padNode": {
          "title": "C++ Info",
          "description": "- name: `padNode`(ctype: `hkBool[1]`)\n - offset: ` 39`(x86)/` 67`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 1,
          "minItems": 1
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "userData",
        "id",
        "cloneState",
        "padNode",
        "enable",
        "padModifier",
        "event"
      ]
    },
    "BSEventOnFalseToTrueModifier": {
      "title": "C++ Info",
      "description": "- name: `BSEventOnFalseToTrueModifier`\n - version: `1`\n - signature: `0x81d0777a`\n - size: ` 84`(x86)/`160`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "EventToSend1": {
          "title": "C++ Info",
          "description": "- name: `EventToSend1`(ctype: `struct hkbEventProperty`)\n - offset: ` 48`(x86)/` 88`(x86_64)\n - type_size: `  8`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/hkbEventProperty"
        },
        "EventToSend2": {
          "title": "C++ Info",
          "description": "- name: `EventToSend2`(ctype: `struct hkbEventProperty`)\n - offset: ` 60`(x86)/`112`(x86_64)\n - type_size: `  8`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/hkbEventProperty"
        },
        "EventToSend3": {
          "title": "C++ Info",
          "description": "- name: `EventToSend3`(ctype: `struct hkbEventProperty`)\n - offset: ` 72`(x86)/`136`(x86_64)\n - type_size: `  8`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/hkbEventProperty"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "bEnableEvent1": {
          "title": "C++ Info",
          "description": "- name: `bEnableEvent1`(ctype: `hkBool`)\n - offset: ` 44`(x86)/` 80`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "bEnableEvent2": {
          "title": "C++ Info",
          "description": "- name: `bEnableEvent2`(ctype: `hkBool`)\n - offset: ` 56`(x86)/`104`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "bEnableEvent3": {
          "title": "C++ Info",
          "description": "- name: `bEnableEvent3`(ctype: `hkBool`)\n - offset: ` 68`(x86)/`128`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "bSlot1ActivatedLastFrame": {
          "title": "C++ Info",
          "description": "- name: `bSlot1ActivatedLastFrame`(ctype: `hkBool`)\n - offset: ` 80`(x86)/`152`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "bSlot2ActivatedLastFrame": {
          "title": "C++ Info",
          "description": "- name: `bSlot2ActivatedLastFrame`(ctype: `hkBool`)\n - offset: ` 81`(x86)/`153`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "bSlot3ActivatedLastFrame": {
          "title": "C++ Info",
          "description": "- name: `bSlot3ActivatedLastFrame`(ctype: `hkBool`)\n - offset: ` 82`(x86)/`154`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "bVariableToTest1": {
          "title": "C++ Info",
          "description": "- name: `bVariableToTest1`(ctype: `hkBool`)\n - offset: ` 45`(x86)/` 81`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "bVariableToTest2": {
          "title": "C++ Info",
          "description": "- name: `bVariableToTest2`(ctype: `hkBool`)\n - offset: ` 57`(x86)/`105`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "bVariableToTest3": {
          "title": "C++ Info",
          "description": "- name: `bVariableToTest3`(ctype: `hkBool`)\n - offset: ` 69`(x86)/`129`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "cloneState": {
          "title": "C++ Info",
          "description": "- name: `cloneState`(ctype: `enum unknown`)\n - offset: ` 38`(x86)/` 66`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "enable": {
          "title": "C++ Info",
          "description": "- name: `enable`(ctype: `hkBool`)\n - offset: ` 40`(x86)/` 72`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkInt16`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "padModifier": {
          "title": "C++ Info",
          "description": "- name: `padModifier`(ctype: `hkBool[3]`)\n - offset: ` 41`(x86)/` 73`(x86_64)\n - type_size: `  3`(x86)/`  3`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 3,
          "minItems": 3
        },
        "padNode": {
          "title": "C++ Info",
          "description": "- name: `padNode`(ctype: `hkBool[1]`)\n - offset: ` 39`(x86)/` 67`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 1,
          "minItems": 1
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "userData",
        "id",
        "cloneState",
        "padNode",
        "enable",
        "padModifier",
        "bEnableEvent1",
        "bVariableToTest1",
        "EventToSend1",
        "bEnableEvent2",
        "bVariableToTest2",
        "EventToSend2",
        "bEnableEvent3",
        "bVariableToTest3",
        "EventToSend3",
        "bSlot1ActivatedLastFrame",
        "bSlot2ActivatedLastFrame",
        "bSlot3ActivatedLastFrame"
      ]
    },
    "BSGetTimeStepModifier": {
      "title": "C++ Info",
      "description": "- name: `BSGetTimeStepModifier`\n - version: `0`\n - signature: `0xbda33bfe`\n - size: ` 48`(x86)/` 88`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "cloneState": {
          "title": "C++ Info",
          "description": "- name: `cloneState`(ctype: `enum unknown`)\n - offset: ` 38`(x86)/` 66`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "enable": {
          "title": "C++ Info",
          "description": "- name: `enable`(ctype: `hkBool`)\n - offset: ` 40`(x86)/` 72`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkInt16`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "padModifier": {
          "title": "C++ Info",
          "description": "- name: `padModifier`(ctype: `hkBool[3]`)\n - offset: ` 41`(x86)/` 73`(x86_64)\n - type_size: `  3`(x86)/`  3`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 3,
          "minItems": 3
        },
        "padNode": {
          "title": "C++ Info",
          "description": "- name: `padNode`(ctype: `hkBool[1]`)\n - offset: ` 39`(x86)/` 67`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 1,
          "minItems": 1
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "timeStep": {
          "title": "C++ Info",
          "description": "- name: `timeStep`(ctype: `hkReal`)\n - offset: ` 44`(x86)/` 80`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "userData",
        "id",
        "cloneState",
        "padNode",
        "enable",
        "padModifier",
        "timeStep"
      ]
    },
    "BSIStateManagerModifier": {
      "title": "C++ Info",
      "description": "- name: `BSIStateManagerModifier`\n - version: `1`\n - signature: `0x6cb24f2e`\n - size: ` 72`(x86)/`128`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "cloneState": {
          "title": "C++ Info",
          "description": "- name: `cloneState`(ctype: `enum unknown`)\n - offset: ` 38`(x86)/` 66`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "enable": {
          "title": "C++ Info",
          "description": "- name: `enable`(ctype: `hkBool`)\n - offset: ` 40`(x86)/` 72`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "iStateVar": {
          "title": "C++ Info",
          "description": "- name: `iStateVar`(ctype: `hkInt32`)\n - offset: ` 44`(x86)/` 80`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkInt16`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "myStateListener": {
          "title": "C++ Info",
          "description": "- name: `myStateListener`(ctype: `struct BSIStateManagerModifierBSIStateManagerStateListener`)\n - offset: ` 60`(x86)/`104`(x86_64)\n - type_size: ` 12`(x86)/` 24`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "$ref": "#/$defs/BSIStateManagerModifierBSIStateManagerStateListener"
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "padModifier": {
          "title": "C++ Info",
          "description": "- name: `padModifier`(ctype: `hkBool[3]`)\n - offset: ` 41`(x86)/` 73`(x86_64)\n - type_size: `  3`(x86)/`  3`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 3,
          "minItems": 3
        },
        "padNode": {
          "title": "C++ Info",
          "description": "- name: `padNode`(ctype: `hkBool[1]`)\n - offset: ` 39`(x86)/` 67`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 1,
          "minItems": 1
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "stateData": {
          "title": "C++ Info",
          "description": "- name: `stateData`(ctype: `hkArray<struct BSIStateManagerModifierBSiStateData>`)\n - offset: ` 48`(x86)/` 88`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/BSIStateManagerModifierBSiStateData"
          }
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "userData",
        "id",
        "cloneState",
        "padNode",
        "enable",
        "padModifier",
        "iStateVar",
        "stateData",
        "myStateListener"
      ]
    },
    "BSIStateManagerModifierBSIStateManagerStateListener": {
      "title": "C++ Info",
      "description": "- name: `BSIStateManagerModifierBSIStateManagerStateListener`\n - version: `0`\n - signature: `0x99463586`\n - size: ` 12`(x86)/` 24`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "pStateManager": {
          "title": "C++ Info",
          "description": "- name: `pStateManager`(ctype: `void*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "pStateManager"
      ]
    },
    "BSIStateManagerModifierBSiStateData": {
      "title": "C++ Info",
      "description": "- name: `BSIStateManagerModifierBSiStateData`\n - version: `0`\n - signature: `0x6b8a15fc`\n - size: ` 12`(x86)/` 16`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "StateID": {
          "title": "C++ Info",
          "description": "- name: `StateID`(ctype: `hkInt32`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "iStateToSetAs": {
          "title": "C++ Info",
          "description": "- name: `iStateToSetAs`(ctype: `hkInt32`)\n - offset: `  8`(x86)/` 12`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "pStateMachine": {
          "title": "C++ Info",
          "description": "- name: `pStateMachine`(ctype: `struct hkbGenerator*`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "pStateMachine",
        "StateID",
        "iStateToSetAs"
      ]
    },
    "BSInterpValueModifier": {
      "title": "C++ Info",
      "description": "- name: `BSInterpValueModifier`\n - version: `0`\n - signature: `0x29adc802`\n - size: ` 64`(x86)/`104`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "cloneState": {
          "title": "C++ Info",
          "description": "- name: `cloneState`(ctype: `enum unknown`)\n - offset: ` 38`(x86)/` 66`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "enable": {
          "title": "C++ Info",
          "description": "- name: `enable`(ctype: `hkBool`)\n - offset: ` 40`(x86)/` 72`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "gain": {
          "title": "C++ Info",
          "description": "- name: `gain`(ctype: `hkReal`)\n - offset: ` 56`(x86)/` 92`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkInt16`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "padModifier": {
          "title": "C++ Info",
          "description": "- name: `padModifier`(ctype: `hkBool[3]`)\n - offset: ` 41`(x86)/` 73`(x86_64)\n - type_size: `  3`(x86)/`  3`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 3,
          "minItems": 3
        },
        "padNode": {
          "title": "C++ Info",
          "description": "- name: `padNode`(ctype: `hkBool[1]`)\n - offset: ` 39`(x86)/` 67`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 1,
          "minItems": 1
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "result": {
          "title": "C++ Info",
          "description": "- name: `result`(ctype: `hkReal`)\n - offset: ` 52`(x86)/` 88`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "source": {
          "title": "C++ Info",
          "description": "- name: `source`(ctype: `hkReal`)\n - offset: ` 44`(x86)/` 80`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "target": {
          "title": "C++ Info",
          "description": "- name: `target`(ctype: `hkReal`)\n - offset: ` 48`(x86)/` 84`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "timeStep": {
          "title": "C++ Info",
          "description": "- name: `timeStep`(ctype: `hkReal`)\n - offset: ` 60`(x86)/` 96`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "number",
          "format": "float"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "userData",
        "id",
        "cloneState",
        "padNode",
        "enable",
        "padModifier",
        "source",
        "target",
        "result",
        "gain",
        "timeStep"
      ]
    },
    "BSIsActiveModifier": {
      "title": "C++ Info",
      "description": "- name: `BSIsActiveModifier`\n - version: `1`\n - signature: `0xb0fde45a`\n - size: ` 56`(x86)/` 96`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "bInvertActive0": {
          "title": "C++ Info",
          "description": "- name: `bInvertActive0`(ctype: `hkBool`)\n - offset: ` 45`(x86)/` 81`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "bInvertActive1": {
          "title": "C++ Info",
          "description": "- name: `bInvertActive1`(ctype: `hkBool`)\n - offset: ` 47`(x86)/` 83`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "bInvertActive2": {
          "title": "C++ Info",
          "description": "- name: `bInvertActive2`(ctype: `hkBool`)\n - offset: ` 49`(x86)/` 85`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "bInvertActive3": {
          "title": "C++ Info",
          "description": "- name: `bInvertActive3`(ctype: `hkBool`)\n - offset: ` 51`(x86)/` 87`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "bInvertActive4": {
          "title": "C++ Info",
          "description": "- name: `bInvertActive4`(ctype: `hkBool`)\n - offset: ` 53`(x86)/` 89`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "bIsActive0": {
          "title": "C++ Info",
          "description": "- name: `bIsActive0`(ctype: `hkBool`)\n - offset: ` 44`(x86)/` 80`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "bIsActive1": {
          "title": "C++ Info",
          "description": "- name: `bIsActive1`(ctype: `hkBool`)\n - offset: ` 46`(x86)/` 82`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "bIsActive2": {
          "title": "C++ Info",
          "description": "- name: `bIsActive2`(ctype: `hkBool`)\n - offset: ` 48`(x86)/` 84`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "bIsActive3": {
          "title": "C++ Info",
          "description": "- name: `bIsActive3`(ctype: `hkBool`)\n - offset: ` 50`(x86)/` 86`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "bIsActive4": {
          "title": "C++ Info",
          "description": "- name: `bIsActive4`(ctype: `hkBool`)\n - offset: ` 52`(x86)/` 88`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "cloneState": {
          "title": "C++ Info",
          "description": "- name: `cloneState`(ctype: `enum unknown`)\n - offset: ` 38`(x86)/` 66`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "enable": {
          "title": "C++ Info",
          "description": "- name: `enable`(ctype: `hkBool`)\n - offset: ` 40`(x86)/` 72`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkInt16`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "padModifier": {
          "title": "C++ Info",
          "description": "- name: `padModifier`(ctype: `hkBool[3]`)\n - offset: ` 41`(x86)/` 73`(x86_64)\n - type_size: `  3`(x86)/`  3`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 3,
          "minItems": 3
        },
        "padNode": {
          "title": "C++ Info",
          "description": "- name: `padNode`(ctype: `hkBool[1]`)\n - offset: ` 39`(x86)/` 67`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 1,
          "minItems": 1
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "userData",
        "id",
        "cloneState",
        "padNode",
        "enable",
        "padModifier",
        "bIsActive0",
        "bInvertActive0",
        "bIsActive1",
        "bInvertActive1",
        "bIsActive2",
        "bInvertActive2",
        "bIsActive3",
        "bInvertActive3",
        "bIsActive4",
        "bInvertActive4"
      ]
    },
    "BSLimbIKModifier": {
      "title": "C++ Info",
      "description": "- name: `BSLimbIKModifier`\n - version: `0`\n - signature: `0x8ea971e5`\n - size: ` 76`(x86)/`120`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "boneRadius": {
          "title": "C++ Info",
          "description": "- name: `boneRadius`(ctype: `hkReal`)\n - offset: ` 60`(x86)/` 96`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "castOffset": {
          "title": "C++ Info",
          "description": "- name: `castOffset`(ctype: `hkReal`)\n - offset: ` 64`(x86)/`100`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "cloneState": {
          "title": "C++ Info",
          "description": "- name: `cloneState`(ctype: `enum unknown`)\n - offset: ` 38`(x86)/` 66`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "currentAngle": {
          "title": "C++ Info",
          "description": "- name: `currentAngle`(ctype: `hkReal`)\n - offset: ` 48`(x86)/` 84`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "number",
          "format": "float"
        },
        "enable": {
          "title": "C++ Info",
          "description": "- name: `enable`(ctype: `hkBool`)\n - offset: ` 40`(x86)/` 72`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "endBoneIndex": {
          "title": "C++ Info",
          "description": "- name: `endBoneIndex`(ctype: `hkInt16`)\n - offset: ` 54`(x86)/` 90`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "int16"
        },
        "gain": {
          "title": "C++ Info",
          "description": "- name: `gain`(ctype: `hkReal`)\n - offset: ` 56`(x86)/` 92`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkInt16`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "limitAngleDegrees": {
          "title": "C++ Info",
          "description": "- name: `limitAngleDegrees`(ctype: `hkReal`)\n - offset: ` 44`(x86)/` 80`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "pSkeletonMemory": {
          "title": "C++ Info",
          "description": "- name: `pSkeletonMemory`(ctype: `void*`)\n - offset: ` 72`(x86)/`112`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "padModifier": {
          "title": "C++ Info",
          "description": "- name: `padModifier`(ctype: `hkBool[3]`)\n - offset: ` 41`(x86)/` 73`(x86_64)\n - type_size: `  3`(x86)/`  3`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 3,
          "minItems": 3
        },
        "padNode": {
          "title": "C++ Info",
          "description": "- name: `padNode`(ctype: `hkBool[1]`)\n - offset: ` 39`(x86)/` 67`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 1,
          "minItems": 1
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "startBoneIndex": {
          "title": "C++ Info",
          "description": "- name: `startBoneIndex`(ctype: `hkInt16`)\n - offset: ` 52`(x86)/` 88`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "int16"
        },
        "timeStep": {
          "title": "C++ Info",
          "description": "- name: `timeStep`(ctype: `hkReal`)\n - offset: ` 68`(x86)/`104`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "number",
          "format": "float"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "userData",
        "id",
        "cloneState",
        "padNode",
        "enable",
        "padModifier",
        "limitAngleDegrees",
        "currentAngle",
        "startBoneIndex",
        "endBoneIndex",
        "gain",
        "boneRadius",
        "castOffset",
        "timeStep",
        "pSkeletonMemory"
      ]
    },
    "BSLookAtModifier": {
      "title": "C++ Info",
      "description": "- name: `BSLookAtModifier`\n - version: `4`\n - signature: `0xd756fc25`\n - size: `160`(x86)/`224`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "ballBonesValid": {
          "title": "C++ Info",
          "description": "- name: `ballBonesValid`(ctype: `hkBool`)\n - offset: `144`(x86)/`204`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "bones": {
          "title": "C++ Info",
          "description": "- name: `bones`(ctype: `hkArray<struct BSLookAtModifierBoneData>`)\n - offset: ` 48`(x86)/` 88`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/BSLookAtModifierBoneData"
          }
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "cloneState": {
          "title": "C++ Info",
          "description": "- name: `cloneState`(ctype: `enum unknown`)\n - offset: ` 38`(x86)/` 66`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "continueLookOutsideOfLimit": {
          "title": "C++ Info",
          "description": "- name: `continueLookOutsideOfLimit`(ctype: `hkBool`)\n - offset: ` 80`(x86)/`128`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "enable": {
          "title": "C++ Info",
          "description": "- name: `enable`(ctype: `hkBool`)\n - offset: ` 40`(x86)/` 72`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "eyeBones": {
          "title": "C++ Info",
          "description": "- name: `eyeBones`(ctype: `hkArray<struct BSLookAtModifierBoneData>`)\n - offset: ` 60`(x86)/`104`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/BSLookAtModifierBoneData"
          }
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkInt16`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "limitAngleDegrees": {
          "title": "C++ Info",
          "description": "- name: `limitAngleDegrees`(ctype: `hkReal`)\n - offset: ` 72`(x86)/`120`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "limitAngleThresholdDegrees": {
          "title": "C++ Info",
          "description": "- name: `limitAngleThresholdDegrees`(ctype: `hkReal`)\n - offset: ` 76`(x86)/`124`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "lookAtCamera": {
          "title": "C++ Info",
          "description": "- name: `lookAtCamera`(ctype: `hkBool`)\n - offset: `124`(x86)/`184`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "lookAtCameraX": {
          "title": "C++ Info",
          "description": "- name: `lookAtCameraX`(ctype: `hkReal`)\n - offset: `128`(x86)/`188`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "lookAtCameraY": {
          "title": "C++ Info",
          "description": "- name: `lookAtCameraY`(ctype: `hkReal`)\n - offset: `132`(x86)/`192`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "lookAtCameraZ": {
          "title": "C++ Info",
          "description": "- name: `lookAtCameraZ`(ctype: `hkReal`)\n - offset: `136`(x86)/`196`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "lookAtTarget": {
          "title": "C++ Info",
          "description": "- name: `lookAtTarget`(ctype: `hkBool`)\n - offset: ` 44`(x86)/` 80`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "offGain": {
          "title": "C++ Info",
          "description": "- name: `offGain`(ctype: `hkReal`)\n - offset: ` 88`(x86)/`136`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "onGain": {
          "title": "C++ Info",
          "description": "- name: `onGain`(ctype: `hkReal`)\n - offset: ` 84`(x86)/`132`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "pSkeletonMemory": {
          "title": "C++ Info",
          "description": "- name: `pSkeletonMemory`(ctype: `void*`)\n - offset: `148`(x86)/`208`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "padModifier": {
          "title": "C++ Info",
          "description": "- name: `padModifier`(ctype: `hkBool[3]`)\n - offset: ` 41`(x86)/` 73`(x86_64)\n - type_size: `  3`(x86)/`  3`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 3,
          "minItems": 3
        },
        "padNode": {
          "title": "C++ Info",
          "description": "- name: `padNode`(ctype: `hkBool[1]`)\n - offset: ` 39`(x86)/` 67`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 1,
          "minItems": 1
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "targetLocation": {
          "title": "C++ Info",
          "description": "- name: `targetLocation`(ctype: `hkVector4`)\n - offset: ` 96`(x86)/`144`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "targetOutOfLimitEvent": {
          "title": "C++ Info",
          "description": "- name: `targetOutOfLimitEvent`(ctype: `struct hkbEventProperty`)\n - offset: `116`(x86)/`168`(x86_64)\n - type_size: `  8`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/hkbEventProperty"
        },
        "targetOutsideLimits": {
          "title": "C++ Info",
          "description": "- name: `targetOutsideLimits`(ctype: `hkBool`)\n - offset: `112`(x86)/`160`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "timeStep": {
          "title": "C++ Info",
          "description": "- name: `timeStep`(ctype: `hkReal`)\n - offset: `140`(x86)/`200`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "number",
          "format": "float"
        },
        "useBoneGains": {
          "title": "C++ Info",
          "description": "- name: `useBoneGains`(ctype: `hkBool`)\n - offset: ` 92`(x86)/`140`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "userData",
        "id",
        "cloneState",
        "padNode",
        "enable",
        "padModifier",
        "lookAtTarget",
        "bones",
        "eyeBones",
        "limitAngleDegrees",
        "limitAngleThresholdDegrees",
        "continueLookOutsideOfLimit",
        "onGain",
        "offGain",
        "useBoneGains",
        "targetLocation",
        "targetOutsideLimits",
        "targetOutOfLimitEvent",
        "lookAtCamera",
        "lookAtCameraX",
        "lookAtCameraY",
        "lookAtCameraZ",
        "timeStep",
        "ballBonesValid",
        "pSkeletonMemory"
      ]
    },
    "BSLookAtModifierBoneData": {
      "title": "C++ Info",
      "description": "- name: `BSLookAtModifierBoneData`\n - version: `0`\n - signature: `0x29efee59`\n - size: ` 64`(x86)/` 64`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "currentFwdAxisLS": {
          "title": "C++ Info",
          "description": "- name: `currentFwdAxisLS`(ctype: `hkVector4`)\n - offset: ` 48`(x86)/` 48`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "$ref": "#/$defs/Vector4"
        },
        "enabled": {
          "title": "C++ Info",
          "description": "- name: `enabled`(ctype: `hkBool`)\n - offset: ` 44`(x86)/` 44`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "fwdAxisLS": {
          "title": "C++ Info",
          "description": "- name: `fwdAxisLS`(ctype: `hkVector4`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "index": {
          "title": "C++ Info",
          "description": "- name: `index`(ctype: `hkInt16`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "int16"
        },
        "limitAngleDegrees": {
          "title": "C++ Info",
          "description": "- name: `limitAngleDegrees`(ctype: `hkReal`)\n - offset: ` 32`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "offGain": {
          "title": "C++ Info",
          "description": "- name: `offGain`(ctype: `hkReal`)\n - offset: ` 40`(x86)/` 40`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "onGain": {
          "title": "C++ Info",
          "description": "- name: `onGain`(ctype: `hkReal`)\n - offset: ` 36`(x86)/` 36`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        }
      },
      "required": [
        "index",
        "fwdAxisLS",
        "limitAngleDegrees",
        "onGain",
        "offGain",
        "enabled",
        "currentFwdAxisLS"
      ]
    },
    "BSModifyOnceModifier": {
      "title": "C++ Info",
      "description": "- name: `BSModifyOnceModifier`\n - version: `1`\n - signature: `0x1e20a97a`\n - size: ` 80`(x86)/`112`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "cloneState": {
          "title": "C++ Info",
          "description": "- name: `cloneState`(ctype: `enum unknown`)\n - offset: ` 38`(x86)/` 66`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "enable": {
          "title": "C++ Info",
          "description": "- name: `enable`(ctype: `hkBool`)\n - offset: ` 40`(x86)/` 72`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkInt16`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "pOnActivateModifier": {
          "title": "C++ Info",
          "description": "- name: `pOnActivateModifier`(ctype: `struct hkbModifier*`)\n - offset: ` 48`(x86)/` 80`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `ALIGN_16`",
          "type": "string"
        },
        "pOnDeactivateModifier": {
          "title": "C++ Info",
          "description": "- name: `pOnDeactivateModifier`(ctype: `struct hkbModifier*`)\n - offset: ` 64`(x86)/` 96`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `ALIGN_16`",
          "type": "string"
        },
        "padModifier": {
          "title": "C++ Info",
          "description": "- name: `padModifier`(ctype: `hkBool[3]`)\n - offset: ` 41`(x86)/` 73`(x86_64)\n - type_size: `  3`(x86)/`  3`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 3,
          "minItems": 3
        },
        "padNode": {
          "title": "C++ Info",
          "description": "- name: `padNode`(ctype: `hkBool[1]`)\n - offset: ` 39`(x86)/` 67`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 1,
          "minItems": 1
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "userData",
        "id",
        "cloneState",
        "padNode",
        "enable",
        "padModifier",
        "pOnActivateModifier",
        "pOnDeactivateModifier"
      ]
    },
    "BSOffsetAnimationGenerator": {
      "title": "C++ Info",
      "description": "- name: `BSOffsetAnimationGenerator`\n - version: `1`\n - signature: `0xb8571122`\n - size: `128`(x86)/`176`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "BoneIndexA": {
          "title": "C++ Info",
          "description": "- name: `BoneIndexA`(ctype: `hkArray<void>`)\n - offset: ` 92`(x86)/`136`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "BoneOffsetA": {
          "title": "C++ Info",
          "description": "- name: `BoneOffsetA`(ctype: `hkArray<void>`)\n - offset: ` 80`(x86)/`120`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "bOffsetValid": {
          "title": "C++ Info",
          "description": "- name: `bOffsetValid`(ctype: `hkBool`)\n - offset: `113`(x86)/`161`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "bZeroOffset": {
          "title": "C++ Info",
          "description": "- name: `bZeroOffset`(ctype: `hkBool`)\n - offset: `112`(x86)/`160`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "cloneState": {
          "title": "C++ Info",
          "description": "- name: `cloneState`(ctype: `enum unknown`)\n - offset: ` 38`(x86)/` 66`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "fCurrentPercentage": {
          "title": "C++ Info",
          "description": "- name: `fCurrentPercentage`(ctype: `hkReal`)\n - offset: `104`(x86)/`152`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "number",
          "format": "float"
        },
        "fOffsetRangeEnd": {
          "title": "C++ Info",
          "description": "- name: `fOffsetRangeEnd`(ctype: `hkReal`)\n - offset: ` 76`(x86)/`112`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "fOffsetRangeStart": {
          "title": "C++ Info",
          "description": "- name: `fOffsetRangeStart`(ctype: `hkReal`)\n - offset: ` 72`(x86)/`108`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "fOffsetVariable": {
          "title": "C++ Info",
          "description": "- name: `fOffsetVariable`(ctype: `hkReal`)\n - offset: ` 68`(x86)/`104`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "iCurrentFrame": {
          "title": "C++ Info",
          "description": "- name: `iCurrentFrame`(ctype: `hkUint32`)\n - offset: `108`(x86)/`156`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkInt16`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "pDefaultGenerator": {
          "title": "C++ Info",
          "description": "- name: `pDefaultGenerator`(ctype: `struct hkbGenerator*`)\n - offset: ` 48`(x86)/` 80`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `ALIGN_16`",
          "type": "string"
        },
        "pOffsetClipGenerator": {
          "title": "C++ Info",
          "description": "- name: `pOffsetClipGenerator`(ctype: `struct hkbGenerator*`)\n - offset: ` 64`(x86)/` 96`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `ALIGN_16`",
          "type": "string"
        },
        "padNode": {
          "title": "C++ Info",
          "description": "- name: `padNode`(ctype: `hkBool[1]`)\n - offset: ` 39`(x86)/` 67`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 1,
          "minItems": 1
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "userData",
        "id",
        "cloneState",
        "padNode",
        "pDefaultGenerator",
        "pOffsetClipGenerator",
        "fOffsetVariable",
        "fOffsetRangeStart",
        "fOffsetRangeEnd",
        "BoneOffsetA",
        "BoneIndexA",
        "fCurrentPercentage",
        "iCurrentFrame",
        "bZeroOffset",
        "bOffsetValid"
      ]
    },
    "BSPassByTargetTriggerModifier": {
      "title": "C++ Info",
      "description": "- name: `BSPassByTargetTriggerModifier`\n - version: `1`\n - signature: `0x703d7b66`\n - size: `112`(x86)/`160`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "cloneState": {
          "title": "C++ Info",
          "description": "- name: `cloneState`(ctype: `enum unknown`)\n - offset: ` 38`(x86)/` 66`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "enable": {
          "title": "C++ Info",
          "description": "- name: `enable`(ctype: `hkBool`)\n - offset: ` 40`(x86)/` 72`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkInt16`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "movementDirection": {
          "title": "C++ Info",
          "description": "- name: `movementDirection`(ctype: `hkVector4`)\n - offset: ` 80`(x86)/`112`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "padModifier": {
          "title": "C++ Info",
          "description": "- name: `padModifier`(ctype: `hkBool[3]`)\n - offset: ` 41`(x86)/` 73`(x86_64)\n - type_size: `  3`(x86)/`  3`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 3,
          "minItems": 3
        },
        "padNode": {
          "title": "C++ Info",
          "description": "- name: `padNode`(ctype: `hkBool[1]`)\n - offset: ` 39`(x86)/` 67`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 1,
          "minItems": 1
        },
        "radius": {
          "title": "C++ Info",
          "description": "- name: `radius`(ctype: `hkReal`)\n - offset: ` 64`(x86)/` 96`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "targetPassed": {
          "title": "C++ Info",
          "description": "- name: `targetPassed`(ctype: `hkBool`)\n - offset: `104`(x86)/`144`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "targetPosition": {
          "title": "C++ Info",
          "description": "- name: `targetPosition`(ctype: `hkVector4`)\n - offset: ` 48`(x86)/` 80`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "triggerEvent": {
          "title": "C++ Info",
          "description": "- name: `triggerEvent`(ctype: `struct hkbEventProperty`)\n - offset: ` 96`(x86)/`128`(x86_64)\n - type_size: `  8`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/hkbEventProperty"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "userData",
        "id",
        "cloneState",
        "padNode",
        "enable",
        "padModifier",
        "targetPosition",
        "radius",
        "movementDirection",
        "triggerEvent",
        "targetPassed"
      ]
    },
    "BSRagdollContactListenerModifier": {
      "title": "C++ Info",
      "description": "- name: `BSRagdollContactListenerModifier`\n - version: `0`\n - signature: `0x8003d8ce`\n - size: ` 76`(x86)/`136`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "bones": {
          "title": "C++ Info",
          "description": "- name: `bones`(ctype: `struct hkbBoneIndexArray*`)\n - offset: ` 56`(x86)/`104`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "cloneState": {
          "title": "C++ Info",
          "description": "- name: `cloneState`(ctype: `enum unknown`)\n - offset: ` 38`(x86)/` 66`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "contactEvent": {
          "title": "C++ Info",
          "description": "- name: `contactEvent`(ctype: `struct hkbEventProperty`)\n - offset: ` 48`(x86)/` 88`(x86_64)\n - type_size: `  8`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/hkbEventProperty"
        },
        "enable": {
          "title": "C++ Info",
          "description": "- name: `enable`(ctype: `hkBool`)\n - offset: ` 40`(x86)/` 72`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkInt16`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "padModifier": {
          "title": "C++ Info",
          "description": "- name: `padModifier`(ctype: `hkBool[3]`)\n - offset: ` 41`(x86)/` 73`(x86_64)\n - type_size: `  3`(x86)/`  3`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 3,
          "minItems": 3
        },
        "padNode": {
          "title": "C++ Info",
          "description": "- name: `padNode`(ctype: `hkBool[1]`)\n - offset: ` 39`(x86)/` 67`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 1,
          "minItems": 1
        },
        "ragdollRigidBodies": {
          "title": "C++ Info",
          "description": "- name: `ragdollRigidBodies`(ctype: `hkArray<void*>`)\n - offset: ` 64`(x86)/`120`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "throwEvent": {
          "title": "C++ Info",
          "description": "- name: `throwEvent`(ctype: `hkBool`)\n - offset: ` 60`(x86)/`112`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "userData",
        "id",
        "cloneState",
        "padNode",
        "enable",
        "padModifier",
        "contactEvent",
        "bones",
        "throwEvent",
        "ragdollRigidBodies"
      ]
    },
    "BSSpeedSamplerModifier": {
      "title": "C++ Info",
      "description": "- name: `BSSpeedSamplerModifier`\n - version: `1`\n - signature: `0xd297fda9`\n - size: ` 60`(x86)/` 96`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "cloneState": {
          "title": "C++ Info",
          "description": "- name: `cloneState`(ctype: `enum unknown`)\n - offset: ` 38`(x86)/` 66`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "direction": {
          "title": "C++ Info",
          "description": "- name: `direction`(ctype: `hkReal`)\n - offset: ` 48`(x86)/` 84`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "enable": {
          "title": "C++ Info",
          "description": "- name: `enable`(ctype: `hkBool`)\n - offset: ` 40`(x86)/` 72`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "goalSpeed": {
          "title": "C++ Info",
          "description": "- name: `goalSpeed`(ctype: `hkReal`)\n - offset: ` 52`(x86)/` 88`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkInt16`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "padModifier": {
          "title": "C++ Info",
          "description": "- name: `padModifier`(ctype: `hkBool[3]`)\n - offset: ` 41`(x86)/` 73`(x86_64)\n - type_size: `  3`(x86)/`  3`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 3,
          "minItems": 3
        },
        "padNode": {
          "title": "C++ Info",
          "description": "- name: `padNode`(ctype: `hkBool[1]`)\n - offset: ` 39`(x86)/` 67`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 1,
          "minItems": 1
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "speedOut": {
          "title": "C++ Info",
          "description": "- name: `speedOut`(ctype: `hkReal`)\n - offset: ` 56`(x86)/` 92`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "state": {
          "title": "C++ Info",
          "description": "- name: `state`(ctype: `hkInt32`)\n - offset: ` 44`(x86)/` 80`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "userData",
        "id",
        "cloneState",
        "padNode",
        "enable",
        "padModifier",
        "state",
        "direction",
        "goalSpeed",
        "speedOut"
      ]
    },
    "BSSynchronizedClipGenerator": {
      "title": "C++ Info",
      "description": "- name: `BSSynchronizedClipGenerator`\n - version: `1`\n - signature: `0xd83bea64`\n - size: `256`(x86)/`304`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "EndMarkWS": {
          "title": "C++ Info",
          "description": "- name: `EndMarkWS`(ctype: `hkQsTransform`)\n - offset: `128`(x86)/`176`(x86_64)\n - type_size: ` 48`(x86)/` 48`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "$ref": "#/$defs/QsTransform"
        },
        "StartMarkMS": {
          "title": "C++ Info",
          "description": "- name: `StartMarkMS`(ctype: `hkQsTransform`)\n - offset: `176`(x86)/`224`(x86_64)\n - type_size: ` 48`(x86)/` 48`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "$ref": "#/$defs/QsTransform"
        },
        "StartMarkWS": {
          "title": "C++ Info",
          "description": "- name: `StartMarkWS`(ctype: `hkQsTransform`)\n - offset: ` 80`(x86)/`128`(x86_64)\n - type_size: ` 48`(x86)/` 48`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "$ref": "#/$defs/QsTransform"
        },
        "SyncAnimPrefix": {
          "title": "C++ Info",
          "description": "- name: `SyncAnimPrefix`(ctype: `char*`)\n - offset: ` 52`(x86)/` 88`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "bAllCharactersAtMarks": {
          "title": "C++ Info",
          "description": "- name: `bAllCharactersAtMarks`(ctype: `hkBool`)\n - offset: `240`(x86)/`300`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "bAllCharactersInScene": {
          "title": "C++ Info",
          "description": "- name: `bAllCharactersInScene`(ctype: `hkBool`)\n - offset: `239`(x86)/`299`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "bApplyMotionFromRoot": {
          "title": "C++ Info",
          "description": "- name: `bApplyMotionFromRoot`(ctype: `hkBool`)\n - offset: ` 70`(x86)/`110`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "bAtMark": {
          "title": "C++ Info",
          "description": "- name: `bAtMark`(ctype: `hkBool`)\n - offset: `238`(x86)/`298`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "bLeadCharacter": {
          "title": "C++ Info",
          "description": "- name: `bLeadCharacter`(ctype: `hkBool`)\n - offset: ` 68`(x86)/`108`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "bReorientSupportChar": {
          "title": "C++ Info",
          "description": "- name: `bReorientSupportChar`(ctype: `hkBool`)\n - offset: ` 69`(x86)/`109`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "bSyncClipIgnoreMarkPlacement": {
          "title": "C++ Info",
          "description": "- name: `bSyncClipIgnoreMarkPlacement`(ctype: `hkBool`)\n - offset: ` 56`(x86)/` 96`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "cloneState": {
          "title": "C++ Info",
          "description": "- name: `cloneState`(ctype: `enum unknown`)\n - offset: ` 38`(x86)/` 66`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "fCurrentLerp": {
          "title": "C++ Info",
          "description": "- name: `fCurrentLerp`(ctype: `hkReal`)\n - offset: `224`(x86)/`272`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "number",
          "format": "float"
        },
        "fGetToMarkTime": {
          "title": "C++ Info",
          "description": "- name: `fGetToMarkTime`(ctype: `hkReal`)\n - offset: ` 60`(x86)/`100`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "fMarkErrorThreshold": {
          "title": "C++ Info",
          "description": "- name: `fMarkErrorThreshold`(ctype: `hkReal`)\n - offset: ` 64`(x86)/`104`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkInt16`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "pClipGenerator": {
          "title": "C++ Info",
          "description": "- name: `pClipGenerator`(ctype: `struct hkbGenerator*`)\n - offset: ` 48`(x86)/` 80`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `ALIGN_16`",
          "type": "string"
        },
        "pEventMap": {
          "title": "C++ Info",
          "description": "- name: `pEventMap`(ctype: `void*`)\n - offset: `232`(x86)/`288`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "pLocalSyncBinding": {
          "title": "C++ Info",
          "description": "- name: `pLocalSyncBinding`(ctype: `void*`)\n - offset: `228`(x86)/`280`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "pSyncScene": {
          "title": "C++ Info",
          "description": "- name: `pSyncScene`(ctype: `void*`)\n - offset: ` 72`(x86)/`112`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "padNode": {
          "title": "C++ Info",
          "description": "- name: `padNode`(ctype: `hkBool[1]`)\n - offset: ` 39`(x86)/` 67`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 1,
          "minItems": 1
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "sAnimationBindingIndex": {
          "title": "C++ Info",
          "description": "- name: `sAnimationBindingIndex`(ctype: `hkInt16`)\n - offset: `236`(x86)/`296`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "int16"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "userData",
        "id",
        "cloneState",
        "padNode",
        "pClipGenerator",
        "bSyncClipIgnoreMarkPlacement",
        "fGetToMarkTime",
        "fMarkErrorThreshold",
        "bLeadCharacter",
        "bReorientSupportChar",
        "bApplyMotionFromRoot",
        "pSyncScene",
        "StartMarkWS",
        "EndMarkWS",
        "StartMarkMS",
        "fCurrentLerp",
        "pLocalSyncBinding",
        "pEventMap",
        "sAnimationBindingIndex",
        "bAtMark",
        "bAllCharactersInScene",
        "bAllCharactersAtMarks"
      ]
    },
    "BSTimerModifier": {
      "title": "C++ Info",
      "description": "- name: `BSTimerModifier`\n - version: `0`\n - signature: `0x531f3292`\n - size: ` 64`(x86)/`112`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "alarmEvent": {
          "title": "C++ Info",
          "description": "- name: `alarmEvent`(ctype: `struct hkbEventProperty`)\n - offset: ` 48`(x86)/` 88`(x86_64)\n - type_size: `  8`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/hkbEventProperty"
        },
        "alarmTimeSeconds": {
          "title": "C++ Info",
          "description": "- name: `alarmTimeSeconds`(ctype: `hkReal`)\n - offset: ` 44`(x86)/` 80`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "cloneState": {
          "title": "C++ Info",
          "description": "- name: `cloneState`(ctype: `enum unknown`)\n - offset: ` 38`(x86)/` 66`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "enable": {
          "title": "C++ Info",
          "description": "- name: `enable`(ctype: `hkBool`)\n - offset: ` 40`(x86)/` 72`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkInt16`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "padModifier": {
          "title": "C++ Info",
          "description": "- name: `padModifier`(ctype: `hkBool[3]`)\n - offset: ` 41`(x86)/` 73`(x86_64)\n - type_size: `  3`(x86)/`  3`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 3,
          "minItems": 3
        },
        "padNode": {
          "title": "C++ Info",
          "description": "- name: `padNode`(ctype: `hkBool[1]`)\n - offset: ` 39`(x86)/` 67`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 1,
          "minItems": 1
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "resetAlarm": {
          "title": "C++ Info",
          "description": "- name: `resetAlarm`(ctype: `hkBool`)\n - offset: ` 56`(x86)/`104`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "secondsElapsed": {
          "title": "C++ Info",
          "description": "- name: `secondsElapsed`(ctype: `hkReal`)\n - offset: ` 60`(x86)/`108`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "number",
          "format": "float"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "userData",
        "id",
        "cloneState",
        "padNode",
        "enable",
        "padModifier",
        "alarmTimeSeconds",
        "alarmEvent",
        "resetAlarm",
        "secondsElapsed"
      ]
    },
    "BSTweenerModifier": {
      "title": "C++ Info",
      "description": "- name: `BSTweenerModifier`\n - version: `1`\n - signature: `0xd2d9a04`\n - size: `176`(x86)/`208`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "cloneState": {
          "title": "C++ Info",
          "description": "- name: `cloneState`(ctype: `enum unknown`)\n - offset: ` 38`(x86)/` 66`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "duration": {
          "title": "C++ Info",
          "description": "- name: `duration`(ctype: `hkReal`)\n - offset: ` 96`(x86)/`128`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "number",
          "format": "float"
        },
        "enable": {
          "title": "C++ Info",
          "description": "- name: `enable`(ctype: `hkBool`)\n - offset: ` 40`(x86)/` 72`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkInt16`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "padModifier": {
          "title": "C++ Info",
          "description": "- name: `padModifier`(ctype: `hkBool[3]`)\n - offset: ` 41`(x86)/` 73`(x86_64)\n - type_size: `  3`(x86)/`  3`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 3,
          "minItems": 3
        },
        "padNode": {
          "title": "C++ Info",
          "description": "- name: `padNode`(ctype: `hkBool[1]`)\n - offset: ` 39`(x86)/` 67`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 1,
          "minItems": 1
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "startTransform": {
          "title": "C++ Info",
          "description": "- name: `startTransform`(ctype: `hkQsTransform`)\n - offset: `112`(x86)/`144`(x86_64)\n - type_size: ` 48`(x86)/` 48`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "$ref": "#/$defs/QsTransform"
        },
        "targetPosition": {
          "title": "C++ Info",
          "description": "- name: `targetPosition`(ctype: `hkVector4`)\n - offset: ` 64`(x86)/` 96`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "targetRotation": {
          "title": "C++ Info",
          "description": "- name: `targetRotation`(ctype: `hkQuaternion`)\n - offset: ` 80`(x86)/`112`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Quaternion"
        },
        "time": {
          "title": "C++ Info",
          "description": "- name: `time`(ctype: `hkReal`)\n - offset: `160`(x86)/`192`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "number",
          "format": "float"
        },
        "tweenDuration": {
          "title": "C++ Info",
          "description": "- name: `tweenDuration`(ctype: `hkReal`)\n - offset: ` 48`(x86)/` 84`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "tweenPosition": {
          "title": "C++ Info",
          "description": "- name: `tweenPosition`(ctype: `hkBool`)\n - offset: ` 44`(x86)/` 80`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "tweenRotation": {
          "title": "C++ Info",
          "description": "- name: `tweenRotation`(ctype: `hkBool`)\n - offset: ` 45`(x86)/` 81`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "useTweenDuration": {
          "title": "C++ Info",
          "description": "- name: `useTweenDuration`(ctype: `hkBool`)\n - offset: ` 46`(x86)/` 82`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "userData",
        "id",
        "cloneState",
        "padNode",
        "enable",
        "padModifier",
        "tweenPosition",
        "tweenRotation",
        "useTweenDuration",
        "tweenDuration",
        "targetPosition",
        "targetRotation",
        "duration",
        "startTransform",
        "time"
      ]
    },
    "BSiStateTaggingGenerator": {
      "title": "C++ Info",
      "description": "- name: `BSiStateTaggingGenerator`\n - version: `1`\n - signature: `0xf0826fc1`\n - size: ` 64`(x86)/` 96`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "cloneState": {
          "title": "C++ Info",
          "description": "- name: `cloneState`(ctype: `enum unknown`)\n - offset: ` 38`(x86)/` 66`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "iPriority": {
          "title": "C++ Info",
          "description": "- name: `iPriority`(ctype: `hkInt32`)\n - offset: ` 56`(x86)/` 92`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "iStateToSetAs": {
          "title": "C++ Info",
          "description": "- name: `iStateToSetAs`(ctype: `hkInt32`)\n - offset: ` 52`(x86)/` 88`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkInt16`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "pDefaultGenerator": {
          "title": "C++ Info",
          "description": "- name: `pDefaultGenerator`(ctype: `struct hkbGenerator*`)\n - offset: ` 48`(x86)/` 80`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `ALIGN_16`",
          "type": "string"
        },
        "padNode": {
          "title": "C++ Info",
          "description": "- name: `padNode`(ctype: `hkBool[1]`)\n - offset: ` 39`(x86)/` 67`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 1,
          "minItems": 1
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "userData",
        "id",
        "cloneState",
        "padNode",
        "pDefaultGenerator",
        "iStateToSetAs",
        "iPriority"
      ]
    },
    "BindingType": {
      "title": "C++ Info",
      "description": "- name: `BindingType`(ctype: `hkEnum<BindingType, hkInt8>`)",
      "type": "string",
      "enum": [
        "BINDING_TYPE_VARIABLE",
        "BINDING_TYPE_CHARACTER_PROPERTY"
      ]
    },
    "BlendCurve": {
      "title": "C++ Info",
      "description": "- name: `BlendCurve`(ctype: `hkEnum<BlendCurve, hkInt8>`)",
      "type": "string",
      "enum": [
        "BLEND_CURVE_SMOOTH",
        "BLEND_CURVE_LINEAR",
        "BLEND_CURVE_LINEAR_TO_SMOOTH",
        "BLEND_CURVE_SMOOTH_TO_LINEAR"
      ]
    },
    "BlendHint": {
      "title": "C++ Info",
      "description": "- name: `BlendHint`(ctype: `hkEnum<BlendHint, hkInt8>`)",
      "type": "string",
      "enum": [
        "NORMAL",
        "ADDITIVE"
      ]
    },
    "BlendModeFunction": {
      "title": "C++ Info",
      "description": "- name: `BlendModeFunction`(ctype: `hkEnum<BlendModeFunction, hkInt8>`)",
      "type": "string",
      "enum": [
        "BMF_NONE",
        "BMF_PERCENT",
        "BMF_ONE_MINUS_PERCENT"
      ]
    },
    "BroadPhaseBorderBehaviour": {
      "title": "C++ Info",
      "description": "- name: `BroadPhaseBorderBehaviour`(ctype: `hkEnum<BroadPhaseBorderBehaviour, hkInt8>`)",
      "type": "string",
      "enum": [
        "BROADPHASE_BORDER_ASSERT",
        "BROADPHASE_BORDER_FIX_ENTITY",
        "BROADPHASE_BORDER_REMOVE_ENTITY",
        "BROADPHASE_BORDER_DO_NOTHING"
      ]
    },
    "BuildType": {
      "title": "C++ Info",
      "description": "- name: `BuildType`(ctype: `hkEnum<BuildType, hkInt8>`)",
      "type": "string",
      "enum": [
        "BUILT_WITH_CHUNK_SUBDIVISION",
        "BUILT_WITHOUT_CHUNK_SUBDIVISION",
        "BUILD_NOT_SET"
      ]
    },
    "BvTreeType": {
      "title": "C++ Info",
      "description": "- name: `BvTreeType`(ctype: `hkEnum<BvTreeType, hkUint8>`)",
      "type": "string",
      "enum": [
        "BVTREE_MOPP",
        "BVTREE_TRISAMPLED_HEIGHTFIELD",
        "BVTREE_USER",
        "BVTREE_MAX"
      ]
    },
    "CallbackType": {
      "title": "C++ Info",
      "description": "- name: `CallbackType`(ctype: `hkEnum<CallbackType, hkUint32>`)",
      "type": "string",
      "enum": [
        "CALLBACK_MOTOR_TYPE_HAVOK_DEMO_SPRING_DAMPER",
        "CALLBACK_MOTOR_TYPE_USER_0",
        "CALLBACK_MOTOR_TYPE_USER_1",
        "CALLBACK_MOTOR_TYPE_USER_2",
        "CALLBACK_MOTOR_TYPE_USER_3"
      ]
    },
    "CharacterControlCommand": {
      "title": "C++ Info",
      "description": "- name: `CharacterControlCommand`(ctype: `hkEnum<CharacterControlCommand, hkUint8>`)",
      "type": "string",
      "enum": [
        "COMMAND_HIDE",
        "COMMAND_SHOW"
      ]
    },
    "Classes": {
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "BGSGamebryoSequenceGenerator": {
              "$ref": "#/$defs/BGSGamebryoSequenceGenerator"
            }
          },
          "additionalProperties": false,
          "required": [
            "BGSGamebryoSequenceGenerator"
          ]
        },
        {
          "type": "object",
          "properties": {
            "BSBoneSwitchGenerator": {
              "$ref": "#/$defs/BSBoneSwitchGenerator"
            }
          },
          "additionalProperties": false,
          "required": [
            "BSBoneSwitchGenerator"
          ]
        },
        {
          "type": "object",
          "properties": {
            "BSBoneSwitchGeneratorBoneData": {
              "$ref": "#/$defs/BSBoneSwitchGeneratorBoneData"
            }
          },
          "additionalProperties": false,
          "required": [
            "BSBoneSwitchGeneratorBoneData"
          ]
        },
        {
          "type": "object",
          "properties": {
            "BSComputeAddBoneAnimModifier": {
              "$ref": "#/$defs/BSComputeAddBoneAnimModifier"
            }
          },
          "additionalProperties": false,
          "required": [
            "BSComputeAddBoneAnimModifier"
          ]
        },
        {
          "type": "object",
          "properties": {
            "BSCyclicBlendTransitionGenerator": {
              "$ref": "#/$defs/BSCyclicBlendTransitionGenerator"
            }
          },
          "additionalProperties": false,
          "required": [
            "BSCyclicBlendTransitionGenerator"
          ]
        },
        {
          "type": "object",
          "properties": {
            "BSDecomposeVectorModifier": {
              "$ref": "#/$defs/BSDecomposeVectorModifier"
            }
          },
          "additionalProperties": false,
          "required": [
            "BSDecomposeVectorModifier"
          ]
        },
        {
          "type": "object",
          "properties": {
            "BSDirectAtModifier": {
              "$ref": "#/$defs/BSDirectAtModifier"
            }
          },
          "additionalProperties": false,
          "required": [
            "BSDirectAtModifier"
          ]
        },
        {
          "type": "object",
          "properties": {
            "BSDistTriggerModifier": {
              "$ref": "#/$defs/BSDistTriggerModifier"
            }
          },
          "additionalProperties": false,
          "required": [
            "BSDistTriggerModifier"
          ]
        },
        {
          "type": "object",
          "properties": {
            "BSEventEveryNEventsModifier": {
              "$ref": "#/$defs/BSEventEveryNEventsModifier"
            }
          },
          "additionalProperties": false,
          "required": [
            "BSEventEveryNEventsModifier"
          ]
        },
        {
          "type": "object",
          "properties": {
            "BSEventOnDeactivateModifier": {
              "$ref": "#/$defs/BSEventOnDeactivateModifier"
            }
          },
          "additionalProperties": false,
          "required": [
            "BSEventOnDeactivateModifier"
          ]
        },
        {
          "type": "object",
          "properties": {
            "BSEventOnFalseToTrueModifier": {
              "$ref": "#/$defs/BSEventOnFalseToTrueModifier"
            }
          },
          "additionalProperties": false,
          "required": [
            "BSEventOnFalseToTrueModifier"
          ]
        },
        {
          "type": "object",
          "properties": {
            "BSGetTimeStepModifier": {
              "$ref": "#/$defs/BSGetTimeStepModifier"
            }
          },
          "additionalProperties": false,
          "required": [
            "BSGetTimeStepModifier"
          ]
        },
        {
          "type": "object",
          "properties": {
            "BSInterpValueModifier": {
              "$ref": "#/$defs/BSInterpValueModifier"
            }
          },
          "additionalProperties": false,
          "required": [
            "BSInterpValueModifier"
          ]
        },
        {
          "type": "object",
          "properties": {
            "BSIsActiveModifier": {
              "$ref": "#/$defs/BSIsActiveModifier"
            }
          },
          "additionalProperties": false,
          "required": [
            "BSIsActiveModifier"
          ]
        },
        {
          "type": "object",
          "properties": {
            "BSIStateManagerModifier": {
              "$ref": "#/$defs/BSIStateManagerModifier"
            }
          },
          "additionalProperties": false,
          "required": [
            "BSIStateManagerModifier"
          ]
        },
        {
          "type": "object",
          "properties": {
            "BSIStateManagerModifierBSiStateData": {
              "$ref": "#/$defs/BSIStateManagerModifierBSiStateData"
            }
          },
          "additionalProperties": false,
          "required": [
            "BSIStateManagerModifierBSiStateData"
          ]
        },
        {
          "type": "object",
          "properties": {
            "BSIStateManagerModifierBSIStateManagerStateListener": {
              "$ref": "#/$defs/BSIStateManagerModifierBSIStateManagerStateListener"
            }
          },
          "additionalProperties": false,
          "required": [
            "BSIStateManagerModifierBSIStateManagerStateListener"
          ]
        },
        {
          "type": "object",
          "properties": {
            "BSiStateTaggingGenerator": {
              "$ref": "#/$defs/BSiStateTaggingGenerator"
            }
          },
          "additionalProperties": false,
          "required": [
            "BSiStateTaggingGenerator"
          ]
        },
        {
          "type": "object",
          "properties": {
            "BSLimbIKModifier": {
              "$ref": "#/$defs/BSLimbIKModifier"
            }
          },
          "additionalProperties": false,
          "required": [
            "BSLimbIKModifier"
          ]
        },
        {
          "type": "object",
          "properties": {
            "BSLookAtModifier": {
              "$ref": "#/$defs/BSLookAtModifier"
            }
          },
          "additionalProperties": false,
          "required": [
            "BSLookAtModifier"
          ]
        },
        {
          "type": "object",
          "properties": {
            "BSLookAtModifierBoneData": {
              "$ref": "#/$defs/BSLookAtModifierBoneData"
            }
          },
          "additionalProperties": false,
          "required": [
            "BSLookAtModifierBoneData"
          ]
        },
        {
          "type": "object",
          "properties": {
            "BSModifyOnceModifier": {
              "$ref": "#/$defs/BSModifyOnceModifier"
            }
          },
          "additionalProperties": false,
          "required": [
            "BSModifyOnceModifier"
          ]
        },
        {
          "type": "object",
          "properties": {
            "BSOffsetAnimationGenerator": {
              "$ref": "#/$defs/BSOffsetAnimationGenerator"
            }
          },
          "additionalProperties": false,
          "required": [
            "BSOffsetAnimationGenerator"
          ]
        },
        {
          "type": "object",
          "properties": {
            "BSPassByTargetTriggerModifier": {
              "$ref": "#/$defs/BSPassByTargetTriggerModifier"
            }
          },
          "additionalProperties": false,
          "required": [
            "BSPassByTargetTriggerModifier"
          ]
        },
        {
          "type": "object",
          "properties": {
            "BSRagdollContactListenerModifier": {
              "$ref": "#/$defs/BSRagdollContactListenerModifier"
            }
          },
          "additionalProperties": false,
          "required": [
            "BSRagdollContactListenerModifier"
          ]
        },
        {
          "type": "object",
          "properties": {
            "BSSpeedSamplerModifier": {
              "$ref": "#/$defs/BSSpeedSamplerModifier"
            }
          },
          "additionalProperties": false,
          "required": [
            "BSSpeedSamplerModifier"
          ]
        },
        {
          "type": "object",
          "properties": {
            "BSSynchronizedClipGenerator": {
              "$ref": "#/$defs/BSSynchronizedClipGenerator"
            }
          },
          "additionalProperties": false,
          "required": [
            "BSSynchronizedClipGenerator"
          ]
        },
        {
          "type": "object",
          "properties": {
            "BSTimerModifier": {
              "$ref": "#/$defs/BSTimerModifier"
            }
          },
          "additionalProperties": false,
          "required": [
            "BSTimerModifier"
          ]
        },
        {
          "type": "object",
          "properties": {
            "BSTweenerModifier": {
              "$ref": "#/$defs/BSTweenerModifier"
            }
          },
          "additionalProperties": false,
          "required": [
            "BSTweenerModifier"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkAabb": {
              "$ref": "#/$defs/hkAabb"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkAabb"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkAabbHalf": {
              "$ref": "#/$defs/hkAabbHalf"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkAabbHalf"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkAabbUint32": {
              "$ref": "#/$defs/hkAabbUint32"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkAabbUint32"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkaAnimatedReferenceFrame": {
              "$ref": "#/$defs/hkaAnimatedReferenceFrame"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkaAnimatedReferenceFrame"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkaAnimation": {
              "$ref": "#/$defs/hkaAnimation"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkaAnimation"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkaAnimationBinding": {
              "$ref": "#/$defs/hkaAnimationBinding"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkaAnimationBinding"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkaAnimationContainer": {
              "$ref": "#/$defs/hkaAnimationContainer"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkaAnimationContainer"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkaAnimationPreviewColorContainer": {
              "$ref": "#/$defs/hkaAnimationPreviewColorContainer"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkaAnimationPreviewColorContainer"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkaAnnotationTrack": {
              "$ref": "#/$defs/hkaAnnotationTrack"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkaAnnotationTrack"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkaAnnotationTrackAnnotation": {
              "$ref": "#/$defs/hkaAnnotationTrackAnnotation"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkaAnnotationTrackAnnotation"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkaBone": {
              "$ref": "#/$defs/hkaBone"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkaBone"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkaBoneAttachment": {
              "$ref": "#/$defs/hkaBoneAttachment"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkaBoneAttachment"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkaDefaultAnimatedReferenceFrame": {
              "$ref": "#/$defs/hkaDefaultAnimatedReferenceFrame"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkaDefaultAnimatedReferenceFrame"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkaDeltaCompressedAnimation": {
              "$ref": "#/$defs/hkaDeltaCompressedAnimation"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkaDeltaCompressedAnimation"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkaDeltaCompressedAnimationQuantizationFormat": {
              "$ref": "#/$defs/hkaDeltaCompressedAnimationQuantizationFormat"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkaDeltaCompressedAnimationQuantizationFormat"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkaFootstepAnalysisInfo": {
              "$ref": "#/$defs/hkaFootstepAnalysisInfo"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkaFootstepAnalysisInfo"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkaFootstepAnalysisInfoContainer": {
              "$ref": "#/$defs/hkaFootstepAnalysisInfoContainer"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkaFootstepAnalysisInfoContainer"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkaInterleavedUncompressedAnimation": {
              "$ref": "#/$defs/hkaInterleavedUncompressedAnimation"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkaInterleavedUncompressedAnimation"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkaKeyFrameHierarchyUtility": {
              "$ref": "#/$defs/hkaKeyFrameHierarchyUtility"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkaKeyFrameHierarchyUtility"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkaKeyFrameHierarchyUtilityControlData": {
              "$ref": "#/$defs/hkaKeyFrameHierarchyUtilityControlData"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkaKeyFrameHierarchyUtilityControlData"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkAlignSceneToNodeOptions": {
              "$ref": "#/$defs/hkAlignSceneToNodeOptions"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkAlignSceneToNodeOptions"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkaMeshBinding": {
              "$ref": "#/$defs/hkaMeshBinding"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkaMeshBinding"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkaMeshBindingMapping": {
              "$ref": "#/$defs/hkaMeshBindingMapping"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkaMeshBindingMapping"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkaQuantizedAnimation": {
              "$ref": "#/$defs/hkaQuantizedAnimation"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkaQuantizedAnimation"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkaQuantizedAnimationTrackCompressionParams": {
              "$ref": "#/$defs/hkaQuantizedAnimationTrackCompressionParams"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkaQuantizedAnimationTrackCompressionParams"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkaRagdollInstance": {
              "$ref": "#/$defs/hkaRagdollInstance"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkaRagdollInstance"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkArrayTypeAttribute": {
              "$ref": "#/$defs/hkArrayTypeAttribute"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkArrayTypeAttribute"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkaSkeleton": {
              "$ref": "#/$defs/hkaSkeleton"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkaSkeleton"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkaSkeletonLocalFrameOnBone": {
              "$ref": "#/$defs/hkaSkeletonLocalFrameOnBone"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkaSkeletonLocalFrameOnBone"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkaSkeletonMapper": {
              "$ref": "#/$defs/hkaSkeletonMapper"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkaSkeletonMapper"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkaSkeletonMapperData": {
              "$ref": "#/$defs/hkaSkeletonMapperData"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkaSkeletonMapperData"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkaSkeletonMapperDataChainMapping": {
              "$ref": "#/$defs/hkaSkeletonMapperDataChainMapping"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkaSkeletonMapperDataChainMapping"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkaSkeletonMapperDataSimpleMapping": {
              "$ref": "#/$defs/hkaSkeletonMapperDataSimpleMapping"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkaSkeletonMapperDataSimpleMapping"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkaSplineCompressedAnimation": {
              "$ref": "#/$defs/hkaSplineCompressedAnimation"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkaSplineCompressedAnimation"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkaSplineCompressedAnimationAnimationCompressionParams": {
              "$ref": "#/$defs/hkaSplineCompressedAnimationAnimationCompressionParams"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkaSplineCompressedAnimationAnimationCompressionParams"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkaSplineCompressedAnimationTrackCompressionParams": {
              "$ref": "#/$defs/hkaSplineCompressedAnimationTrackCompressionParams"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkaSplineCompressedAnimationTrackCompressionParams"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkaWaveletCompressedAnimation": {
              "$ref": "#/$defs/hkaWaveletCompressedAnimation"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkaWaveletCompressedAnimation"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkaWaveletCompressedAnimationCompressionParams": {
              "$ref": "#/$defs/hkaWaveletCompressedAnimationCompressionParams"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkaWaveletCompressedAnimationCompressionParams"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkaWaveletCompressedAnimationQuantizationFormat": {
              "$ref": "#/$defs/hkaWaveletCompressedAnimationQuantizationFormat"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkaWaveletCompressedAnimationQuantizationFormat"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkBaseObject": {
              "$ref": "#/$defs/hkBaseObject"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkBaseObject"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbAttachmentModifier": {
              "$ref": "#/$defs/hkbAttachmentModifier"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbAttachmentModifier"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbAttachmentSetup": {
              "$ref": "#/$defs/hkbAttachmentSetup"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbAttachmentSetup"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbAttributeModifier": {
              "$ref": "#/$defs/hkbAttributeModifier"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbAttributeModifier"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbAttributeModifierAssignment": {
              "$ref": "#/$defs/hkbAttributeModifierAssignment"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbAttributeModifierAssignment"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbAuxiliaryNodeInfo": {
              "$ref": "#/$defs/hkbAuxiliaryNodeInfo"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbAuxiliaryNodeInfo"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbBehaviorEventsInfo": {
              "$ref": "#/$defs/hkbBehaviorEventsInfo"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbBehaviorEventsInfo"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbBehaviorGraph": {
              "$ref": "#/$defs/hkbBehaviorGraph"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbBehaviorGraph"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbBehaviorGraphData": {
              "$ref": "#/$defs/hkbBehaviorGraphData"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbBehaviorGraphData"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbBehaviorGraphInternalState": {
              "$ref": "#/$defs/hkbBehaviorGraphInternalState"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbBehaviorGraphInternalState"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbBehaviorGraphInternalStateInfo": {
              "$ref": "#/$defs/hkbBehaviorGraphInternalStateInfo"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbBehaviorGraphInternalStateInfo"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbBehaviorGraphStringData": {
              "$ref": "#/$defs/hkbBehaviorGraphStringData"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbBehaviorGraphStringData"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbBehaviorInfo": {
              "$ref": "#/$defs/hkbBehaviorInfo"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbBehaviorInfo"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbBehaviorInfoIdToNamePair": {
              "$ref": "#/$defs/hkbBehaviorInfoIdToNamePair"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbBehaviorInfoIdToNamePair"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbBehaviorReferenceGenerator": {
              "$ref": "#/$defs/hkbBehaviorReferenceGenerator"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbBehaviorReferenceGenerator"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbBindable": {
              "$ref": "#/$defs/hkbBindable"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbBindable"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbBlendCurveUtils": {
              "$ref": "#/$defs/hkbBlendCurveUtils"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbBlendCurveUtils"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbBlenderGenerator": {
              "$ref": "#/$defs/hkbBlenderGenerator"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbBlenderGenerator"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbBlenderGeneratorChild": {
              "$ref": "#/$defs/hkbBlenderGeneratorChild"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbBlenderGeneratorChild"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbBlenderGeneratorChildInternalState": {
              "$ref": "#/$defs/hkbBlenderGeneratorChildInternalState"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbBlenderGeneratorChildInternalState"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbBlenderGeneratorInternalState": {
              "$ref": "#/$defs/hkbBlenderGeneratorInternalState"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbBlenderGeneratorInternalState"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbBlendingTransitionEffect": {
              "$ref": "#/$defs/hkbBlendingTransitionEffect"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbBlendingTransitionEffect"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbBlendingTransitionEffectInternalState": {
              "$ref": "#/$defs/hkbBlendingTransitionEffectInternalState"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbBlendingTransitionEffectInternalState"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbBoneIndexArray": {
              "$ref": "#/$defs/hkbBoneIndexArray"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbBoneIndexArray"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbBoneWeightArray": {
              "$ref": "#/$defs/hkbBoneWeightArray"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbBoneWeightArray"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbBoolVariableSequencedData": {
              "$ref": "#/$defs/hkbBoolVariableSequencedData"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbBoolVariableSequencedData"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbBoolVariableSequencedDataSample": {
              "$ref": "#/$defs/hkbBoolVariableSequencedDataSample"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbBoolVariableSequencedDataSample"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbCameraShakeEventPayload": {
              "$ref": "#/$defs/hkbCameraShakeEventPayload"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbCameraShakeEventPayload"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbCharacter": {
              "$ref": "#/$defs/hkbCharacter"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbCharacter"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbCharacterAddedInfo": {
              "$ref": "#/$defs/hkbCharacterAddedInfo"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbCharacterAddedInfo"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbCharacterControlCommand": {
              "$ref": "#/$defs/hkbCharacterControlCommand"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbCharacterControlCommand"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbCharacterControllerControlData": {
              "$ref": "#/$defs/hkbCharacterControllerControlData"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbCharacterControllerControlData"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbCharacterControllerModifier": {
              "$ref": "#/$defs/hkbCharacterControllerModifier"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbCharacterControllerModifier"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbCharacterControllerModifierInternalState": {
              "$ref": "#/$defs/hkbCharacterControllerModifierInternalState"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbCharacterControllerModifierInternalState"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbCharacterData": {
              "$ref": "#/$defs/hkbCharacterData"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbCharacterData"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbCharacterDataCharacterControllerInfo": {
              "$ref": "#/$defs/hkbCharacterDataCharacterControllerInfo"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbCharacterDataCharacterControllerInfo"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbCharacterInfo": {
              "$ref": "#/$defs/hkbCharacterInfo"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbCharacterInfo"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbCharacterSetup": {
              "$ref": "#/$defs/hkbCharacterSetup"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbCharacterSetup"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbCharacterSkinInfo": {
              "$ref": "#/$defs/hkbCharacterSkinInfo"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbCharacterSkinInfo"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbCharacterSteppedInfo": {
              "$ref": "#/$defs/hkbCharacterSteppedInfo"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbCharacterSteppedInfo"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbCharacterStringData": {
              "$ref": "#/$defs/hkbCharacterStringData"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbCharacterStringData"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbClientCharacterState": {
              "$ref": "#/$defs/hkbClientCharacterState"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbClientCharacterState"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbClipGenerator": {
              "$ref": "#/$defs/hkbClipGenerator"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbClipGenerator"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbClipGeneratorEcho": {
              "$ref": "#/$defs/hkbClipGeneratorEcho"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbClipGeneratorEcho"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbClipGeneratorInternalState": {
              "$ref": "#/$defs/hkbClipGeneratorInternalState"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbClipGeneratorInternalState"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbClipTrigger": {
              "$ref": "#/$defs/hkbClipTrigger"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbClipTrigger"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbClipTriggerArray": {
              "$ref": "#/$defs/hkbClipTriggerArray"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbClipTriggerArray"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbCombineTransformsModifier": {
              "$ref": "#/$defs/hkbCombineTransformsModifier"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbCombineTransformsModifier"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbCombineTransformsModifierInternalState": {
              "$ref": "#/$defs/hkbCombineTransformsModifierInternalState"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbCombineTransformsModifierInternalState"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbCompiledExpressionSet": {
              "$ref": "#/$defs/hkbCompiledExpressionSet"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbCompiledExpressionSet"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbCompiledExpressionSetToken": {
              "$ref": "#/$defs/hkbCompiledExpressionSetToken"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbCompiledExpressionSetToken"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbComputeDirectionModifier": {
              "$ref": "#/$defs/hkbComputeDirectionModifier"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbComputeDirectionModifier"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbComputeDirectionModifierInternalState": {
              "$ref": "#/$defs/hkbComputeDirectionModifierInternalState"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbComputeDirectionModifierInternalState"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbComputeRotationFromAxisAngleModifier": {
              "$ref": "#/$defs/hkbComputeRotationFromAxisAngleModifier"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbComputeRotationFromAxisAngleModifier"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbComputeRotationFromAxisAngleModifierInternalState": {
              "$ref": "#/$defs/hkbComputeRotationFromAxisAngleModifierInternalState"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbComputeRotationFromAxisAngleModifierInternalState"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbComputeRotationToTargetModifier": {
              "$ref": "#/$defs/hkbComputeRotationToTargetModifier"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbComputeRotationToTargetModifier"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbComputeRotationToTargetModifierInternalState": {
              "$ref": "#/$defs/hkbComputeRotationToTargetModifierInternalState"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbComputeRotationToTargetModifierInternalState"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbCondition": {
              "$ref": "#/$defs/hkbCondition"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbCondition"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbContext": {
              "$ref": "#/$defs/hkbContext"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbContext"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbDampingModifier": {
              "$ref": "#/$defs/hkbDampingModifier"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbDampingModifier"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbDampingModifierInternalState": {
              "$ref": "#/$defs/hkbDampingModifierInternalState"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbDampingModifierInternalState"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbDefaultMessageLog": {
              "$ref": "#/$defs/hkbDefaultMessageLog"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbDefaultMessageLog"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbDelayedModifier": {
              "$ref": "#/$defs/hkbDelayedModifier"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbDelayedModifier"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbDelayedModifierInternalState": {
              "$ref": "#/$defs/hkbDelayedModifierInternalState"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbDelayedModifierInternalState"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbDetectCloseToGroundModifier": {
              "$ref": "#/$defs/hkbDetectCloseToGroundModifier"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbDetectCloseToGroundModifier"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbDetectCloseToGroundModifierInternalState": {
              "$ref": "#/$defs/hkbDetectCloseToGroundModifierInternalState"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbDetectCloseToGroundModifierInternalState"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbEvaluateExpressionModifier": {
              "$ref": "#/$defs/hkbEvaluateExpressionModifier"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbEvaluateExpressionModifier"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbEvaluateExpressionModifierInternalExpressionData": {
              "$ref": "#/$defs/hkbEvaluateExpressionModifierInternalExpressionData"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbEvaluateExpressionModifierInternalExpressionData"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbEvaluateExpressionModifierInternalState": {
              "$ref": "#/$defs/hkbEvaluateExpressionModifierInternalState"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbEvaluateExpressionModifierInternalState"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbEvaluateHandleModifier": {
              "$ref": "#/$defs/hkbEvaluateHandleModifier"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbEvaluateHandleModifier"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbEvent": {
              "$ref": "#/$defs/hkbEvent"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbEvent"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbEventBase": {
              "$ref": "#/$defs/hkbEventBase"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbEventBase"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbEventDrivenModifier": {
              "$ref": "#/$defs/hkbEventDrivenModifier"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbEventDrivenModifier"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbEventDrivenModifierInternalState": {
              "$ref": "#/$defs/hkbEventDrivenModifierInternalState"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbEventDrivenModifierInternalState"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbEventInfo": {
              "$ref": "#/$defs/hkbEventInfo"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbEventInfo"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbEventPayload": {
              "$ref": "#/$defs/hkbEventPayload"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbEventPayload"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbEventPayloadList": {
              "$ref": "#/$defs/hkbEventPayloadList"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbEventPayloadList"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbEventProperty": {
              "$ref": "#/$defs/hkbEventProperty"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbEventProperty"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbEventRaisedInfo": {
              "$ref": "#/$defs/hkbEventRaisedInfo"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbEventRaisedInfo"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbEventRangeData": {
              "$ref": "#/$defs/hkbEventRangeData"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbEventRangeData"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbEventRangeDataArray": {
              "$ref": "#/$defs/hkbEventRangeDataArray"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbEventRangeDataArray"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbEventSequencedData": {
              "$ref": "#/$defs/hkbEventSequencedData"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbEventSequencedData"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbEventSequencedDataSequencedEvent": {
              "$ref": "#/$defs/hkbEventSequencedDataSequencedEvent"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbEventSequencedDataSequencedEvent"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbEventsFromRangeModifier": {
              "$ref": "#/$defs/hkbEventsFromRangeModifier"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbEventsFromRangeModifier"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbEventsFromRangeModifierInternalState": {
              "$ref": "#/$defs/hkbEventsFromRangeModifierInternalState"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbEventsFromRangeModifierInternalState"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbExpressionCondition": {
              "$ref": "#/$defs/hkbExpressionCondition"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbExpressionCondition"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbExpressionData": {
              "$ref": "#/$defs/hkbExpressionData"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbExpressionData"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbExpressionDataArray": {
              "$ref": "#/$defs/hkbExpressionDataArray"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbExpressionDataArray"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbExtractRagdollPoseModifier": {
              "$ref": "#/$defs/hkbExtractRagdollPoseModifier"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbExtractRagdollPoseModifier"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbFootIkControlData": {
              "$ref": "#/$defs/hkbFootIkControlData"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbFootIkControlData"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbFootIkControlsModifier": {
              "$ref": "#/$defs/hkbFootIkControlsModifier"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbFootIkControlsModifier"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbFootIkControlsModifierLeg": {
              "$ref": "#/$defs/hkbFootIkControlsModifierLeg"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbFootIkControlsModifierLeg"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbFootIkDriverInfo": {
              "$ref": "#/$defs/hkbFootIkDriverInfo"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbFootIkDriverInfo"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbFootIkDriverInfoLeg": {
              "$ref": "#/$defs/hkbFootIkDriverInfoLeg"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbFootIkDriverInfoLeg"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbFootIkGains": {
              "$ref": "#/$defs/hkbFootIkGains"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbFootIkGains"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbFootIkModifier": {
              "$ref": "#/$defs/hkbFootIkModifier"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbFootIkModifier"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbFootIkModifierInternalLegData": {
              "$ref": "#/$defs/hkbFootIkModifierInternalLegData"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbFootIkModifierInternalLegData"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbFootIkModifierLeg": {
              "$ref": "#/$defs/hkbFootIkModifierLeg"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbFootIkModifierLeg"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbGenerator": {
              "$ref": "#/$defs/hkbGenerator"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbGenerator"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbGeneratorOutputListener": {
              "$ref": "#/$defs/hkbGeneratorOutputListener"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbGeneratorOutputListener"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbGeneratorSyncInfo": {
              "$ref": "#/$defs/hkbGeneratorSyncInfo"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbGeneratorSyncInfo"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbGeneratorSyncInfoSyncPoint": {
              "$ref": "#/$defs/hkbGeneratorSyncInfoSyncPoint"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbGeneratorSyncInfoSyncPoint"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbGeneratorTransitionEffect": {
              "$ref": "#/$defs/hkbGeneratorTransitionEffect"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbGeneratorTransitionEffect"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbGeneratorTransitionEffectInternalState": {
              "$ref": "#/$defs/hkbGeneratorTransitionEffectInternalState"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbGeneratorTransitionEffectInternalState"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbGetHandleOnBoneModifier": {
              "$ref": "#/$defs/hkbGetHandleOnBoneModifier"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbGetHandleOnBoneModifier"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbGetUpModifier": {
              "$ref": "#/$defs/hkbGetUpModifier"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbGetUpModifier"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbGetUpModifierInternalState": {
              "$ref": "#/$defs/hkbGetUpModifierInternalState"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbGetUpModifierInternalState"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbGetWorldFromModelModifier": {
              "$ref": "#/$defs/hkbGetWorldFromModelModifier"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbGetWorldFromModelModifier"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbGetWorldFromModelModifierInternalState": {
              "$ref": "#/$defs/hkbGetWorldFromModelModifierInternalState"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbGetWorldFromModelModifierInternalState"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbHandIkControlData": {
              "$ref": "#/$defs/hkbHandIkControlData"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbHandIkControlData"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbHandIkControlsModifier": {
              "$ref": "#/$defs/hkbHandIkControlsModifier"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbHandIkControlsModifier"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbHandIkControlsModifierHand": {
              "$ref": "#/$defs/hkbHandIkControlsModifierHand"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbHandIkControlsModifierHand"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbHandIkDriverInfo": {
              "$ref": "#/$defs/hkbHandIkDriverInfo"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbHandIkDriverInfo"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbHandIkDriverInfoHand": {
              "$ref": "#/$defs/hkbHandIkDriverInfoHand"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbHandIkDriverInfoHand"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbHandIkModifier": {
              "$ref": "#/$defs/hkbHandIkModifier"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbHandIkModifier"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbHandIkModifierHand": {
              "$ref": "#/$defs/hkbHandIkModifierHand"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbHandIkModifierHand"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbHandle": {
              "$ref": "#/$defs/hkbHandle"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbHandle"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbIntEventPayload": {
              "$ref": "#/$defs/hkbIntEventPayload"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbIntEventPayload"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbIntVariableSequencedData": {
              "$ref": "#/$defs/hkbIntVariableSequencedData"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbIntVariableSequencedData"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbIntVariableSequencedDataSample": {
              "$ref": "#/$defs/hkbIntVariableSequencedDataSample"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbIntVariableSequencedDataSample"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkBitField": {
              "$ref": "#/$defs/hkBitField"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkBitField"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbKeyframeBonesModifier": {
              "$ref": "#/$defs/hkbKeyframeBonesModifier"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbKeyframeBonesModifier"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbKeyframeBonesModifierKeyframeInfo": {
              "$ref": "#/$defs/hkbKeyframeBonesModifierKeyframeInfo"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbKeyframeBonesModifierKeyframeInfo"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbLinkedSymbolInfo": {
              "$ref": "#/$defs/hkbLinkedSymbolInfo"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbLinkedSymbolInfo"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbLookAtModifier": {
              "$ref": "#/$defs/hkbLookAtModifier"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbLookAtModifier"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbLookAtModifierInternalState": {
              "$ref": "#/$defs/hkbLookAtModifierInternalState"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbLookAtModifierInternalState"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbManualSelectorGenerator": {
              "$ref": "#/$defs/hkbManualSelectorGenerator"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbManualSelectorGenerator"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbManualSelectorGeneratorInternalState": {
              "$ref": "#/$defs/hkbManualSelectorGeneratorInternalState"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbManualSelectorGeneratorInternalState"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbMessageLog": {
              "$ref": "#/$defs/hkbMessageLog"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbMessageLog"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbMirroredSkeletonInfo": {
              "$ref": "#/$defs/hkbMirroredSkeletonInfo"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbMirroredSkeletonInfo"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbMirrorModifier": {
              "$ref": "#/$defs/hkbMirrorModifier"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbMirrorModifier"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbModifier": {
              "$ref": "#/$defs/hkbModifier"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbModifier"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbModifierGenerator": {
              "$ref": "#/$defs/hkbModifierGenerator"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbModifierGenerator"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbModifierList": {
              "$ref": "#/$defs/hkbModifierList"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbModifierList"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbModifierWrapper": {
              "$ref": "#/$defs/hkbModifierWrapper"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbModifierWrapper"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbMoveCharacterModifier": {
              "$ref": "#/$defs/hkbMoveCharacterModifier"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbMoveCharacterModifier"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbMoveCharacterModifierInternalState": {
              "$ref": "#/$defs/hkbMoveCharacterModifierInternalState"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbMoveCharacterModifierInternalState"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbNamedEventPayload": {
              "$ref": "#/$defs/hkbNamedEventPayload"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbNamedEventPayload"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbNamedIntEventPayload": {
              "$ref": "#/$defs/hkbNamedIntEventPayload"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbNamedIntEventPayload"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbNamedRealEventPayload": {
              "$ref": "#/$defs/hkbNamedRealEventPayload"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbNamedRealEventPayload"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbNamedStringEventPayload": {
              "$ref": "#/$defs/hkbNamedStringEventPayload"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbNamedStringEventPayload"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbNode": {
              "$ref": "#/$defs/hkbNode"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbNode"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbNodeInternalStateInfo": {
              "$ref": "#/$defs/hkbNodeInternalStateInfo"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbNodeInternalStateInfo"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbParticleSystemEventPayload": {
              "$ref": "#/$defs/hkbParticleSystemEventPayload"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbParticleSystemEventPayload"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbPoseMatchingGenerator": {
              "$ref": "#/$defs/hkbPoseMatchingGenerator"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbPoseMatchingGenerator"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbPoseMatchingGeneratorInternalState": {
              "$ref": "#/$defs/hkbPoseMatchingGeneratorInternalState"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbPoseMatchingGeneratorInternalState"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbPoweredRagdollControlData": {
              "$ref": "#/$defs/hkbPoweredRagdollControlData"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbPoweredRagdollControlData"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbPoweredRagdollControlsModifier": {
              "$ref": "#/$defs/hkbPoweredRagdollControlsModifier"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbPoweredRagdollControlsModifier"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbProjectData": {
              "$ref": "#/$defs/hkbProjectData"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbProjectData"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbProjectStringData": {
              "$ref": "#/$defs/hkbProjectStringData"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbProjectStringData"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbProxyModifier": {
              "$ref": "#/$defs/hkbProxyModifier"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbProxyModifier"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbProxyModifierProxyInfo": {
              "$ref": "#/$defs/hkbProxyModifierProxyInfo"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbProxyModifierProxyInfo"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbRaiseEventCommand": {
              "$ref": "#/$defs/hkbRaiseEventCommand"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbRaiseEventCommand"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbRealEventPayload": {
              "$ref": "#/$defs/hkbRealEventPayload"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbRealEventPayload"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbRealVariableSequencedData": {
              "$ref": "#/$defs/hkbRealVariableSequencedData"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbRealVariableSequencedData"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbRealVariableSequencedDataSample": {
              "$ref": "#/$defs/hkbRealVariableSequencedDataSample"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbRealVariableSequencedDataSample"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbReferencePoseGenerator": {
              "$ref": "#/$defs/hkbReferencePoseGenerator"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbReferencePoseGenerator"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbRegisteredGenerator": {
              "$ref": "#/$defs/hkbRegisteredGenerator"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbRegisteredGenerator"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbRigidBodyRagdollControlData": {
              "$ref": "#/$defs/hkbRigidBodyRagdollControlData"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbRigidBodyRagdollControlData"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbRigidBodyRagdollControlsModifier": {
              "$ref": "#/$defs/hkbRigidBodyRagdollControlsModifier"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbRigidBodyRagdollControlsModifier"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbRoleAttribute": {
              "$ref": "#/$defs/hkbRoleAttribute"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbRoleAttribute"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbRotateCharacterModifier": {
              "$ref": "#/$defs/hkbRotateCharacterModifier"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbRotateCharacterModifier"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbRotateCharacterModifierInternalState": {
              "$ref": "#/$defs/hkbRotateCharacterModifierInternalState"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbRotateCharacterModifierInternalState"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbSenseHandleModifier": {
              "$ref": "#/$defs/hkbSenseHandleModifier"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbSenseHandleModifier"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbSenseHandleModifierRange": {
              "$ref": "#/$defs/hkbSenseHandleModifierRange"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbSenseHandleModifierRange"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbSequence": {
              "$ref": "#/$defs/hkbSequence"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbSequence"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbSequencedData": {
              "$ref": "#/$defs/hkbSequencedData"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbSequencedData"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbSequenceInternalState": {
              "$ref": "#/$defs/hkbSequenceInternalState"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbSequenceInternalState"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbSequenceStringData": {
              "$ref": "#/$defs/hkbSequenceStringData"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbSequenceStringData"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbSetBehaviorCommand": {
              "$ref": "#/$defs/hkbSetBehaviorCommand"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbSetBehaviorCommand"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbSetLocalTimeOfClipGeneratorCommand": {
              "$ref": "#/$defs/hkbSetLocalTimeOfClipGeneratorCommand"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbSetLocalTimeOfClipGeneratorCommand"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbSetNodePropertyCommand": {
              "$ref": "#/$defs/hkbSetNodePropertyCommand"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbSetNodePropertyCommand"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbSetWordVariableCommand": {
              "$ref": "#/$defs/hkbSetWordVariableCommand"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbSetWordVariableCommand"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbSetWorldFromModelModifier": {
              "$ref": "#/$defs/hkbSetWorldFromModelModifier"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbSetWorldFromModelModifier"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbSimulationControlCommand": {
              "$ref": "#/$defs/hkbSimulationControlCommand"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbSimulationControlCommand"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbSimulationStateInfo": {
              "$ref": "#/$defs/hkbSimulationStateInfo"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbSimulationStateInfo"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbStateChooser": {
              "$ref": "#/$defs/hkbStateChooser"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbStateChooser"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbStateListener": {
              "$ref": "#/$defs/hkbStateListener"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbStateListener"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbStateMachine": {
              "$ref": "#/$defs/hkbStateMachine"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbStateMachine"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbStateMachineActiveTransitionInfo": {
              "$ref": "#/$defs/hkbStateMachineActiveTransitionInfo"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbStateMachineActiveTransitionInfo"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbStateMachineDelayedTransitionInfo": {
              "$ref": "#/$defs/hkbStateMachineDelayedTransitionInfo"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbStateMachineDelayedTransitionInfo"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbStateMachineEventPropertyArray": {
              "$ref": "#/$defs/hkbStateMachineEventPropertyArray"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbStateMachineEventPropertyArray"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbStateMachineInternalState": {
              "$ref": "#/$defs/hkbStateMachineInternalState"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbStateMachineInternalState"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbStateMachineNestedStateMachineData": {
              "$ref": "#/$defs/hkbStateMachineNestedStateMachineData"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbStateMachineNestedStateMachineData"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbStateMachineProspectiveTransitionInfo": {
              "$ref": "#/$defs/hkbStateMachineProspectiveTransitionInfo"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbStateMachineProspectiveTransitionInfo"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbStateMachineStateInfo": {
              "$ref": "#/$defs/hkbStateMachineStateInfo"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbStateMachineStateInfo"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbStateMachineTimeInterval": {
              "$ref": "#/$defs/hkbStateMachineTimeInterval"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbStateMachineTimeInterval"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbStateMachineTransitionInfo": {
              "$ref": "#/$defs/hkbStateMachineTransitionInfo"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbStateMachineTransitionInfo"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbStateMachineTransitionInfoArray": {
              "$ref": "#/$defs/hkbStateMachineTransitionInfoArray"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbStateMachineTransitionInfoArray"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbStateMachineTransitionInfoReference": {
              "$ref": "#/$defs/hkbStateMachineTransitionInfoReference"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbStateMachineTransitionInfoReference"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbStringCondition": {
              "$ref": "#/$defs/hkbStringCondition"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbStringCondition"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbStringEventPayload": {
              "$ref": "#/$defs/hkbStringEventPayload"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbStringEventPayload"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbTestStateChooser": {
              "$ref": "#/$defs/hkbTestStateChooser"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbTestStateChooser"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbTimerModifier": {
              "$ref": "#/$defs/hkbTimerModifier"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbTimerModifier"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbTimerModifierInternalState": {
              "$ref": "#/$defs/hkbTimerModifierInternalState"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbTimerModifierInternalState"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbTransformVectorModifier": {
              "$ref": "#/$defs/hkbTransformVectorModifier"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbTransformVectorModifier"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbTransformVectorModifierInternalState": {
              "$ref": "#/$defs/hkbTransformVectorModifierInternalState"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbTransformVectorModifierInternalState"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbTransitionEffect": {
              "$ref": "#/$defs/hkbTransitionEffect"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbTransitionEffect"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbTwistModifier": {
              "$ref": "#/$defs/hkbTwistModifier"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbTwistModifier"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbVariableBindingSet": {
              "$ref": "#/$defs/hkbVariableBindingSet"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbVariableBindingSet"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbVariableBindingSetBinding": {
              "$ref": "#/$defs/hkbVariableBindingSetBinding"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbVariableBindingSetBinding"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbVariableInfo": {
              "$ref": "#/$defs/hkbVariableInfo"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbVariableInfo"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbVariableValue": {
              "$ref": "#/$defs/hkbVariableValue"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbVariableValue"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbVariableValueSet": {
              "$ref": "#/$defs/hkbVariableValueSet"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbVariableValueSet"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbWorldEnums": {
              "$ref": "#/$defs/hkbWorldEnums"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbWorldEnums"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkbWorldFromModelModeData": {
              "$ref": "#/$defs/hkbWorldFromModelModeData"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkbWorldFromModelModeData"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkClass": {
              "$ref": "#/$defs/hkClass"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkClass"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkClassEnum": {
              "$ref": "#/$defs/hkClassEnum"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkClassEnum"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkClassEnumItem": {
              "$ref": "#/$defs/hkClassEnumItem"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkClassEnumItem"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkClassMember": {
              "$ref": "#/$defs/hkClassMember"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkClassMember"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkColor": {
              "$ref": "#/$defs/hkColor"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkColor"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkContactPoint": {
              "$ref": "#/$defs/hkContactPoint"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkContactPoint"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkContactPointMaterial": {
              "$ref": "#/$defs/hkContactPointMaterial"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkContactPointMaterial"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkCustomAttributes": {
              "$ref": "#/$defs/hkCustomAttributes"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkCustomAttributes"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkCustomAttributesAttribute": {
              "$ref": "#/$defs/hkCustomAttributesAttribute"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkCustomAttributesAttribute"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkDataObjectTypeAttribute": {
              "$ref": "#/$defs/hkDataObjectTypeAttribute"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkDataObjectTypeAttribute"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkDescriptionAttribute": {
              "$ref": "#/$defs/hkDescriptionAttribute"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkDescriptionAttribute"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkDocumentationAttribute": {
              "$ref": "#/$defs/hkDocumentationAttribute"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkDocumentationAttribute"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkGeometry": {
              "$ref": "#/$defs/hkGeometry"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkGeometry"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkGeometryTriangle": {
              "$ref": "#/$defs/hkGeometryTriangle"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkGeometryTriangle"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkGizmoAttribute": {
              "$ref": "#/$defs/hkGizmoAttribute"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkGizmoAttribute"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkHalf8": {
              "$ref": "#/$defs/hkHalf8"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkHalf8"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkIndexedTransformSet": {
              "$ref": "#/$defs/hkIndexedTransformSet"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkIndexedTransformSet"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkLinkAttribute": {
              "$ref": "#/$defs/hkLinkAttribute"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkLinkAttribute"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkLocalFrame": {
              "$ref": "#/$defs/hkLocalFrame"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkLocalFrame"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkLocalFrameGroup": {
              "$ref": "#/$defs/hkLocalFrameGroup"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkLocalFrameGroup"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkMemoryMeshBody": {
              "$ref": "#/$defs/hkMemoryMeshBody"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkMemoryMeshBody"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkMemoryMeshMaterial": {
              "$ref": "#/$defs/hkMemoryMeshMaterial"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkMemoryMeshMaterial"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkMemoryMeshShape": {
              "$ref": "#/$defs/hkMemoryMeshShape"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkMemoryMeshShape"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkMemoryMeshTexture": {
              "$ref": "#/$defs/hkMemoryMeshTexture"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkMemoryMeshTexture"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkMemoryMeshVertexBuffer": {
              "$ref": "#/$defs/hkMemoryMeshVertexBuffer"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkMemoryMeshVertexBuffer"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkMemoryResourceContainer": {
              "$ref": "#/$defs/hkMemoryResourceContainer"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkMemoryResourceContainer"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkMemoryResourceHandle": {
              "$ref": "#/$defs/hkMemoryResourceHandle"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkMemoryResourceHandle"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkMemoryResourceHandleExternalLink": {
              "$ref": "#/$defs/hkMemoryResourceHandleExternalLink"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkMemoryResourceHandleExternalLink"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkMemoryTrackerAttribute": {
              "$ref": "#/$defs/hkMemoryTrackerAttribute"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkMemoryTrackerAttribute"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkMeshBody": {
              "$ref": "#/$defs/hkMeshBody"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkMeshBody"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkMeshBoneIndexMapping": {
              "$ref": "#/$defs/hkMeshBoneIndexMapping"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkMeshBoneIndexMapping"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkMeshMaterial": {
              "$ref": "#/$defs/hkMeshMaterial"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkMeshMaterial"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkMeshSection": {
              "$ref": "#/$defs/hkMeshSection"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkMeshSection"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkMeshSectionCinfo": {
              "$ref": "#/$defs/hkMeshSectionCinfo"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkMeshSectionCinfo"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkMeshShape": {
              "$ref": "#/$defs/hkMeshShape"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkMeshShape"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkMeshTexture": {
              "$ref": "#/$defs/hkMeshTexture"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkMeshTexture"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkMeshVertexBuffer": {
              "$ref": "#/$defs/hkMeshVertexBuffer"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkMeshVertexBuffer"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkModelerNodeTypeAttribute": {
              "$ref": "#/$defs/hkModelerNodeTypeAttribute"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkModelerNodeTypeAttribute"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkMonitorStreamColorTable": {
              "$ref": "#/$defs/hkMonitorStreamColorTable"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkMonitorStreamColorTable"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkMonitorStreamColorTableColorPair": {
              "$ref": "#/$defs/hkMonitorStreamColorTableColorPair"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkMonitorStreamColorTableColorPair"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkMonitorStreamFrameInfo": {
              "$ref": "#/$defs/hkMonitorStreamFrameInfo"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkMonitorStreamFrameInfo"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkMonitorStreamStringMap": {
              "$ref": "#/$defs/hkMonitorStreamStringMap"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkMonitorStreamStringMap"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkMonitorStreamStringMapStringMap": {
              "$ref": "#/$defs/hkMonitorStreamStringMapStringMap"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkMonitorStreamStringMapStringMap"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkMoppBvTreeShapeBase": {
              "$ref": "#/$defs/hkMoppBvTreeShapeBase"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkMoppBvTreeShapeBase"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkMotionState": {
              "$ref": "#/$defs/hkMotionState"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkMotionState"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkMultipleVertexBuffer": {
              "$ref": "#/$defs/hkMultipleVertexBuffer"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkMultipleVertexBuffer"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkMultipleVertexBufferElementInfo": {
              "$ref": "#/$defs/hkMultipleVertexBufferElementInfo"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkMultipleVertexBufferElementInfo"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkMultipleVertexBufferLockedElement": {
              "$ref": "#/$defs/hkMultipleVertexBufferLockedElement"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkMultipleVertexBufferLockedElement"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkMultipleVertexBufferVertexBufferInfo": {
              "$ref": "#/$defs/hkMultipleVertexBufferVertexBufferInfo"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkMultipleVertexBufferVertexBufferInfo"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkMultiThreadCheck": {
              "$ref": "#/$defs/hkMultiThreadCheck"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkMultiThreadCheck"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkp2dAngConstraintAtom": {
              "$ref": "#/$defs/hkp2dAngConstraintAtom"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkp2dAngConstraintAtom"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpAabbPhantom": {
              "$ref": "#/$defs/hkpAabbPhantom"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpAabbPhantom"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkPackedVector3": {
              "$ref": "#/$defs/hkPackedVector3"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkPackedVector3"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkPackfileHeader": {
              "$ref": "#/$defs/hkPackfileHeader"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkPackfileHeader"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkPackfileSectionHeader": {
              "$ref": "#/$defs/hkPackfileSectionHeader"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkPackfileSectionHeader"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpAction": {
              "$ref": "#/$defs/hkpAction"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpAction"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpAgent1nSector": {
              "$ref": "#/$defs/hkpAgent1nSector"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpAgent1nSector"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpAngConstraintAtom": {
              "$ref": "#/$defs/hkpAngConstraintAtom"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpAngConstraintAtom"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpAngFrictionConstraintAtom": {
              "$ref": "#/$defs/hkpAngFrictionConstraintAtom"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpAngFrictionConstraintAtom"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpAngLimitConstraintAtom": {
              "$ref": "#/$defs/hkpAngLimitConstraintAtom"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpAngLimitConstraintAtom"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpAngMotorConstraintAtom": {
              "$ref": "#/$defs/hkpAngMotorConstraintAtom"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpAngMotorConstraintAtom"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpAngularDashpotAction": {
              "$ref": "#/$defs/hkpAngularDashpotAction"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpAngularDashpotAction"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpArrayAction": {
              "$ref": "#/$defs/hkpArrayAction"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpArrayAction"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpBallAndSocketConstraintData": {
              "$ref": "#/$defs/hkpBallAndSocketConstraintData"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpBallAndSocketConstraintData"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpBallAndSocketConstraintDataAtoms": {
              "$ref": "#/$defs/hkpBallAndSocketConstraintDataAtoms"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpBallAndSocketConstraintDataAtoms"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpBallGun": {
              "$ref": "#/$defs/hkpBallGun"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpBallGun"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpBallSocketChainData": {
              "$ref": "#/$defs/hkpBallSocketChainData"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpBallSocketChainData"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpBallSocketChainDataConstraintInfo": {
              "$ref": "#/$defs/hkpBallSocketChainDataConstraintInfo"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpBallSocketChainDataConstraintInfo"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpBallSocketConstraintAtom": {
              "$ref": "#/$defs/hkpBallSocketConstraintAtom"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpBallSocketConstraintAtom"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpBinaryAction": {
              "$ref": "#/$defs/hkpBinaryAction"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpBinaryAction"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpBoxMotion": {
              "$ref": "#/$defs/hkpBoxMotion"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpBoxMotion"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpBoxShape": {
              "$ref": "#/$defs/hkpBoxShape"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpBoxShape"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpBreakableBody": {
              "$ref": "#/$defs/hkpBreakableBody"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpBreakableBody"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpBreakableConstraintData": {
              "$ref": "#/$defs/hkpBreakableConstraintData"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpBreakableConstraintData"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpBridgeAtoms": {
              "$ref": "#/$defs/hkpBridgeAtoms"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpBridgeAtoms"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpBridgeConstraintAtom": {
              "$ref": "#/$defs/hkpBridgeConstraintAtom"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpBridgeConstraintAtom"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpBroadPhaseHandle": {
              "$ref": "#/$defs/hkpBroadPhaseHandle"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpBroadPhaseHandle"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpBvShape": {
              "$ref": "#/$defs/hkpBvShape"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpBvShape"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpBvTreeShape": {
              "$ref": "#/$defs/hkpBvTreeShape"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpBvTreeShape"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpCachingShapePhantom": {
              "$ref": "#/$defs/hkpCachingShapePhantom"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpCachingShapePhantom"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpCallbackConstraintMotor": {
              "$ref": "#/$defs/hkpCallbackConstraintMotor"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpCallbackConstraintMotor"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpCapsuleShape": {
              "$ref": "#/$defs/hkpCapsuleShape"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpCapsuleShape"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpCdBody": {
              "$ref": "#/$defs/hkpCdBody"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpCdBody"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpCenterOfMassChangerModifierConstraintAtom": {
              "$ref": "#/$defs/hkpCenterOfMassChangerModifierConstraintAtom"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpCenterOfMassChangerModifierConstraintAtom"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpCharacterControllerCinfo": {
              "$ref": "#/$defs/hkpCharacterControllerCinfo"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpCharacterControllerCinfo"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpCharacterMotion": {
              "$ref": "#/$defs/hkpCharacterMotion"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpCharacterMotion"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpCharacterProxyCinfo": {
              "$ref": "#/$defs/hkpCharacterProxyCinfo"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpCharacterProxyCinfo"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpCharacterRigidBodyCinfo": {
              "$ref": "#/$defs/hkpCharacterRigidBodyCinfo"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpCharacterRigidBodyCinfo"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpCogWheelConstraintAtom": {
              "$ref": "#/$defs/hkpCogWheelConstraintAtom"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpCogWheelConstraintAtom"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpCogWheelConstraintData": {
              "$ref": "#/$defs/hkpCogWheelConstraintData"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpCogWheelConstraintData"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpCogWheelConstraintDataAtoms": {
              "$ref": "#/$defs/hkpCogWheelConstraintDataAtoms"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpCogWheelConstraintDataAtoms"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpCollidable": {
              "$ref": "#/$defs/hkpCollidable"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpCollidable"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpCollidableBoundingVolumeData": {
              "$ref": "#/$defs/hkpCollidableBoundingVolumeData"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpCollidableBoundingVolumeData"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpCollidableCollidableFilter": {
              "$ref": "#/$defs/hkpCollidableCollidableFilter"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpCollidableCollidableFilter"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpCollisionFilter": {
              "$ref": "#/$defs/hkpCollisionFilter"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpCollisionFilter"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpCollisionFilterList": {
              "$ref": "#/$defs/hkpCollisionFilterList"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpCollisionFilterList"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpCompressedMeshShape": {
              "$ref": "#/$defs/hkpCompressedMeshShape"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpCompressedMeshShape"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpCompressedMeshShapeBigTriangle": {
              "$ref": "#/$defs/hkpCompressedMeshShapeBigTriangle"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpCompressedMeshShapeBigTriangle"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpCompressedMeshShapeChunk": {
              "$ref": "#/$defs/hkpCompressedMeshShapeChunk"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpCompressedMeshShapeChunk"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpCompressedMeshShapeConvexPiece": {
              "$ref": "#/$defs/hkpCompressedMeshShapeConvexPiece"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpCompressedMeshShapeConvexPiece"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpCompressedSampledHeightFieldShape": {
              "$ref": "#/$defs/hkpCompressedSampledHeightFieldShape"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpCompressedSampledHeightFieldShape"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpConeLimitConstraintAtom": {
              "$ref": "#/$defs/hkpConeLimitConstraintAtom"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpConeLimitConstraintAtom"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpConstrainedSystemFilter": {
              "$ref": "#/$defs/hkpConstrainedSystemFilter"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpConstrainedSystemFilter"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpConstraintAtom": {
              "$ref": "#/$defs/hkpConstraintAtom"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpConstraintAtom"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpConstraintChainData": {
              "$ref": "#/$defs/hkpConstraintChainData"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpConstraintChainData"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpConstraintChainInstance": {
              "$ref": "#/$defs/hkpConstraintChainInstance"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpConstraintChainInstance"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpConstraintChainInstanceAction": {
              "$ref": "#/$defs/hkpConstraintChainInstanceAction"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpConstraintChainInstanceAction"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpConstraintCollisionFilter": {
              "$ref": "#/$defs/hkpConstraintCollisionFilter"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpConstraintCollisionFilter"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpConstraintData": {
              "$ref": "#/$defs/hkpConstraintData"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpConstraintData"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpConstraintInstance": {
              "$ref": "#/$defs/hkpConstraintInstance"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpConstraintInstance"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpConstraintInstanceSmallArraySerializeOverrideType": {
              "$ref": "#/$defs/hkpConstraintInstanceSmallArraySerializeOverrideType"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpConstraintInstanceSmallArraySerializeOverrideType"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpConstraintMotor": {
              "$ref": "#/$defs/hkpConstraintMotor"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpConstraintMotor"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpConvexListFilter": {
              "$ref": "#/$defs/hkpConvexListFilter"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpConvexListFilter"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpConvexListShape": {
              "$ref": "#/$defs/hkpConvexListShape"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpConvexListShape"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpConvexPieceMeshShape": {
              "$ref": "#/$defs/hkpConvexPieceMeshShape"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpConvexPieceMeshShape"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpConvexPieceStreamData": {
              "$ref": "#/$defs/hkpConvexPieceStreamData"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpConvexPieceStreamData"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpConvexShape": {
              "$ref": "#/$defs/hkpConvexShape"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpConvexShape"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpConvexTransformShape": {
              "$ref": "#/$defs/hkpConvexTransformShape"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpConvexTransformShape"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpConvexTransformShapeBase": {
              "$ref": "#/$defs/hkpConvexTransformShapeBase"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpConvexTransformShapeBase"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpConvexTranslateShape": {
              "$ref": "#/$defs/hkpConvexTranslateShape"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpConvexTranslateShape"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpConvexVerticesConnectivity": {
              "$ref": "#/$defs/hkpConvexVerticesConnectivity"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpConvexVerticesConnectivity"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpConvexVerticesShape": {
              "$ref": "#/$defs/hkpConvexVerticesShape"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpConvexVerticesShape"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpConvexVerticesShapeFourVectors": {
              "$ref": "#/$defs/hkpConvexVerticesShapeFourVectors"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpConvexVerticesShapeFourVectors"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpCylinderShape": {
              "$ref": "#/$defs/hkpCylinderShape"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpCylinderShape"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpDashpotAction": {
              "$ref": "#/$defs/hkpDashpotAction"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpDashpotAction"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpDefaultConvexListFilter": {
              "$ref": "#/$defs/hkpDefaultConvexListFilter"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpDefaultConvexListFilter"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpDefaultWorldMemoryWatchDog": {
              "$ref": "#/$defs/hkpDefaultWorldMemoryWatchDog"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpDefaultWorldMemoryWatchDog"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpDisableEntityCollisionFilter": {
              "$ref": "#/$defs/hkpDisableEntityCollisionFilter"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpDisableEntityCollisionFilter"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpDisplayBindingData": {
              "$ref": "#/$defs/hkpDisplayBindingData"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpDisplayBindingData"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpDisplayBindingDataPhysicsSystem": {
              "$ref": "#/$defs/hkpDisplayBindingDataPhysicsSystem"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpDisplayBindingDataPhysicsSystem"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpDisplayBindingDataRigidBody": {
              "$ref": "#/$defs/hkpDisplayBindingDataRigidBody"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpDisplayBindingDataRigidBody"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpEntity": {
              "$ref": "#/$defs/hkpEntity"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpEntity"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpEntityExtendedListeners": {
              "$ref": "#/$defs/hkpEntityExtendedListeners"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpEntityExtendedListeners"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpEntitySmallArraySerializeOverrideType": {
              "$ref": "#/$defs/hkpEntitySmallArraySerializeOverrideType"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpEntitySmallArraySerializeOverrideType"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpEntitySpuCollisionCallback": {
              "$ref": "#/$defs/hkpEntitySpuCollisionCallback"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpEntitySpuCollisionCallback"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpExtendedMeshShape": {
              "$ref": "#/$defs/hkpExtendedMeshShape"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpExtendedMeshShape"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpExtendedMeshShapeShapesSubpart": {
              "$ref": "#/$defs/hkpExtendedMeshShapeShapesSubpart"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpExtendedMeshShapeShapesSubpart"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpExtendedMeshShapeSubpart": {
              "$ref": "#/$defs/hkpExtendedMeshShapeSubpart"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpExtendedMeshShapeSubpart"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpExtendedMeshShapeTrianglesSubpart": {
              "$ref": "#/$defs/hkpExtendedMeshShapeTrianglesSubpart"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpExtendedMeshShapeTrianglesSubpart"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpFastMeshShape": {
              "$ref": "#/$defs/hkpFastMeshShape"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpFastMeshShape"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpFirstPersonGun": {
              "$ref": "#/$defs/hkpFirstPersonGun"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpFirstPersonGun"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpFixedRigidMotion": {
              "$ref": "#/$defs/hkpFixedRigidMotion"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpFixedRigidMotion"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpGenericConstraintData": {
              "$ref": "#/$defs/hkpGenericConstraintData"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpGenericConstraintData"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpGenericConstraintDataScheme": {
              "$ref": "#/$defs/hkpGenericConstraintDataScheme"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpGenericConstraintDataScheme"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpGenericConstraintDataSchemeConstraintInfo": {
              "$ref": "#/$defs/hkpGenericConstraintDataSchemeConstraintInfo"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpGenericConstraintDataSchemeConstraintInfo"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpGravityGun": {
              "$ref": "#/$defs/hkpGravityGun"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpGravityGun"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpGroupCollisionFilter": {
              "$ref": "#/$defs/hkpGroupCollisionFilter"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpGroupCollisionFilter"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpGroupFilter": {
              "$ref": "#/$defs/hkpGroupFilter"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpGroupFilter"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpHeightFieldShape": {
              "$ref": "#/$defs/hkpHeightFieldShape"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpHeightFieldShape"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpHingeConstraintData": {
              "$ref": "#/$defs/hkpHingeConstraintData"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpHingeConstraintData"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpHingeConstraintDataAtoms": {
              "$ref": "#/$defs/hkpHingeConstraintDataAtoms"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpHingeConstraintDataAtoms"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpHingeLimitsData": {
              "$ref": "#/$defs/hkpHingeLimitsData"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpHingeLimitsData"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpHingeLimitsDataAtoms": {
              "$ref": "#/$defs/hkpHingeLimitsDataAtoms"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpHingeLimitsDataAtoms"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpIgnoreModifierConstraintAtom": {
              "$ref": "#/$defs/hkpIgnoreModifierConstraintAtom"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpIgnoreModifierConstraintAtom"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpKeyframedRigidMotion": {
              "$ref": "#/$defs/hkpKeyframedRigidMotion"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpKeyframedRigidMotion"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpLimitedForceConstraintMotor": {
              "$ref": "#/$defs/hkpLimitedForceConstraintMotor"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpLimitedForceConstraintMotor"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpLimitedHingeConstraintData": {
              "$ref": "#/$defs/hkpLimitedHingeConstraintData"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpLimitedHingeConstraintData"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpLimitedHingeConstraintDataAtoms": {
              "$ref": "#/$defs/hkpLimitedHingeConstraintDataAtoms"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpLimitedHingeConstraintDataAtoms"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpLinConstraintAtom": {
              "$ref": "#/$defs/hkpLinConstraintAtom"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpLinConstraintAtom"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpLinearParametricCurve": {
              "$ref": "#/$defs/hkpLinearParametricCurve"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpLinearParametricCurve"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpLinFrictionConstraintAtom": {
              "$ref": "#/$defs/hkpLinFrictionConstraintAtom"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpLinFrictionConstraintAtom"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpLinkedCollidable": {
              "$ref": "#/$defs/hkpLinkedCollidable"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpLinkedCollidable"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpLinLimitConstraintAtom": {
              "$ref": "#/$defs/hkpLinLimitConstraintAtom"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpLinLimitConstraintAtom"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpLinMotorConstraintAtom": {
              "$ref": "#/$defs/hkpLinMotorConstraintAtom"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpLinMotorConstraintAtom"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpLinSoftConstraintAtom": {
              "$ref": "#/$defs/hkpLinSoftConstraintAtom"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpLinSoftConstraintAtom"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpListShape": {
              "$ref": "#/$defs/hkpListShape"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpListShape"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpListShapeChildInfo": {
              "$ref": "#/$defs/hkpListShapeChildInfo"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpListShapeChildInfo"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpMalleableConstraintData": {
              "$ref": "#/$defs/hkpMalleableConstraintData"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpMalleableConstraintData"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpMassChangerModifierConstraintAtom": {
              "$ref": "#/$defs/hkpMassChangerModifierConstraintAtom"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpMassChangerModifierConstraintAtom"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpMassProperties": {
              "$ref": "#/$defs/hkpMassProperties"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpMassProperties"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpMaterial": {
              "$ref": "#/$defs/hkpMaterial"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpMaterial"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpMaxSizeMotion": {
              "$ref": "#/$defs/hkpMaxSizeMotion"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpMaxSizeMotion"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpMeshMaterial": {
              "$ref": "#/$defs/hkpMeshMaterial"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpMeshMaterial"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpMeshShape": {
              "$ref": "#/$defs/hkpMeshShape"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpMeshShape"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpMeshShapeSubpart": {
              "$ref": "#/$defs/hkpMeshShapeSubpart"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpMeshShapeSubpart"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpModifierConstraintAtom": {
              "$ref": "#/$defs/hkpModifierConstraintAtom"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpModifierConstraintAtom"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpMoppBvTreeShape": {
              "$ref": "#/$defs/hkpMoppBvTreeShape"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpMoppBvTreeShape"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpMoppCode": {
              "$ref": "#/$defs/hkpMoppCode"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpMoppCode"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpMoppCodeCodeInfo": {
              "$ref": "#/$defs/hkpMoppCodeCodeInfo"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpMoppCodeCodeInfo"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpMoppCodeReindexedTerminal": {
              "$ref": "#/$defs/hkpMoppCodeReindexedTerminal"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpMoppCodeReindexedTerminal"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpMotion": {
              "$ref": "#/$defs/hkpMotion"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpMotion"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpMotorAction": {
              "$ref": "#/$defs/hkpMotorAction"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpMotorAction"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpMountedBallGun": {
              "$ref": "#/$defs/hkpMountedBallGun"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpMountedBallGun"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpMouseSpringAction": {
              "$ref": "#/$defs/hkpMouseSpringAction"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpMouseSpringAction"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpMovingSurfaceModifierConstraintAtom": {
              "$ref": "#/$defs/hkpMovingSurfaceModifierConstraintAtom"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpMovingSurfaceModifierConstraintAtom"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpMultiRayShape": {
              "$ref": "#/$defs/hkpMultiRayShape"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpMultiRayShape"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpMultiRayShapeRay": {
              "$ref": "#/$defs/hkpMultiRayShapeRay"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpMultiRayShapeRay"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpMultiSphereShape": {
              "$ref": "#/$defs/hkpMultiSphereShape"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpMultiSphereShape"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpMultithreadedVehicleManager": {
              "$ref": "#/$defs/hkpMultithreadedVehicleManager"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpMultithreadedVehicleManager"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpNamedMeshMaterial": {
              "$ref": "#/$defs/hkpNamedMeshMaterial"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpNamedMeshMaterial"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpNullCollisionFilter": {
              "$ref": "#/$defs/hkpNullCollisionFilter"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpNullCollisionFilter"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkPostFinishAttribute": {
              "$ref": "#/$defs/hkPostFinishAttribute"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkPostFinishAttribute"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpOverwritePivotConstraintAtom": {
              "$ref": "#/$defs/hkpOverwritePivotConstraintAtom"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpOverwritePivotConstraintAtom"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpPairCollisionFilter": {
              "$ref": "#/$defs/hkpPairCollisionFilter"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpPairCollisionFilter"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpPairCollisionFilterMapPairFilterKeyOverrideType": {
              "$ref": "#/$defs/hkpPairCollisionFilterMapPairFilterKeyOverrideType"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpPairCollisionFilterMapPairFilterKeyOverrideType"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpParametricCurve": {
              "$ref": "#/$defs/hkpParametricCurve"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpParametricCurve"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpPhantom": {
              "$ref": "#/$defs/hkpPhantom"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpPhantom"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpPhantomCallbackShape": {
              "$ref": "#/$defs/hkpPhantomCallbackShape"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpPhantomCallbackShape"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpPhysicsData": {
              "$ref": "#/$defs/hkpPhysicsData"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpPhysicsData"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpPhysicsSystem": {
              "$ref": "#/$defs/hkpPhysicsSystem"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpPhysicsSystem"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpPhysicsSystemWithContacts": {
              "$ref": "#/$defs/hkpPhysicsSystemWithContacts"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpPhysicsSystemWithContacts"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpPlaneShape": {
              "$ref": "#/$defs/hkpPlaneShape"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpPlaneShape"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpPointToPathConstraintData": {
              "$ref": "#/$defs/hkpPointToPathConstraintData"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpPointToPathConstraintData"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpPointToPlaneConstraintData": {
              "$ref": "#/$defs/hkpPointToPlaneConstraintData"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpPointToPlaneConstraintData"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpPointToPlaneConstraintDataAtoms": {
              "$ref": "#/$defs/hkpPointToPlaneConstraintDataAtoms"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpPointToPlaneConstraintDataAtoms"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpPositionConstraintMotor": {
              "$ref": "#/$defs/hkpPositionConstraintMotor"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpPositionConstraintMotor"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpPoweredChainData": {
              "$ref": "#/$defs/hkpPoweredChainData"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpPoweredChainData"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpPoweredChainDataConstraintInfo": {
              "$ref": "#/$defs/hkpPoweredChainDataConstraintInfo"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpPoweredChainDataConstraintInfo"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpPoweredChainMapper": {
              "$ref": "#/$defs/hkpPoweredChainMapper"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpPoweredChainMapper"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpPoweredChainMapperLinkInfo": {
              "$ref": "#/$defs/hkpPoweredChainMapperLinkInfo"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpPoweredChainMapperLinkInfo"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpPoweredChainMapperTarget": {
              "$ref": "#/$defs/hkpPoweredChainMapperTarget"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpPoweredChainMapperTarget"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpPrismaticConstraintData": {
              "$ref": "#/$defs/hkpPrismaticConstraintData"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpPrismaticConstraintData"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpPrismaticConstraintDataAtoms": {
              "$ref": "#/$defs/hkpPrismaticConstraintDataAtoms"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpPrismaticConstraintDataAtoms"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpProjectileGun": {
              "$ref": "#/$defs/hkpProjectileGun"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpProjectileGun"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpProperty": {
              "$ref": "#/$defs/hkpProperty"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpProperty"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpPropertyValue": {
              "$ref": "#/$defs/hkpPropertyValue"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpPropertyValue"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpPulleyConstraintAtom": {
              "$ref": "#/$defs/hkpPulleyConstraintAtom"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpPulleyConstraintAtom"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpPulleyConstraintData": {
              "$ref": "#/$defs/hkpPulleyConstraintData"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpPulleyConstraintData"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpPulleyConstraintDataAtoms": {
              "$ref": "#/$defs/hkpPulleyConstraintDataAtoms"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpPulleyConstraintDataAtoms"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpRackAndPinionConstraintAtom": {
              "$ref": "#/$defs/hkpRackAndPinionConstraintAtom"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpRackAndPinionConstraintAtom"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpRackAndPinionConstraintData": {
              "$ref": "#/$defs/hkpRackAndPinionConstraintData"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpRackAndPinionConstraintData"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpRackAndPinionConstraintDataAtoms": {
              "$ref": "#/$defs/hkpRackAndPinionConstraintDataAtoms"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpRackAndPinionConstraintDataAtoms"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpRagdollConstraintData": {
              "$ref": "#/$defs/hkpRagdollConstraintData"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpRagdollConstraintData"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpRagdollConstraintDataAtoms": {
              "$ref": "#/$defs/hkpRagdollConstraintDataAtoms"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpRagdollConstraintDataAtoms"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpRagdollLimitsData": {
              "$ref": "#/$defs/hkpRagdollLimitsData"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpRagdollLimitsData"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpRagdollLimitsDataAtoms": {
              "$ref": "#/$defs/hkpRagdollLimitsDataAtoms"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpRagdollLimitsDataAtoms"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpRagdollMotorConstraintAtom": {
              "$ref": "#/$defs/hkpRagdollMotorConstraintAtom"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpRagdollMotorConstraintAtom"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpRayCollidableFilter": {
              "$ref": "#/$defs/hkpRayCollidableFilter"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpRayCollidableFilter"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpRayShapeCollectionFilter": {
              "$ref": "#/$defs/hkpRayShapeCollectionFilter"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpRayShapeCollectionFilter"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpRejectChassisListener": {
              "$ref": "#/$defs/hkpRejectChassisListener"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpRejectChassisListener"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpRemoveTerminalsMoppModifier": {
              "$ref": "#/$defs/hkpRemoveTerminalsMoppModifier"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpRemoveTerminalsMoppModifier"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpReorientAction": {
              "$ref": "#/$defs/hkpReorientAction"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpReorientAction"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpRigidBody": {
              "$ref": "#/$defs/hkpRigidBody"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpRigidBody"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpRotationalConstraintData": {
              "$ref": "#/$defs/hkpRotationalConstraintData"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpRotationalConstraintData"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpRotationalConstraintDataAtoms": {
              "$ref": "#/$defs/hkpRotationalConstraintDataAtoms"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpRotationalConstraintDataAtoms"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpSampledHeightFieldShape": {
              "$ref": "#/$defs/hkpSampledHeightFieldShape"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpSampledHeightFieldShape"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpSerializedAgentNnEntry": {
              "$ref": "#/$defs/hkpSerializedAgentNnEntry"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpSerializedAgentNnEntry"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpSerializedDisplayMarker": {
              "$ref": "#/$defs/hkpSerializedDisplayMarker"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpSerializedDisplayMarker"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpSerializedDisplayMarkerList": {
              "$ref": "#/$defs/hkpSerializedDisplayMarkerList"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpSerializedDisplayMarkerList"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpSerializedDisplayRbTransforms": {
              "$ref": "#/$defs/hkpSerializedDisplayRbTransforms"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpSerializedDisplayRbTransforms"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpSerializedDisplayRbTransformsDisplayTransformPair": {
              "$ref": "#/$defs/hkpSerializedDisplayRbTransformsDisplayTransformPair"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpSerializedDisplayRbTransformsDisplayTransformPair"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpSerializedSubTrack1nInfo": {
              "$ref": "#/$defs/hkpSerializedSubTrack1nInfo"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpSerializedSubTrack1nInfo"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpSerializedTrack1nInfo": {
              "$ref": "#/$defs/hkpSerializedTrack1nInfo"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpSerializedTrack1nInfo"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpSetLocalRotationsConstraintAtom": {
              "$ref": "#/$defs/hkpSetLocalRotationsConstraintAtom"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpSetLocalRotationsConstraintAtom"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpSetLocalTransformsConstraintAtom": {
              "$ref": "#/$defs/hkpSetLocalTransformsConstraintAtom"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpSetLocalTransformsConstraintAtom"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpSetLocalTranslationsConstraintAtom": {
              "$ref": "#/$defs/hkpSetLocalTranslationsConstraintAtom"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpSetLocalTranslationsConstraintAtom"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpSetupStabilizationAtom": {
              "$ref": "#/$defs/hkpSetupStabilizationAtom"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpSetupStabilizationAtom"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpShape": {
              "$ref": "#/$defs/hkpShape"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpShape"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpShapeCollection": {
              "$ref": "#/$defs/hkpShapeCollection"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpShapeCollection"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpShapeCollectionFilter": {
              "$ref": "#/$defs/hkpShapeCollectionFilter"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpShapeCollectionFilter"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpShapeContainer": {
              "$ref": "#/$defs/hkpShapeContainer"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpShapeContainer"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpShapeInfo": {
              "$ref": "#/$defs/hkpShapeInfo"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpShapeInfo"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpShapeModifier": {
              "$ref": "#/$defs/hkpShapeModifier"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpShapeModifier"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpShapePhantom": {
              "$ref": "#/$defs/hkpShapePhantom"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpShapePhantom"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpSimpleContactConstraintAtom": {
              "$ref": "#/$defs/hkpSimpleContactConstraintAtom"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpSimpleContactConstraintAtom"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpSimpleContactConstraintDataInfo": {
              "$ref": "#/$defs/hkpSimpleContactConstraintDataInfo"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpSimpleContactConstraintDataInfo"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpSimpleMeshShape": {
              "$ref": "#/$defs/hkpSimpleMeshShape"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpSimpleMeshShape"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpSimpleMeshShapeTriangle": {
              "$ref": "#/$defs/hkpSimpleMeshShapeTriangle"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpSimpleMeshShapeTriangle"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpSimpleShapePhantom": {
              "$ref": "#/$defs/hkpSimpleShapePhantom"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpSimpleShapePhantom"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpSimpleShapePhantomCollisionDetail": {
              "$ref": "#/$defs/hkpSimpleShapePhantomCollisionDetail"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpSimpleShapePhantomCollisionDetail"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpSimulation": {
              "$ref": "#/$defs/hkpSimulation"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpSimulation"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpSingleShapeContainer": {
              "$ref": "#/$defs/hkpSingleShapeContainer"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpSingleShapeContainer"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpSoftContactModifierConstraintAtom": {
              "$ref": "#/$defs/hkpSoftContactModifierConstraintAtom"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpSoftContactModifierConstraintAtom"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpSphereMotion": {
              "$ref": "#/$defs/hkpSphereMotion"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpSphereMotion"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpSphereRepShape": {
              "$ref": "#/$defs/hkpSphereRepShape"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpSphereRepShape"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpSphereShape": {
              "$ref": "#/$defs/hkpSphereShape"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpSphereShape"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpSpringAction": {
              "$ref": "#/$defs/hkpSpringAction"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpSpringAction"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpSpringDamperConstraintMotor": {
              "$ref": "#/$defs/hkpSpringDamperConstraintMotor"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpSpringDamperConstraintMotor"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpStiffSpringChainData": {
              "$ref": "#/$defs/hkpStiffSpringChainData"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpStiffSpringChainData"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpStiffSpringChainDataConstraintInfo": {
              "$ref": "#/$defs/hkpStiffSpringChainDataConstraintInfo"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpStiffSpringChainDataConstraintInfo"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpStiffSpringConstraintAtom": {
              "$ref": "#/$defs/hkpStiffSpringConstraintAtom"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpStiffSpringConstraintAtom"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpStiffSpringConstraintData": {
              "$ref": "#/$defs/hkpStiffSpringConstraintData"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpStiffSpringConstraintData"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpStiffSpringConstraintDataAtoms": {
              "$ref": "#/$defs/hkpStiffSpringConstraintDataAtoms"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpStiffSpringConstraintDataAtoms"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpStorageExtendedMeshShape": {
              "$ref": "#/$defs/hkpStorageExtendedMeshShape"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpStorageExtendedMeshShape"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpStorageExtendedMeshShapeMaterial": {
              "$ref": "#/$defs/hkpStorageExtendedMeshShapeMaterial"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpStorageExtendedMeshShapeMaterial"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpStorageExtendedMeshShapeMeshSubpartStorage": {
              "$ref": "#/$defs/hkpStorageExtendedMeshShapeMeshSubpartStorage"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpStorageExtendedMeshShapeMeshSubpartStorage"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpStorageExtendedMeshShapeShapeSubpartStorage": {
              "$ref": "#/$defs/hkpStorageExtendedMeshShapeShapeSubpartStorage"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpStorageExtendedMeshShapeShapeSubpartStorage"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpStorageMeshShape": {
              "$ref": "#/$defs/hkpStorageMeshShape"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpStorageMeshShape"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpStorageMeshShapeSubpartStorage": {
              "$ref": "#/$defs/hkpStorageMeshShapeSubpartStorage"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpStorageMeshShapeSubpartStorage"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpStorageSampledHeightFieldShape": {
              "$ref": "#/$defs/hkpStorageSampledHeightFieldShape"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpStorageSampledHeightFieldShape"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpThinBoxMotion": {
              "$ref": "#/$defs/hkpThinBoxMotion"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpThinBoxMotion"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpTransformShape": {
              "$ref": "#/$defs/hkpTransformShape"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpTransformShape"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpTriangleShape": {
              "$ref": "#/$defs/hkpTriangleShape"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpTriangleShape"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpTriggerVolume": {
              "$ref": "#/$defs/hkpTriggerVolume"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpTriggerVolume"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpTriggerVolumeEventInfo": {
              "$ref": "#/$defs/hkpTriggerVolumeEventInfo"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpTriggerVolumeEventInfo"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpTriSampledHeightFieldBvTreeShape": {
              "$ref": "#/$defs/hkpTriSampledHeightFieldBvTreeShape"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpTriSampledHeightFieldBvTreeShape"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpTriSampledHeightFieldCollection": {
              "$ref": "#/$defs/hkpTriSampledHeightFieldCollection"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpTriSampledHeightFieldCollection"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpTwistLimitConstraintAtom": {
              "$ref": "#/$defs/hkpTwistLimitConstraintAtom"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpTwistLimitConstraintAtom"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpTypedBroadPhaseHandle": {
              "$ref": "#/$defs/hkpTypedBroadPhaseHandle"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpTypedBroadPhaseHandle"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpTyremarkPoint": {
              "$ref": "#/$defs/hkpTyremarkPoint"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpTyremarkPoint"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpTyremarksInfo": {
              "$ref": "#/$defs/hkpTyremarksInfo"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpTyremarksInfo"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpTyremarksWheel": {
              "$ref": "#/$defs/hkpTyremarksWheel"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpTyremarksWheel"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpUnaryAction": {
              "$ref": "#/$defs/hkpUnaryAction"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpUnaryAction"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpVehicleAerodynamics": {
              "$ref": "#/$defs/hkpVehicleAerodynamics"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpVehicleAerodynamics"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpVehicleBrake": {
              "$ref": "#/$defs/hkpVehicleBrake"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpVehicleBrake"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpVehicleCastBatchingManager": {
              "$ref": "#/$defs/hkpVehicleCastBatchingManager"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpVehicleCastBatchingManager"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpVehicleData": {
              "$ref": "#/$defs/hkpVehicleData"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpVehicleData"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpVehicleDataWheelComponentParams": {
              "$ref": "#/$defs/hkpVehicleDataWheelComponentParams"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpVehicleDataWheelComponentParams"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpVehicleDefaultAerodynamics": {
              "$ref": "#/$defs/hkpVehicleDefaultAerodynamics"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpVehicleDefaultAerodynamics"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpVehicleDefaultAnalogDriverInput": {
              "$ref": "#/$defs/hkpVehicleDefaultAnalogDriverInput"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpVehicleDefaultAnalogDriverInput"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpVehicleDefaultBrake": {
              "$ref": "#/$defs/hkpVehicleDefaultBrake"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpVehicleDefaultBrake"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpVehicleDefaultBrakeWheelBrakingProperties": {
              "$ref": "#/$defs/hkpVehicleDefaultBrakeWheelBrakingProperties"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpVehicleDefaultBrakeWheelBrakingProperties"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpVehicleDefaultEngine": {
              "$ref": "#/$defs/hkpVehicleDefaultEngine"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpVehicleDefaultEngine"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpVehicleDefaultSteering": {
              "$ref": "#/$defs/hkpVehicleDefaultSteering"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpVehicleDefaultSteering"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpVehicleDefaultSuspension": {
              "$ref": "#/$defs/hkpVehicleDefaultSuspension"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpVehicleDefaultSuspension"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpVehicleDefaultSuspensionWheelSpringSuspensionParameters": {
              "$ref": "#/$defs/hkpVehicleDefaultSuspensionWheelSpringSuspensionParameters"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpVehicleDefaultSuspensionWheelSpringSuspensionParameters"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpVehicleDefaultTransmission": {
              "$ref": "#/$defs/hkpVehicleDefaultTransmission"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpVehicleDefaultTransmission"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpVehicleDefaultVelocityDamper": {
              "$ref": "#/$defs/hkpVehicleDefaultVelocityDamper"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpVehicleDefaultVelocityDamper"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpVehicleDriverInput": {
              "$ref": "#/$defs/hkpVehicleDriverInput"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpVehicleDriverInput"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpVehicleDriverInputAnalogStatus": {
              "$ref": "#/$defs/hkpVehicleDriverInputAnalogStatus"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpVehicleDriverInputAnalogStatus"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpVehicleDriverInputStatus": {
              "$ref": "#/$defs/hkpVehicleDriverInputStatus"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpVehicleDriverInputStatus"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpVehicleEngine": {
              "$ref": "#/$defs/hkpVehicleEngine"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpVehicleEngine"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpVehicleFrictionDescription": {
              "$ref": "#/$defs/hkpVehicleFrictionDescription"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpVehicleFrictionDescription"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpVehicleFrictionDescriptionAxisDescription": {
              "$ref": "#/$defs/hkpVehicleFrictionDescriptionAxisDescription"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpVehicleFrictionDescriptionAxisDescription"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpVehicleFrictionStatus": {
              "$ref": "#/$defs/hkpVehicleFrictionStatus"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpVehicleFrictionStatus"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpVehicleFrictionStatusAxisStatus": {
              "$ref": "#/$defs/hkpVehicleFrictionStatusAxisStatus"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpVehicleFrictionStatusAxisStatus"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpVehicleInstance": {
              "$ref": "#/$defs/hkpVehicleInstance"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpVehicleInstance"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpVehicleInstanceWheelInfo": {
              "$ref": "#/$defs/hkpVehicleInstanceWheelInfo"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpVehicleInstanceWheelInfo"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpVehicleLinearCastBatchingManager": {
              "$ref": "#/$defs/hkpVehicleLinearCastBatchingManager"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpVehicleLinearCastBatchingManager"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpVehicleLinearCastWheelCollide": {
              "$ref": "#/$defs/hkpVehicleLinearCastWheelCollide"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpVehicleLinearCastWheelCollide"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpVehicleLinearCastWheelCollideWheelState": {
              "$ref": "#/$defs/hkpVehicleLinearCastWheelCollideWheelState"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpVehicleLinearCastWheelCollideWheelState"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpVehicleManager": {
              "$ref": "#/$defs/hkpVehicleManager"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpVehicleManager"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpVehicleRayCastBatchingManager": {
              "$ref": "#/$defs/hkpVehicleRayCastBatchingManager"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpVehicleRayCastBatchingManager"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpVehicleRayCastWheelCollide": {
              "$ref": "#/$defs/hkpVehicleRayCastWheelCollide"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpVehicleRayCastWheelCollide"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpVehicleSteering": {
              "$ref": "#/$defs/hkpVehicleSteering"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpVehicleSteering"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpVehicleSuspension": {
              "$ref": "#/$defs/hkpVehicleSuspension"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpVehicleSuspension"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpVehicleSuspensionSuspensionWheelParameters": {
              "$ref": "#/$defs/hkpVehicleSuspensionSuspensionWheelParameters"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpVehicleSuspensionSuspensionWheelParameters"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpVehicleTransmission": {
              "$ref": "#/$defs/hkpVehicleTransmission"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpVehicleTransmission"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpVehicleVelocityDamper": {
              "$ref": "#/$defs/hkpVehicleVelocityDamper"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpVehicleVelocityDamper"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpVehicleWheelCollide": {
              "$ref": "#/$defs/hkpVehicleWheelCollide"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpVehicleWheelCollide"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpVelocityConstraintMotor": {
              "$ref": "#/$defs/hkpVelocityConstraintMotor"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpVelocityConstraintMotor"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpViscousSurfaceModifierConstraintAtom": {
              "$ref": "#/$defs/hkpViscousSurfaceModifierConstraintAtom"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpViscousSurfaceModifierConstraintAtom"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpWeldingUtility": {
              "$ref": "#/$defs/hkpWeldingUtility"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpWeldingUtility"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpWheelConstraintData": {
              "$ref": "#/$defs/hkpWheelConstraintData"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpWheelConstraintData"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpWheelConstraintDataAtoms": {
              "$ref": "#/$defs/hkpWheelConstraintDataAtoms"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpWheelConstraintDataAtoms"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpWorld": {
              "$ref": "#/$defs/hkpWorld"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpWorld"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpWorldCinfo": {
              "$ref": "#/$defs/hkpWorldCinfo"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpWorldCinfo"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkpWorldObject": {
              "$ref": "#/$defs/hkpWorldObject"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkpWorldObject"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkQTransform": {
              "$ref": "#/$defs/hkQTransform"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkQTransform"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkRangeInt32Attribute": {
              "$ref": "#/$defs/hkRangeInt32Attribute"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkRangeInt32Attribute"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkRangeRealAttribute": {
              "$ref": "#/$defs/hkRangeRealAttribute"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkRangeRealAttribute"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkReferencedObject": {
              "$ref": "#/$defs/hkReferencedObject"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkReferencedObject"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkReflectedFileAttribute": {
              "$ref": "#/$defs/hkReflectedFileAttribute"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkReflectedFileAttribute"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkResourceBase": {
              "$ref": "#/$defs/hkResourceBase"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkResourceBase"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkResourceContainer": {
              "$ref": "#/$defs/hkResourceContainer"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkResourceContainer"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkResourceHandle": {
              "$ref": "#/$defs/hkResourceHandle"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkResourceHandle"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkRootLevelContainer": {
              "$ref": "#/$defs/hkRootLevelContainer"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkRootLevelContainer"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkRootLevelContainerNamedVariant": {
              "$ref": "#/$defs/hkRootLevelContainerNamedVariant"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkRootLevelContainerNamedVariant"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkSemanticsAttribute": {
              "$ref": "#/$defs/hkSemanticsAttribute"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkSemanticsAttribute"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkSimpleLocalFrame": {
              "$ref": "#/$defs/hkSimpleLocalFrame"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkSimpleLocalFrame"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkSphere": {
              "$ref": "#/$defs/hkSphere"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkSphere"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkSweptTransform": {
              "$ref": "#/$defs/hkSweptTransform"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkSweptTransform"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkTraceStreamTitle": {
              "$ref": "#/$defs/hkTraceStreamTitle"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkTraceStreamTitle"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkTrackerSerializableScanSnapshot": {
              "$ref": "#/$defs/hkTrackerSerializableScanSnapshot"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkTrackerSerializableScanSnapshot"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkTrackerSerializableScanSnapshotAllocation": {
              "$ref": "#/$defs/hkTrackerSerializableScanSnapshotAllocation"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkTrackerSerializableScanSnapshotAllocation"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkTrackerSerializableScanSnapshotBlock": {
              "$ref": "#/$defs/hkTrackerSerializableScanSnapshotBlock"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkTrackerSerializableScanSnapshotBlock"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkUiAttribute": {
              "$ref": "#/$defs/hkUiAttribute"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkUiAttribute"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkVertexFormat": {
              "$ref": "#/$defs/hkVertexFormat"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkVertexFormat"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkVertexFormatElement": {
              "$ref": "#/$defs/hkVertexFormatElement"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkVertexFormatElement"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkWorldMemoryAvailableWatchDog": {
              "$ref": "#/$defs/hkWorldMemoryAvailableWatchDog"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkWorldMemoryAvailableWatchDog"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkxAnimatedFloat": {
              "$ref": "#/$defs/hkxAnimatedFloat"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkxAnimatedFloat"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkxAnimatedMatrix": {
              "$ref": "#/$defs/hkxAnimatedMatrix"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkxAnimatedMatrix"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkxAnimatedQuaternion": {
              "$ref": "#/$defs/hkxAnimatedQuaternion"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkxAnimatedQuaternion"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkxAnimatedVector": {
              "$ref": "#/$defs/hkxAnimatedVector"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkxAnimatedVector"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkxAttribute": {
              "$ref": "#/$defs/hkxAttribute"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkxAttribute"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkxAttributeGroup": {
              "$ref": "#/$defs/hkxAttributeGroup"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkxAttributeGroup"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkxAttributeHolder": {
              "$ref": "#/$defs/hkxAttributeHolder"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkxAttributeHolder"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkxCamera": {
              "$ref": "#/$defs/hkxCamera"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkxCamera"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkxEdgeSelectionChannel": {
              "$ref": "#/$defs/hkxEdgeSelectionChannel"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkxEdgeSelectionChannel"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkxEnum": {
              "$ref": "#/$defs/hkxEnum"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkxEnum"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkxEnumItem": {
              "$ref": "#/$defs/hkxEnumItem"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkxEnumItem"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkxEnvironment": {
              "$ref": "#/$defs/hkxEnvironment"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkxEnvironment"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkxEnvironmentVariable": {
              "$ref": "#/$defs/hkxEnvironmentVariable"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkxEnvironmentVariable"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkxIndexBuffer": {
              "$ref": "#/$defs/hkxIndexBuffer"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkxIndexBuffer"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkxLight": {
              "$ref": "#/$defs/hkxLight"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkxLight"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkxMaterial": {
              "$ref": "#/$defs/hkxMaterial"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkxMaterial"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkxMaterialEffect": {
              "$ref": "#/$defs/hkxMaterialEffect"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkxMaterialEffect"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkxMaterialProperty": {
              "$ref": "#/$defs/hkxMaterialProperty"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkxMaterialProperty"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkxMaterialShader": {
              "$ref": "#/$defs/hkxMaterialShader"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkxMaterialShader"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkxMaterialShaderSet": {
              "$ref": "#/$defs/hkxMaterialShaderSet"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkxMaterialShaderSet"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkxMaterialTextureStage": {
              "$ref": "#/$defs/hkxMaterialTextureStage"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkxMaterialTextureStage"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkxMesh": {
              "$ref": "#/$defs/hkxMesh"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkxMesh"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkxMeshSection": {
              "$ref": "#/$defs/hkxMeshSection"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkxMeshSection"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkxMeshUserChannelInfo": {
              "$ref": "#/$defs/hkxMeshUserChannelInfo"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkxMeshUserChannelInfo"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkxNode": {
              "$ref": "#/$defs/hkxNode"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkxNode"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkxNodeAnnotationData": {
              "$ref": "#/$defs/hkxNodeAnnotationData"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkxNodeAnnotationData"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkxNodeSelectionSet": {
              "$ref": "#/$defs/hkxNodeSelectionSet"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkxNodeSelectionSet"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkxScene": {
              "$ref": "#/$defs/hkxScene"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkxScene"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkxSkinBinding": {
              "$ref": "#/$defs/hkxSkinBinding"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkxSkinBinding"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkxSparselyAnimatedBool": {
              "$ref": "#/$defs/hkxSparselyAnimatedBool"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkxSparselyAnimatedBool"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkxSparselyAnimatedEnum": {
              "$ref": "#/$defs/hkxSparselyAnimatedEnum"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkxSparselyAnimatedEnum"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkxSparselyAnimatedInt": {
              "$ref": "#/$defs/hkxSparselyAnimatedInt"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkxSparselyAnimatedInt"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkxSparselyAnimatedString": {
              "$ref": "#/$defs/hkxSparselyAnimatedString"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkxSparselyAnimatedString"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkxTextureFile": {
              "$ref": "#/$defs/hkxTextureFile"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkxTextureFile"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkxTextureInplace": {
              "$ref": "#/$defs/hkxTextureInplace"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkxTextureInplace"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkxTriangleSelectionChannel": {
              "$ref": "#/$defs/hkxTriangleSelectionChannel"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkxTriangleSelectionChannel"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkxVertexBuffer": {
              "$ref": "#/$defs/hkxVertexBuffer"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkxVertexBuffer"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkxVertexBufferVertexData": {
              "$ref": "#/$defs/hkxVertexBufferVertexData"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkxVertexBufferVertexData"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkxVertexDescription": {
              "$ref": "#/$defs/hkxVertexDescription"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkxVertexDescription"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkxVertexDescriptionElementDecl": {
              "$ref": "#/$defs/hkxVertexDescriptionElementDecl"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkxVertexDescriptionElementDecl"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkxVertexFloatDataChannel": {
              "$ref": "#/$defs/hkxVertexFloatDataChannel"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkxVertexFloatDataChannel"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkxVertexIntDataChannel": {
              "$ref": "#/$defs/hkxVertexIntDataChannel"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkxVertexIntDataChannel"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkxVertexSelectionChannel": {
              "$ref": "#/$defs/hkxVertexSelectionChannel"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkxVertexSelectionChannel"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hkxVertexVectorDataChannel": {
              "$ref": "#/$defs/hkxVertexVectorDataChannel"
            }
          },
          "additionalProperties": false,
          "required": [
            "hkxVertexVectorDataChannel"
          ]
        }
      ]
    },
    "CollectionType": {
      "title": "C++ Info",
      "description": "- name: `CollectionType`(ctype: `hkEnum<CollectionType, hkUint8>`)",
      "type": "string",
      "enum": [
        "COLLECTION_LIST",
        "COLLECTION_EXTENDED_MESH",
        "COLLECTION_TRISAMPLED_HEIGHTFIELD",
        "COLLECTION_USER",
        "COLLECTION_SIMPLE_MESH",
        "COLLECTION_MESH_SHAPE",
        "COLLECTION_COMPRESSED_MESH",
        "COLLECTION_MAX"
      ]
    },
    "ComponentType": {
      "title": "C++ Info",
      "description": "- name: `ComponentType`(ctype: `hkEnum<ComponentType, hkUint8>`)",
      "type": "string",
      "enum": [
        "TYPE_NONE",
        "TYPE_INT8",
        "TYPE_UINT8",
        "TYPE_INT16",
        "TYPE_UINT16",
        "TYPE_INT32",
        "TYPE_UINT32",
        "TYPE_UINT8_DWORD",
        "TYPE_ARGB32",
        "TYPE_FLOAT16",
        "TYPE_FLOAT32",
        "TYPE_VECTOR4",
        "TYPE_LAST"
      ]
    },
    "ComponentUsage": {
      "title": "C++ Info",
      "description": "- name: `ComponentUsage`(ctype: `hkEnum<ComponentUsage, hkUint8>`)",
      "type": "string",
      "enum": [
        "USAGE_NONE",
        "USAGE_POSITION",
        "USAGE_NORMAL",
        "USAGE_COLOR",
        "USAGE_TANGENT",
        "USAGE_BINORMAL",
        "USAGE_BLEND_MATRIX_INDEX",
        "USAGE_BLEND_WEIGHTS",
        "USAGE_BLEND_WEIGHTS_LAST_IMPLIED",
        "USAGE_TEX_COORD",
        "USAGE_POINT_SIZE",
        "USAGE_USER",
        "USAGE_LAST"
      ]
    },
    "ConstraintPriority": {
      "title": "C++ Info",
      "description": "- name: `ConstraintPriority`(ctype: `hkEnum<ConstraintPriority, hkUint8>`)",
      "type": "string",
      "enum": [
        "PRIORITY_INVALID",
        "PRIORITY_PSI",
        "PRIORITY_SIMPLIFIED_TOI_UNUSED",
        "PRIORITY_TOI",
        "PRIORITY_TOI_HIGHER",
        "PRIORITY_TOI_FORCED",
        "NUM_PRIORITIES"
      ]
    },
    "ContactPointGeneration": {
      "title": "C++ Info",
      "description": "- name: `ContactPointGeneration`(ctype: `hkEnum<ContactPointGeneration, hkInt8>`)",
      "type": "string",
      "enum": [
        "CONTACT_POINT_ACCEPT_ALWAYS",
        "CONTACT_POINT_REJECT_DUBIOUS",
        "CONTACT_POINT_REJECT_MANY"
      ]
    },
    "DataType": {
      "title": "C++ Info",
      "description": "- name: `DataType`(ctype: `hkEnum<DataType, hkUint16>`)",
      "type": "string",
      "enum": [
        "HKX_DT_NONE",
        "HKX_DT_UINT8",
        "HKX_DT_INT16",
        "HKX_DT_UINT32",
        "HKX_DT_FLOAT"
      ]
    },
    "DataUsage": {
      "title": "C++ Info",
      "description": "- name: `DataUsage`(ctype: `hkEnum<DataUsage, hkUint16>`)",
      "type": "string",
      "enum": [
        "HKX_DU_NONE",
        "HKX_DU_POSITION",
        "HKX_DU_COLOR",
        "HKX_DU_NORMAL",
        "HKX_DU_TANGENT",
        "HKX_DU_BINORMAL",
        "HKX_DU_TEXCOORD",
        "HKX_DU_BLENDWEIGHTS",
        "HKX_DU_BLENDINDICES",
        "HKX_DU_USERDATA"
      ]
    },
    "EffectType": {
      "title": "C++ Info",
      "description": "- name: `EffectType`(ctype: `hkEnum<EffectType, hkUint8>`)",
      "type": "string",
      "enum": [
        "EFFECT_TYPE_INVALID",
        "EFFECT_TYPE_UNKNOWN",
        "EFFECT_TYPE_HLSL_FX_INLINE",
        "EFFECT_TYPE_CG_FX_INLINE",
        "EFFECT_TYPE_HLSL_FX_FILENAME",
        "EFFECT_TYPE_CG_FX_FILENAME",
        "EFFECT_TYPE_MAX_ID"
      ]
    },
    "EndMode": {
      "title": "C++ Info",
      "description": "- name: `EndMode`(ctype: `hkEnum<EndMode, hkInt8>`)",
      "type": "string",
      "enum": [
        "END_MODE_NONE",
        "END_MODE_TRANSITION_UNTIL_END_OF_FROM_GENERATOR",
        "END_MODE_CAP_DURATION_AT_END_OF_FROM_GENERATOR"
      ]
    },
    "Event": {
      "title": "C++ Info",
      "description": "- name: `Event`(ctype: `hkEnum<Event, hkUint8>`)",
      "type": "string",
      "enum": [
        "REMOVED_FROM_WORLD",
        "SHOWN",
        "HIDDEN"
      ]
    },
    "EventMode": {
      "title": "C++ Info",
      "description": "- name: `EventMode`(ctype: `hkEnum<EventMode, hkInt8>`)",
      "type": "string",
      "enum": [
        "EVENT_MODE_DEFAULT",
        "EVENT_MODE_PROCESS_ALL",
        "EVENT_MODE_IGNORE_FROM_GENERATOR",
        "EVENT_MODE_IGNORE_TO_GENERATOR"
      ]
    },
    "EventRangeMode": {
      "title": "C++ Info",
      "description": "- name: `EventRangeMode`(ctype: `hkEnum<EventRangeMode, hkInt8>`)",
      "type": "string",
      "enum": [
        "EVENT_MODE_SEND_ON_ENTER_RANGE",
        "EVENT_MODE_SEND_WHEN_IN_RANGE"
      ]
    },
    "ExpressionEventMode": {
      "title": "C++ Info",
      "description": "- name: `ExpressionEventMode`(ctype: `hkEnum<ExpressionEventMode, hkInt8>`)",
      "type": "string",
      "enum": [
        "EVENT_MODE_SEND_ONCE",
        "EVENT_MODE_SEND_ON_TRUE",
        "EVENT_MODE_SEND_ON_FALSE_TO_TRUE",
        "EVENT_MODE_SEND_EVERY_FRAME_ONCE_TRUE"
      ]
    },
    "ExtendedColors": {
      "type": "string",
      "enum": [
        "MAROON",
        "DARKRED",
        "RED",
        "LIGHTPINK",
        "CRIMSON",
        "PALEVIOLETRED",
        "HOTPINK",
        "DEEPPINK",
        "MEDIUMVIOLETRED",
        "PURPLE",
        "DARKMAGENTA",
        "ORCHID",
        "THISTLE",
        "PLUM",
        "VIOLET",
        "FUCHSIA",
        "MAGENTA",
        "MEDIUMORCHID",
        "DARKVIOLET",
        "DARKORCHID",
        "BLUEVIOLET",
        "INDIGO",
        "MEDIUMPURPLE",
        "SLATEBLUE",
        "MEDIUMSLATEBLUE",
        "DARKBLUE",
        "MEDIUMBLUE",
        "BLUE",
        "NAVY",
        "MIDNIGHTBLUE",
        "DARKSLATEBLUE",
        "ROYALBLUE",
        "CORNFLOWERBLUE",
        "LIGHTSTEELBLUE",
        "ALICEBLUE",
        "GHOSTWHITE",
        "LAVENDER",
        "DODGERBLUE",
        "STEELBLUE",
        "DEEPSKYBLUE",
        "SLATEGRAY",
        "LIGHTSLATEGRAY",
        "LIGHTSKYBLUE",
        "SKYBLUE",
        "LIGHTBLUE",
        "TEAL",
        "DARKCYAN",
        "DARKTURQUOISE",
        "CYAN",
        "MEDIUMTURQUOISE",
        "CADETBLUE",
        "PALETURQUOISE",
        "LIGHTCYAN",
        "AZURE",
        "LIGHTSEAGREEN",
        "TURQUOISE",
        "POWDERBLUE",
        "DARKSLATEGRAY",
        "AQUAMARINE",
        "MEDIUMSPRINGGREEN",
        "MEDIUMAQUAMARINE",
        "SPRINGGREEN",
        "MEDIUMSEAGREEN",
        "SEAGREEN",
        "LIMEGREEN",
        "DARKGREEN",
        "GREEN",
        "LIME",
        "FORESTGREEN",
        "DARKSEAGREEN",
        "LIGHTGREEN",
        "PALEGREEN",
        "MINTCREAM",
        "HONEYDEW",
        "CHARTREUSE",
        "LAWNGREEN",
        "OLIVEDRAB",
        "DARKOLIVEGREEN",
        "YELLOWGREEN",
        "GREENYELLOW",
        "BEIGE",
        "LINEN",
        "LIGHTGOLDENRODYELLOW",
        "OLIVE",
        "YELLOW",
        "LIGHTYELLOW",
        "IVORY",
        "DARKKHAKI",
        "KHAKI",
        "PALEGOLDENROD",
        "WHEAT",
        "GOLD",
        "LEMONCHIFFON",
        "PAPAYAWHIP",
        "DARKGOLDENROD",
        "GOLDENROD",
        "ANTIQUEWHITE",
        "CORNSILK",
        "OLDLACE",
        "MOCCASIN",
        "NAVAJOWHITE",
        "ORANGE",
        "BISQUE",
        "TAN",
        "DARKORANGE",
        "BURLYWOOD",
        "SADDLEBROWN",
        "SANDYBROWN",
        "BLANCHEDALMOND",
        "LAVENDERBLUSH",
        "SEASHELL",
        "FLORALWHITE",
        "SNOW",
        "PERU",
        "PEACHPUFF",
        "CHOCOLATE",
        "SIENNA",
        "LIGHTSALMON",
        "CORAL",
        "DARKSALMON",
        "MISTYROSE",
        "ORANGERED",
        "SALMON",
        "TOMATO",
        "ROSYBROWN",
        "PINK",
        "INDIANRED",
        "LIGHTCORAL",
        "BROWN",
        "FIREBRICK",
        "BLACK",
        "DIMGRAY",
        "GRAY",
        "DARKGRAY",
        "SILVER",
        "LIGHTGREY",
        "GAINSBORO",
        "WHITESMOKE",
        "WHITE",
        "GREY",
        "GREY25",
        "GREY50",
        "GREY75"
      ]
    },
    "FilterMode": {
      "title": "C++ Info",
      "description": "- name: `FilterMode`(ctype: `hkEnum<FilterMode, hkInt8>`)",
      "type": "string",
      "enum": [
        "POINT",
        "LINEAR",
        "ANISOTROPIC"
      ]
    },
    "FlagBits": {
      "description": "Bitflags field. Specific flags: FLAG_NONE: 0, FLAG_IGNORE_FROM_WORLD_FROM_MODEL: 1, FLAG_SYNC: 2, FLAG_IGNORE_TO_WORLD_FROM_MODEL: 4. Additional unspecified bits may be set.(e.g.: BIT_FLAG|BIT_FLAG2|4)",
      "type": "string"
    },
    "FlagValues": {
      "description": "Bitflags field. Specific flags: FLAGS_NONE: 0. Additional unspecified bits may be set.(e.g.: BIT_FLAG|BIT_FLAG2|4)",
      "type": "string"
    },
    "FlagValues2": {
      "description": "Bitflags field. Specific flags: FLAGS_NONE: 0, ALIGN_8: 128, ALIGN_16: 256, NOT_OWNED: 512, SERIALIZE_IGNORED: 1024. Additional unspecified bits may be set.(e.g.: BIT_FLAG|BIT_FLAG2|4)",
      "type": "string"
    },
    "FlagValues3": {
      "description": "Bitflags field. Specific flags: FLAGS_NONE: 0, FLAGS_NOT_SERIALIZABLE: 1. Additional unspecified bits may be set.(e.g.: BIT_FLAG|BIT_FLAG2|4)",
      "type": "string"
    },
    "Flags": {
      "description": "Bitflags field. Specific flags: FLAG_SILENT: 1, FLAG_SYNC_POINT: 2. Additional unspecified bits may be set.(e.g.: BIT_FLAG|BIT_FLAG2|4)",
      "type": "string"
    },
    "Format": {
      "title": "C++ Info",
      "description": "- name: `Format`(ctype: `hkEnum<Format, hkInt8>`)",
      "type": "string",
      "enum": [
        "Unknown",
        "PNG",
        "TGA",
        "BMP",
        "DDS"
      ]
    },
    "GizmoType": {
      "title": "C++ Info",
      "description": "- name: `GizmoType`(ctype: `hkEnum<GizmoType, hkInt8>`)",
      "type": "string",
      "enum": [
        "POINT",
        "SPHERE",
        "PLANE",
        "ARROW"
      ]
    },
    "HandleChangeMode": {
      "title": "C++ Info",
      "description": "- name: `HandleChangeMode`(ctype: `hkEnum<HandleChangeMode, hkInt8>`)",
      "type": "string",
      "enum": [
        "HANDLE_CHANGE_MODE_ABRUPT",
        "HANDLE_CHANGE_MODE_CONSTANT_VELOCITY"
      ]
    },
    "HandleChangeMode2": {
      "title": "C++ Info",
      "description": "- name: `HandleChangeMode`(ctype: `hkEnum<HandleChangeMode, hkInt8>`)",
      "type": "string",
      "enum": [
        "HANDLE_CHANGE_MODE_ABRUPT",
        "HANDLE_CHANGE_MODE_CONSTANT_VELOCITY"
      ]
    },
    "HeightFieldType": {
      "title": "C++ Info",
      "description": "- name: `HeightFieldType`(ctype: `hkEnum<HeightFieldType, hkUint8>`)",
      "type": "string",
      "enum": [
        "HEIGHTFIELD_STORAGE",
        "HEIGHTFIELD_COMPRESSED",
        "HEIGHTFIELD_USER",
        "HEIGHTFIELD_MAX_ID"
      ]
    },
    "HideInModeler": {
      "title": "C++ Info",
      "description": "- name: `HideInModeler`(ctype: `hkEnum<HideInModeler, hkInt8>`)",
      "type": "string",
      "enum": [
        "NONE",
        "MAX",
        "MAYA"
      ]
    },
    "Hint": {
      "title": "C++ Info",
      "description": "- name: `Hint`(ctype: `hkEnum<Hint, hkUint8>`)",
      "type": "string",
      "enum": [
        "HINT_NONE",
        "HINT_IGNORE",
        "HINT_TRANSFORM",
        "HINT_SCALE",
        "HINT_TRANSFORM_AND_SCALE",
        "HINT_FLIP"
      ]
    },
    "HintFlags": {
      "description": "Bitflags field. Specific flags: FLAG_READ: 1, FLAG_WRITE: 2, FLAG_DYNAMIC: 4, FLAG_NOT_SHARED: 8. Additional unspecified bits may be set.(e.g.: BIT_FLAG|BIT_FLAG2|4)",
      "type": "string"
    },
    "IndexStridingType": {
      "title": "C++ Info",
      "description": "- name: `IndexStridingType`(ctype: `hkEnum<IndexStridingType, hkInt8>`)",
      "type": "string",
      "enum": [
        "INDICES_INVALID",
        "INDICES_INT8",
        "INDICES_INT16",
        "INDICES_INT32",
        "INDICES_MAX_ID"
      ]
    },
    "IndexType": {
      "title": "C++ Info",
      "description": "- name: `IndexType`(ctype: `hkEnum<IndexType, hkInt8>`)",
      "type": "string",
      "enum": [
        "INDEX_TYPE_INVALID",
        "INDEX_TYPE_TRI_LIST",
        "INDEX_TYPE_TRI_STRIP",
        "INDEX_TYPE_TRI_FAN",
        "INDEX_TYPE_MAX_ID"
      ]
    },
    "InitialVelocityCoordinates": {
      "title": "C++ Info",
      "description": "- name: `InitialVelocityCoordinates`(ctype: `hkEnum<InitialVelocityCoordinates, hkInt8>`)",
      "type": "string",
      "enum": [
        "INITIAL_VELOCITY_IN_WORLD_COORDINATES",
        "INITIAL_VELOCITY_IN_MODEL_COORDINATES"
      ]
    },
    "KeyboardKey": {
      "title": "C++ Info",
      "description": "- name: `KeyboardKey`(ctype: `hkEnum<KeyboardKey, hkUint8>`)",
      "type": "string",
      "enum": [
        "KEY_F1",
        "KEY_F2",
        "KEY_F3",
        "KEY_F4",
        "KEY_F5",
        "KEY_F6",
        "KEY_F7",
        "KEY_F8",
        "KEY_F9",
        "KEY_F10",
        "KEY_F11",
        "KEY_F12"
      ]
    },
    "LastProcessingStep": {
      "title": "C++ Info",
      "description": "- name: `LastProcessingStep`(ctype: `hkEnum<LastProcessingStep, hkUint8>`)",
      "type": "string",
      "enum": [
        "INTEGRATE",
        "COLLIDE"
      ]
    },
    "LightType": {
      "title": "C++ Info",
      "description": "- name: `LightType`(ctype: `hkEnum<LightType, hkInt8>`)",
      "type": "string",
      "enum": [
        "POINT_LIGHT",
        "DIRECTIONAL_LIGHT",
        "SPOT_LIGHT"
      ]
    },
    "LinearVelocityMode": {
      "title": "C++ Info",
      "description": "- name: `LinearVelocityMode`(ctype: `hkEnum<LinearVelocityMode, hkInt8>`)",
      "type": "string",
      "enum": [
        "LINEAR_VELOCITY_MODE_WORLD",
        "LINEAR_VELOCITY_MODE_MODEL"
      ]
    },
    "Link": {
      "title": "C++ Info",
      "description": "- name: `Link`(ctype: `hkEnum<Link, hkInt8>`)",
      "type": "string",
      "enum": [
        "NONE",
        "DIRECT_LINK",
        "CHILD",
        "MESH",
        "PARENT_NAME"
      ]
    },
    "MappingType": {
      "title": "C++ Info",
      "description": "- name: `MappingType`(ctype: `hkEnum<MappingType, hkInt32>`)",
      "type": "string",
      "enum": [
        "HK_RAGDOLL_MAPPING",
        "HK_RETARGETING_MAPPING"
      ]
    },
    "MaterialIndexStridingType": {
      "title": "C++ Info",
      "description": "- name: `MaterialIndexStridingType`(ctype: `hkEnum<MaterialIndexStridingType, hkInt8>`)",
      "type": "string",
      "enum": [
        "MATERIAL_INDICES_INVALID",
        "MATERIAL_INDICES_INT8",
        "MATERIAL_INDICES_INT16",
        "MATERIAL_INDICES_MAX_ID"
      ]
    },
    "MaterialType": {
      "title": "C++ Info",
      "description": "- name: `MaterialType`(ctype: `hkEnum<MaterialType, hkUint8>`)",
      "type": "string",
      "enum": [
        "MATERIAL_NONE",
        "MATERIAL_SINGLE_VALUE_PER_CHUNK",
        "MATERIAL_ONE_BYTE_PER_TRIANGLE",
        "MATERIAL_TWO_BYTES_PER_TRIANGLE",
        "MATERIAL_FOUR_BYTES_PER_TRIANGLE"
      ]
    },
    "Matrix3": {
      "title": "Matrix3x3",
      "description": "# C++ Info\n - name: `hkMatrix3`\n - type_size: ` 48`(x86)/` 48`(x86_64)\n - align: ` 16`(x86)/` 16`(x86_64)\n\n # Examples\n ```\n use havok_types::{Matrix3, Vector4};\n\n assert_eq!(Matrix3::new(\n  Vector4::new(0.0, 0.0, 0.0, 0.0),\n  Vector4::new(-0.0, 0.0, 1.0, 0.0),\n  Vector4::new(1.0, 1.0, 0.0, 0.0),\n ).to_string(), \"(0.000000 0.000000 0.000000)(-0.000000 0.000000 1.000000)(1.000000 1.000000 0.000000)\");\n ```\n\n # Note\n - [`Vector4::w`] (4th) isn't used.",
      "type": "object",
      "properties": {
        "x": {
          "title": "C++ Info",
          "description": "- name: `x`(ctype: `hkVector4`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)\n\n # NOTE\n - `Vector4::w`(4th) isn't used(always 0.0).",
          "$ref": "#/$defs/Vector4"
        },
        "y": {
          "title": "C++ Info",
          "description": "- name: `y`(ctype: `hkVector4`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)\n\n # NOTE\n - `Vector4::w`(4th) isn't used(always 0.0).",
          "$ref": "#/$defs/Vector4"
        },
        "z": {
          "title": "C++ Info",
          "description": "- name: `z`(ctype: `hkVector4`)\n - offset: ` 32`(x86)/` 32`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)\n\n # NOTE\n - `Vector4::w`(4th) isn't used(always 0.0).",
          "$ref": "#/$defs/Vector4"
        }
      },
      "required": [
        "x",
        "y",
        "z"
      ]
    },
    "Matrix4": {
      "title": "Matrix4x4",
      "description": "# C++ Info\n - name: `hkMatrix4`\n - type_size: ` 64`(x86)/` 64`(x86_64)\n - align: ` 16`(x86)/` 16`(x86_64)\n\n # XML representation\n ```xml\n <hkparam>(0.000000 0.000000 0.000000 0.000000)(-0.000000 0.000000 -0.000000 1.000000)(1.000000 1.000000 1.000000 0.000000)(1.000000 1.000000 1.000000 0.000000)</hkparam>\n ```",
      "type": "object",
      "properties": {
        "w": {
          "title": "C++ Info",
          "description": "- name: `w`(ctype: `hkVector4`)\n - offset: ` 48`(x86)/` 48`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "x": {
          "title": "C++ Info",
          "description": "- name: `x`(ctype: `hkVector4`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "y": {
          "title": "C++ Info",
          "description": "- name: `y`(ctype: `hkVector4`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "z": {
          "title": "C++ Info",
          "description": "- name: `z`(ctype: `hkVector4`)\n - offset: ` 32`(x86)/` 32`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        }
      },
      "required": [
        "x",
        "y",
        "z",
        "w"
      ]
    },
    "MeasurementMode": {
      "title": "C++ Info",
      "description": "- name: `MeasurementMode`(ctype: `hkEnum<MeasurementMode, hkUint8>`)",
      "type": "string",
      "enum": [
        "ZERO_WHEN_VECTORS_ALIGNED",
        "ZERO_WHEN_VECTORS_PERPENDICULAR"
      ]
    },
    "MeshSectionIndexType": {
      "title": "C++ Info",
      "description": "- name: `MeshSectionIndexType`(ctype: `hkEnum<MeshSectionIndexType, hkUint8>`)",
      "type": "string",
      "enum": [
        "INDEX_TYPE_NONE",
        "INDEX_TYPE_UINT16",
        "INDEX_TYPE_UINT32"
      ]
    },
    "MeshShapeIndexStridingType": {
      "title": "C++ Info",
      "description": "- name: `MeshShapeIndexStridingType`(ctype: `hkEnum<MeshShapeIndexStridingType, hkInt8>`)",
      "type": "string",
      "enum": [
        "INDICES_INVALID",
        "INDICES_INT16",
        "INDICES_INT32",
        "INDICES_MAX_ID"
      ]
    },
    "MeshShapeMaterialIndexStridingType": {
      "title": "C++ Info",
      "description": "- name: `MeshShapeMaterialIndexStridingType`(ctype: `hkEnum<MeshShapeMaterialIndexStridingType, hkInt8>`)",
      "type": "string",
      "enum": [
        "MATERIAL_INDICES_INVALID",
        "MATERIAL_INDICES_INT8",
        "MATERIAL_INDICES_INT16",
        "MATERIAL_INDICES_MAX_ID"
      ]
    },
    "Mode": {
      "title": "C++ Info",
      "description": "- name: `Mode`(ctype: `hkEnum<Mode, hkInt8>`)",
      "type": "string",
      "enum": [
        "MODE_MATCH",
        "MODE_PLAY"
      ]
    },
    "ModelerType": {
      "title": "C++ Info",
      "description": "- name: `ModelerType`(ctype: `hkEnum<ModelerType, hkInt8>`)",
      "type": "string",
      "enum": [
        "DEFAULT",
        "LOCATOR"
      ]
    },
    "MotionMode": {
      "title": "C++ Info",
      "description": "- name: `MotionMode`(ctype: `hkEnum<MotionMode, hkInt8>`)",
      "type": "string",
      "enum": [
        "MOTION_MODE_FOLLOW_ANIMATION",
        "MOTION_MODE_DYNAMIC"
      ]
    },
    "MotionType": {
      "title": "C++ Info",
      "description": "- name: `MotionType`(ctype: `hkEnum<MotionType, hkUint8>`)",
      "type": "string",
      "enum": [
        "MOTION_INVALID",
        "MOTION_DYNAMIC",
        "MOTION_SPHERE_INERTIA",
        "MOTION_BOX_INERTIA",
        "MOTION_KEYFRAMED",
        "MOTION_FIXED",
        "MOTION_THIN_BOX_INERTIA",
        "MOTION_CHARACTER",
        "MOTION_MAX_ID"
      ]
    },
    "MotorType": {
      "title": "C++ Info",
      "description": "- name: `MotorType`(ctype: `hkEnum<MotorType, hkInt8>`)",
      "type": "string",
      "enum": [
        "TYPE_INVALID",
        "TYPE_POSITION",
        "TYPE_VELOCITY",
        "TYPE_SPRING_DAMPER",
        "TYPE_CALLBACK",
        "TYPE_MAX"
      ]
    },
    "NodeType": {
      "title": "C++ Info",
      "description": "- name: `NodeType`(ctype: `hkEnum<NodeType, hkUint8>`)",
      "type": "string",
      "enum": [
        "NODE_TYPE_UNKNOWN",
        "NODE_TYPE_NODE",
        "NODE_TYPE_TRANSITION",
        "NODE_TYPE_WILDCARD_TRANSITION",
        "NODE_TYPE_STATE",
        "NODE_TYPE_STATE_MACHINE",
        "NODE_TYPE_MODIFIER_GENERATOR",
        "NODE_TYPE_MODIFIER",
        "NODE_TYPE_CLIP",
        "NODE_TYPE_BLEND",
        "NODE_TYPE_TRANSITION_EFFECT"
      ]
    },
    "OnDestructionRemapInfo": {
      "title": "C++ Info",
      "description": "- name: `OnDestructionRemapInfo`(ctype: `hkEnum<OnDestructionRemapInfo, hkUint8>`)",
      "type": "string",
      "enum": [
        "ON_DESTRUCTION_REMAP",
        "ON_DESTRUCTION_REMOVE",
        "ON_DESTRUCTION_RESET_REMOVE"
      ]
    },
    "Operation": {
      "title": "C++ Info",
      "description": "- name: `Operation`(ctype: `hkEnum<Operation, hkInt32>`)",
      "type": "string",
      "enum": [
        "ADDED_OP",
        "REMOVED_OP",
        "CONTACT_OP",
        "TOI_OP"
      ]
    },
    "Operator": {
      "title": "C++ Info",
      "description": "- name: `Operator`(ctype: `hkEnum<Operator, hkInt8>`)",
      "type": "string",
      "enum": [
        "OP_NOP",
        "OP_RAND01",
        "OP_LOGICAL_NOT",
        "OP_UNARY_MINUS",
        "OP_UNARY_PLUS",
        "OP_SIN",
        "OP_COS",
        "OP_ASIN",
        "OP_ACOS",
        "OP_SQRT",
        "OP_FABS",
        "OP_CEIL",
        "OP_FLOOR",
        "OP_SQRTINV",
        "OP_MUL",
        "OP_DIV",
        "OP_ADD",
        "OP_SUB",
        "OP_LOGICAL_OR",
        "OP_LOGICAL_AND",
        "OP_EQ",
        "OP_NEQ",
        "OP_LT",
        "OP_GT",
        "OP_LEQ",
        "OP_GEQ",
        "OP_POW",
        "OP_MAX2",
        "OP_MIN2",
        "OP_RANDRANGE",
        "OP_ATAN2APPROX",
        "OP_CLAMP",
        "OP_MOD",
        "OP_DEG2RAD",
        "OP_RAD2DEG",
        "OP_COSD",
        "OP_SIND",
        "OP_ACOSD",
        "OP_ASIND",
        "OP_ATAN2APPROXD",
        "OP_SIGN",
        "OP_LERP",
        "OP_CLERP",
        "OP_COND"
      ]
    },
    "OrientationConstraintType": {
      "title": "C++ Info",
      "description": "- name: `OrientationConstraintType`(ctype: `hkEnum<OrientationConstraintType, hkInt8>`)",
      "type": "string",
      "enum": [
        "CONSTRAIN_ORIENTATION_INVALID",
        "CONSTRAIN_ORIENTATION_NONE",
        "CONSTRAIN_ORIENTATION_ALLOW_SPIN",
        "CONSTRAIN_ORIENTATION_TO_PATH",
        "CONSTRAIN_ORIENTATION_MAX_ID"
      ]
    },
    "PhantomType": {
      "title": "C++ Info",
      "description": "- name: `PhantomType`(ctype: `hkEnum<PhantomType, hkInt8>`)",
      "type": "string",
      "enum": [
        "PHANTOM_TYPE_SIMPLE",
        "PHANTOM_TYPE_CACHING"
      ]
    },
    "PlaybackMode": {
      "title": "C++ Info",
      "description": "- name: `PlaybackMode`(ctype: `hkEnum<PlaybackMode, hkInt8>`)",
      "type": "string",
      "enum": [
        "MODE_SINGLE_PLAY",
        "MODE_LOOPING",
        "MODE_USER_CONTROLLED",
        "MODE_PING_PONG",
        "MODE_COUNT"
      ]
    },
    "PrimitiveType": {
      "title": "C++ Info",
      "description": "- name: `PrimitiveType`(ctype: `hkEnum<PrimitiveType, hkUint8>`)",
      "type": "string",
      "enum": [
        "PRIMITIVE_TYPE_UNKNOWN",
        "PRIMITIVE_TYPE_POINT_LIST",
        "PRIMITIVE_TYPE_LINE_LIST",
        "PRIMITIVE_TYPE_TRIANGLE_LIST",
        "PRIMITIVE_TYPE_TRIANGLE_STRIP"
      ]
    },
    "QsTransform": {
      "title": "QsTransform",
      "description": "# C++ Info\n - name: `hkQsTransform`\n - type_size: ` 48`(x86)/` 48`(x86_64)\n - align: ` 16`(x86)/` 16`(x86_64)\n\n # XML representation\n - [`Vector4::w`] (4th) of `transition` & `scale` isn't used.\n ```xml\n <!--  transition: Vector4 --><!--     rotation: Quaternion      --><!--   scale: Vector4    -->\n (0.000000 0.000000 0.000000)(-0.000000 0.000000 -0.000000 1.000000)(1.000000 1.000000 1.000000)\n ```\n\n [`Vector4::w`](Vector4)",
      "type": "object",
      "properties": {
        "quaternion": {
          "title": "C++ Info",
          "description": "- name: `quaternion`(ctype: `hkQuaternion`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Quaternion"
        },
        "scale": {
          "title": "C++ Info",
          "description": "- name: `scale`(ctype: `hkVector4`)\n - offset: ` 32`(x86)/` 32`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)\n - `scale`: `Vector4`\n\n # NOTE\n - `Vector4::w`(4th) isn't used(always 0.0).",
          "$ref": "#/$defs/Vector4"
        },
        "transition": {
          "title": "C++ Info",
          "description": "- name: `transition`(ctype: `hkVector4`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)\n\n # NOTE\n - `Vector4::w`(4th) isn't used(always 0.0).",
          "$ref": "#/$defs/Vector4"
        }
      },
      "required": [
        "transition",
        "quaternion",
        "scale"
      ]
    },
    "Quaternion": {
      "title": "Quaternion",
      "description": "# C++ Info\n - name: `hkQuaternion`\n - type_size: ` 16`(x86)/` 16`(x86_64)\n\n # XML representation\n ```xml\n <hkparam>(0.000000 0.000000 0.000000 1.000000)</hkparam>\n ```",
      "type": "object",
      "properties": {
        "scaler": {
          "title": "C++ Info",
          "description": "- name: `scaler`(ctype: `hkReal`)\n - offset: ` 12`(x86)/` 12`(x86_64)\n - type_size: ` 4`(x86)/` 4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "x": {
          "title": "C++ Info",
          "description": "- name: `x`(ctype: `hkReal`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: ` 4`(x86)/` 4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "y": {
          "title": "C++ Info",
          "description": "- name: `y`(ctype: `hkReal`)\n - offset: `  4`(x86)/`  4`(x86_64)\n - type_size: ` 4`(x86)/` 4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "z": {
          "title": "C++ Info",
          "description": "- name: `z`(ctype: `hkReal`)\n - offset: `  8`(x86)/`  8`(x86_64)\n - type_size: ` 4`(x86)/` 4`(x86_64)",
          "type": "number",
          "format": "float"
        }
      },
      "required": [
        "x",
        "y",
        "z",
        "scaler"
      ]
    },
    "ResponseType": {
      "title": "C++ Info",
      "description": "- name: `ResponseType`(ctype: `hkEnum<ResponseType, hkInt8>`)",
      "type": "string",
      "enum": [
        "RESPONSE_INVALID",
        "RESPONSE_SIMPLE_CONTACT",
        "RESPONSE_REPORTING",
        "RESPONSE_NONE",
        "RESPONSE_MAX_ID"
      ]
    },
    "Role": {
      "title": "C++ Info",
      "description": "- name: `Role`(ctype: `hkEnum<Role, hkInt16>`)",
      "type": "string",
      "enum": [
        "ROLE_DEFAULT",
        "ROLE_FILE_NAME",
        "ROLE_BONE_INDEX",
        "ROLE_BONE_INDEX_MAP",
        "ROLE_EVENT_ID",
        "ROLE_VARIABLE_INDEX",
        "ROLE_ATTRIBUTE_INDEX",
        "ROLE_TIME"
      ]
    },
    "RoleFlags": {
      "description": "Bitflags field. Specific flags: FLAG_NONE: 0, FLAG_RAGDOLL: 1, FLAG_NORMALIZED: 2, FLAG_NOT_VARIABLE: 4, FLAG_HIDDEN: 8, FLAG_OUTPUT: 16, FLAG_NOT_CHARACTER_PROPERTY: 32. Additional unspecified bits may be set.(e.g.: BIT_FLAG|BIT_FLAG2|4)",
      "type": "string"
    },
    "Rotation": {
      "description": "Rotation (same as [`Matrix3`])\n\n # C++ Info\n - name: `hkRotation`\n - type_size: ` 48`(x86)/` 48`(x86_64)\n - align: ` 16`(x86)/` 16`(x86_64)\n\n # Examples\n ```\n use havok_types::{Rotation, Vector4};\n\n assert_eq!(Rotation::new(\n  Vector4::new(0.0, 0.0, 0.0, 0.0),\n  Vector4::new(-0.0, 0.0, 1.0, 0.0),\n  Vector4::new(1.0, 1.0, 0.0, 0.0),\n ).to_string(), \"(0.000000 0.000000 0.000000)(-0.000000 0.000000 1.000000)(1.000000 1.000000 0.000000)\");\n ```\n\n # Note\n - [`Vector4::w`] (4th) isn't used.",
      "type": "object",
      "properties": {
        "x": {
          "title": "C++ Info",
          "description": "- name: `x`(ctype: `hkVector4`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)\n\n # NOTE\n - `Vector4::w`(4th) isn't used(always 0.0).",
          "$ref": "#/$defs/Vector4"
        },
        "y": {
          "title": "C++ Info",
          "description": "- name: `y`(ctype: `hkVector4`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)\n\n # NOTE\n - `Vector4::w`(4th) isn't used(always 0.0).",
          "$ref": "#/$defs/Vector4"
        },
        "z": {
          "title": "C++ Info",
          "description": "- name: `z`(ctype: `hkVector4`)\n - offset: ` 32`(x86)/` 32`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)\n\n # NOTE\n - `Vector4::w`(4th) isn't used(always 0.0).",
          "$ref": "#/$defs/Vector4"
        }
      },
      "required": [
        "x",
        "y",
        "z"
      ]
    },
    "RotationAxisCoordinates": {
      "title": "C++ Info",
      "description": "- name: `RotationAxisCoordinates`(ctype: `hkEnum<RotationAxisCoordinates, hkInt8>`)",
      "type": "string",
      "enum": [
        "ROTATION_AXIS_IN_MODEL_COORDINATES",
        "ROTATION_AXIS_IN_LOCAL_COORDINATES"
      ]
    },
    "RotationQuantization": {
      "title": "C++ Info",
      "description": "- name: `RotationQuantization`(ctype: `hkEnum<RotationQuantization, hkUint8>`)",
      "type": "string",
      "enum": [
        "POLAR32",
        "THREECOMP40",
        "THREECOMP48",
        "THREECOMP24",
        "STRAIGHT16",
        "UNCOMPRESSED"
      ]
    },
    "ScalarQuantization": {
      "title": "C++ Info",
      "description": "- name: `ScalarQuantization`(ctype: `hkEnum<ScalarQuantization, hkUint8>`)",
      "type": "string",
      "enum": [
        "BITS8",
        "BITS16"
      ]
    },
    "SelfTransitionMode": {
      "title": "C++ Info",
      "description": "- name: `SelfTransitionMode`(ctype: `hkEnum<SelfTransitionMode, hkInt8>`)",
      "type": "string",
      "enum": [
        "SELF_TRANSITION_MODE_CONTINUE_IF_CYCLIC_BLEND_IF_ACYCLIC",
        "SELF_TRANSITION_MODE_CONTINUE",
        "SELF_TRANSITION_MODE_RESET",
        "SELF_TRANSITION_MODE_BLEND"
      ]
    },
    "Semantics": {
      "title": "C++ Info",
      "description": "- name: `Semantics`(ctype: `hkEnum<Semantics, hkInt8>`)",
      "type": "string",
      "enum": [
        "UNKNOWN",
        "DISTANCE",
        "ANGLE",
        "NORMAL",
        "POSITION",
        "COSINE_ANGLE"
      ]
    },
    "SensingMode": {
      "title": "C++ Info",
      "description": "- name: `SensingMode`(ctype: `hkEnum<SensingMode, hkInt8>`)",
      "type": "string",
      "enum": [
        "SENSE_IN_NEARBY_RIGID_BODIES",
        "SENSE_IN_RIGID_BODIES_OUTSIDE_THIS_CHARACTER",
        "SENSE_IN_OTHER_CHARACTER_RIGID_BODIES",
        "SENSE_IN_THIS_CHARACTER_RIGID_BODIES",
        "SENSE_IN_GIVEN_CHARACTER_RIGID_BODIES",
        "SENSE_IN_GIVEN_RIGID_BODY",
        "SENSE_IN_OTHER_CHARACTER_SKELETON",
        "SENSE_IN_THIS_CHARACTER_SKELETON",
        "SENSE_IN_GIVEN_CHARACTER_SKELETON",
        "SENSE_IN_GIVEN_LOCAL_FRAME_GROUP"
      ]
    },
    "SerializedAgentType": {
      "title": "C++ Info",
      "description": "- name: `SerializedAgentType`(ctype: `hkEnum<SerializedAgentType, hkInt8>`)",
      "type": "string",
      "enum": [
        "INVALID_AGENT_TYPE",
        "BOX_BOX_AGENT3",
        "CAPSULE_TRIANGLE_AGENT3",
        "PRED_GSK_AGENT3",
        "PRED_GSK_CYLINDER_AGENT3",
        "CONVEX_LIST_AGENT3",
        "LIST_AGENT3",
        "BV_TREE_AGENT3",
        "COLLECTION_COLLECTION_AGENT3",
        "COLLECTION_AGENT3"
      ]
    },
    "SetAngleMethod": {
      "title": "C++ Info",
      "description": "- name: `SetAngleMethod`(ctype: `hkEnum<SetAngleMethod, hkInt8>`)",
      "type": "string",
      "enum": [
        "LINEAR",
        "RAMPED"
      ]
    },
    "ShaderType": {
      "title": "C++ Info",
      "description": "- name: `ShaderType`(ctype: `hkEnum<ShaderType, hkUint8>`)",
      "type": "string",
      "enum": [
        "EFFECT_TYPE_INVALID",
        "EFFECT_TYPE_UNKNOWN",
        "EFFECT_TYPE_HLSL_INLINE",
        "EFFECT_TYPE_CG_INLINE",
        "EFFECT_TYPE_HLSL_FILENAME",
        "EFFECT_TYPE_CG_FILENAME",
        "EFFECT_TYPE_MAX_ID"
      ]
    },
    "SimulationControlCommand": {
      "title": "C++ Info",
      "description": "- name: `SimulationControlCommand`(ctype: `hkEnum<SimulationControlCommand, hkUint8>`)",
      "type": "string",
      "enum": [
        "COMMAND_PLAY",
        "COMMAND_PAUSE",
        "COMMAND_STEP",
        "COMMAND_STOP",
        "COMMAND_ACCUMULATE_MOTION",
        "COMMAND_DO_NOT_ACCUMULATE_MOTION"
      ]
    },
    "SimulationState": {
      "title": "C++ Info",
      "description": "- name: `SimulationState`(ctype: `hkEnum<SimulationState, hkUint8>`)",
      "type": "string",
      "enum": [
        "SIMULATION_STATE_PLAY",
        "SIMULATION_STATE_PAUSE",
        "SIMULATION_STATE_STEP",
        "SIMULATION_STATE_STOP"
      ]
    },
    "SimulationType": {
      "title": "C++ Info",
      "description": "- name: `SimulationType`(ctype: `hkEnum<SimulationType, hkInt8>`)",
      "type": "string",
      "enum": [
        "SIMULATION_TYPE_INVALID",
        "SIMULATION_TYPE_DISCRETE",
        "SIMULATION_TYPE_CONTINUOUS",
        "SIMULATION_TYPE_MULTITHREADED"
      ]
    },
    "SolvingMethod": {
      "title": "C++ Info",
      "description": "- name: `SolvingMethod`(ctype: `hkEnum<SolvingMethod, hkUint8>`)",
      "type": "string",
      "enum": [
        "METHOD_STABILIZED",
        "METHOD_OLD"
      ]
    },
    "Stage": {
      "title": "C++ Info",
      "description": "- name: `Stage`(ctype: `hkEnum<Stage, hkInt8>`)",
      "type": "string",
      "enum": [
        "STAGE_BLENDING_IN",
        "STAGE_PLAYING_TRANSITION_GENERATOR",
        "STAGE_BLENDING_OUT"
      ]
    },
    "StartStateMode": {
      "title": "C++ Info",
      "description": "- name: `StartStateMode`(ctype: `hkEnum<StartStateMode, hkInt8>`)",
      "type": "string",
      "enum": [
        "START_STATE_MODE_DEFAULT",
        "START_STATE_MODE_SYNC",
        "START_STATE_MODE_RANDOM",
        "START_STATE_MODE_CHOOSER"
      ]
    },
    "StateMachineSelfTransitionMode": {
      "title": "C++ Info",
      "description": "- name: `StateMachineSelfTransitionMode`(ctype: `hkEnum<StateMachineSelfTransitionMode, hkInt8>`)",
      "type": "string",
      "enum": [
        "SELF_TRANSITION_MODE_NO_TRANSITION",
        "SELF_TRANSITION_MODE_TRANSITION_TO_START_STATE",
        "SELF_TRANSITION_MODE_FORCE_TRANSITION_TO_START_STATE"
      ]
    },
    "SubpartType": {
      "title": "C++ Info",
      "description": "- name: `SubpartType`(ctype: `hkEnum<SubpartType, hkInt8>`)",
      "type": "string",
      "enum": [
        "SUBPART_TRIANGLES",
        "SUBPART_SHAPE"
      ]
    },
    "SystemType": {
      "title": "C++ Info",
      "description": "- name: `SystemType`(ctype: `hkEnum<SystemType, hkUint8>`)",
      "type": "string",
      "enum": [
        "DEBRIS",
        "DUST",
        "EXPLOSION",
        "SMOKE",
        "SPARKS"
      ]
    },
    "TextureType": {
      "title": "C++ Info",
      "description": "- name: `TextureType`(ctype: `hkEnum<TextureType, hkInt32>`)",
      "type": "string",
      "enum": [
        "TEX_UNKNOWN",
        "TEX_DIFFUSE",
        "TEX_REFLECTION",
        "TEX_BUMP",
        "TEX_NORMAL",
        "TEX_DISPLACEMENT",
        "TEX_SPECULAR",
        "TEX_SPECULARANDGLOSS",
        "TEX_OPACITY",
        "TEX_EMISSIVE",
        "TEX_REFRACTION",
        "TEX_GLOSS",
        "TEX_NOTEXPORTED"
      ]
    },
    "TextureUsageType": {
      "title": "C++ Info",
      "description": "- name: `TextureUsageType`(ctype: `hkEnum<TextureUsageType, hkInt8>`)",
      "type": "string",
      "enum": [
        "UNKNOWN",
        "DIFFUSE",
        "REFLECTION",
        "BUMP",
        "NORMAL",
        "DISPLACEMENT",
        "SPECULAR",
        "SPECULARANDGLOSS",
        "OPACITY",
        "EMISSIVE",
        "REFRACTION",
        "GLOSS",
        "NOTEXPORTED"
      ]
    },
    "ToGeneratorState": {
      "title": "C++ Info",
      "description": "- name: `ToGeneratorState`(ctype: `hkEnum<ToGeneratorState, hkInt8>`)",
      "type": "string",
      "enum": [
        "STATE_INACTIVE",
        "STATE_READY_FOR_SET_LOCAL_TIME",
        "STATE_READY_FOR_APPLY_SELF_TRANSITION_MODE",
        "STATE_ACTIVE"
      ]
    },
    "TokenType": {
      "title": "C++ Info",
      "description": "- name: `TokenType`(ctype: `hkEnum<TokenType, hkInt8>`)",
      "type": "string",
      "enum": [
        "TOKEN_TYPE_NONE",
        "TOKEN_TYPE_OPERATOR",
        "TOKEN_TYPE_NUMBER",
        "TOKEN_TYPE_VARIABLE_INDEX",
        "TOKEN_TYPE_OPENING_PAREN",
        "TOKEN_TYPE_CLOSING_PAREN",
        "TOKEN_TYPE_COMMA",
        "TOKEN_TYPE_CHARACTER_PROPERTY_INDEX"
      ]
    },
    "ToolNodeType": {
      "title": "C++ Info",
      "description": "- name: `ToolNodeType`(ctype: `hkEnum<ToolNodeType, hkUint8>`)",
      "type": "string",
      "enum": [
        "NODE_TYPE_UNKNOWN",
        "NODE_TYPE_STATE_MACHINE",
        "NODE_TYPE_CLIP",
        "NODE_TYPE_BLEND",
        "NODE_TYPE_MODIFIER",
        "NODE_TYPE_GENERATOR",
        "NODE_TYPE_MODIFIER_GENERATOR",
        "NODE_TYPE_TRANSITION_EFFECT",
        "NODE_TYPE_BEHAVIOR_FILE_REFERENCE"
      ]
    },
    "Transform": {
      "title": "Transform",
      "description": "# C++ Info\n - name: `hkTransform`\n - type_size: ` 64`(x86)/` 64`(x86_64)\n - align: ` 16`(x86)/` 16`(x86_64)\n\n # XML representation\n - [`Vector4::w`] (4th) isn't used.\n ```xml\n          <!--                             Matrix3 rotation                                --><!--   Vector4 transition  -->\n <hkparam>(0.000000 0.000000 0.000000)(0.000000 0.000000 0.000000)(0.000000 0.000000 0.000000)(-0.000000 0.000000 -0.000000)</hkparam>\n ```",
      "type": "object",
      "properties": {
        "rotation": {
          "title": "C++ Info",
          "description": "- name: `rotation`(ctype: `hkRotation`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: ` 48`(x86)/` 48`(x86_64)",
          "$ref": "#/$defs/Rotation"
        },
        "transition": {
          "title": "C++ Info",
          "description": "- name: `transition`(ctype: `hkVector4`)\n - offset: ` 48`(x86)/` 48`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)\n\n # NOTE\n - `Vector4::w`(4th) isn't used(always 0.0).",
          "$ref": "#/$defs/Vector4"
        }
      },
      "required": [
        "rotation",
        "transition"
      ]
    },
    "TransitionFlags": {
      "description": "Bitflags field. Specific flags: FLAG_USE_TRIGGER_INTERVAL: 1, FLAG_USE_INITIATE_INTERVAL: 2, FLAG_UNINTERRUPTIBLE_WHILE_PLAYING: 4, FLAG_UNINTERRUPTIBLE_WHILE_DELAYED: 8, FLAG_DELAY_STATE_CHANGE: 16, FLAG_DISABLED: 32, FLAG_DISALLOW_RETURN_TO_PREVIOUS_STATE: 64, FLAG_DISALLOW_RANDOM_TRANSITION: 128, FLAG_DISABLE_CONDITION: 256, FLAG_ALLOW_SELF_TRANSITION_BY_TRANSITION_FROM_ANY_STATE: 512, FLAG_IS_GLOBAL_WILDCARD: 1024, FLAG_IS_LOCAL_WILDCARD: 2048, FLAG_FROM_NESTED_STATE_ID_IS_VALID: 4096, FLAG_TO_NESTED_STATE_ID_IS_VALID: 8192, FLAG_ABUT_AT_END_OF_FROM_GENERATOR: 16384. Additional unspecified bits may be set.(e.g.: BIT_FLAG|BIT_FLAG2|4)",
      "type": "string"
    },
    "TreeUpdateType": {
      "title": "C++ Info",
      "description": "- name: `TreeUpdateType`(ctype: `hkEnum<TreeUpdateType, hkInt8>`)",
      "type": "string",
      "enum": [
        "REBUILD_ACTIVE",
        "REBUILD_ALL"
      ]
    },
    "Type": {
      "title": "C++ Info",
      "description": "- name: `Type`(ctype: `hkEnum<Type, hkUint8>`)",
      "type": "string",
      "enum": [
        "TYPE_VOID",
        "TYPE_BOOL",
        "TYPE_CHAR",
        "TYPE_INT8",
        "TYPE_UINT8",
        "TYPE_INT16",
        "TYPE_UINT16",
        "TYPE_INT32",
        "TYPE_UINT32",
        "TYPE_INT64",
        "TYPE_UINT64",
        "TYPE_REAL",
        "TYPE_VECTOR4",
        "TYPE_QUATERNION",
        "TYPE_MATRIX3",
        "TYPE_ROTATION",
        "TYPE_QSTRANSFORM",
        "TYPE_MATRIX4",
        "TYPE_TRANSFORM",
        "TYPE_ZERO",
        "TYPE_POINTER",
        "TYPE_FUNCTIONPOINTER",
        "TYPE_ARRAY",
        "TYPE_INPLACEARRAY",
        "TYPE_ENUM",
        "TYPE_STRUCT",
        "TYPE_SIMPLEARRAY",
        "TYPE_HOMOGENEOUSARRAY",
        "TYPE_VARIANT",
        "TYPE_CSTRING",
        "TYPE_ULONG",
        "TYPE_FLAGS",
        "TYPE_HALF",
        "TYPE_STRINGPTR",
        "TYPE_RELARRAY",
        "TYPE_MAX"
      ]
    },
    "VariableMode": {
      "title": "C++ Info",
      "description": "- name: `VariableMode`(ctype: `hkEnum<VariableMode, hkInt8>`)",
      "type": "string",
      "enum": [
        "VARIABLE_MODE_DISCARD_WHEN_INACTIVE",
        "VARIABLE_MODE_MAINTAIN_VALUES_WHEN_INACTIVE"
      ]
    },
    "VariableType": {
      "title": "C++ Info",
      "description": "- name: `VariableType`(ctype: `hkEnum<VariableType, hkUint8>`)",
      "type": "string",
      "enum": [
        "VARIABLE_TYPE_INVALID",
        "VARIABLE_TYPE_BOOL",
        "VARIABLE_TYPE_INT8",
        "VARIABLE_TYPE_INT16",
        "VARIABLE_TYPE_INT32",
        "VARIABLE_TYPE_REAL",
        "VARIABLE_TYPE_POINTER",
        "VARIABLE_TYPE_VECTOR3",
        "VARIABLE_TYPE_VECTOR4",
        "VARIABLE_TYPE_QUATERNION"
      ]
    },
    "Variant": {
      "description": "C++ info\n - type size: `   8`(x86)/` 16`(x86_64)\n\n Only used for `value` of `hkCustomAttributesAttribute`.",
      "type": "object",
      "properties": {
        "class": {
          "title": "C++ Info",
          "description": "- name: `class`(ctype: `hkClass*`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/` 8`(x86_64)\n\n `hkClass*` is a class that holds meta-information (Flags, vtable, etc.) for each C++ Havok class and is stored in its own static field.",
          "type": "string"
        },
        "object": {
          "title": "C++ Info",
          "description": "- name: `object`(ctype: `void*`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "object",
        "class"
      ]
    },
    "Vector4": {
      "title": "Vector4",
      "description": "# C++ Info\n - name: `hkVector4`\n - type_size: ` 16`(x86)/` 16`(x86_64)\n\n # Examples\n ```\n use havok_types::Vector4;\n\n assert_eq!(Vector4::new(1.0, 1.0, 1.0, 0.0).to_string(), \"(1.000000 1.000000 1.000000 0.000000)\");\n assert_eq!(Vector4::new(-0.0, 0.0, -0.0, 1.0).to_string(), \"(-0.000000 0.000000 -0.000000 1.000000)\");\n ```\n\n # XML representation\n ```xml\n <hkparam name=\"\">\n   <!-- x         y        z         w -->\n   (-0.000000 0.000000 -0.000000 1.000000)\n </hkparam>\n ```",
      "type": "object",
      "properties": {
        "w": {
          "title": "C++ Info",
          "description": "- name: `w`(ctype: `hkReal`)\n - offset: ` 12`(x86)/` 12`(x86_64)\n - type_size: ` 4`(x86)/` 4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "x": {
          "title": "C++ Info",
          "description": "- name: `x`(ctype: `hkReal`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: ` 4`(x86)/` 4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "y": {
          "title": "C++ Info",
          "description": "- name: `y`(ctype: `hkReal`)\n - offset: `  4`(x86)/`  4`(x86_64)\n - type_size: ` 4`(x86)/` 4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "z": {
          "title": "C++ Info",
          "description": "- name: `z`(ctype: `hkReal`)\n - offset: `  8`(x86)/`  8`(x86_64)\n - type_size: ` 4`(x86)/` 4`(x86_64)",
          "type": "number",
          "format": "float"
        }
      },
      "required": [
        "x",
        "y",
        "z",
        "w"
      ]
    },
    "VertexFloatDimensions": {
      "title": "C++ Info",
      "description": "- name: `VertexFloatDimensions`(ctype: `hkEnum<VertexFloatDimensions, hkUint8>`)",
      "type": "string",
      "enum": [
        "FLOAT",
        "DISTANCE",
        "ANGLE"
      ]
    },
    "WeldingType": {
      "title": "C++ Info",
      "description": "- name: `WeldingType`(ctype: `hkEnum<WeldingType, hkUint8>`)",
      "type": "string",
      "enum": [
        "WELDING_TYPE_ANTICLOCKWISE",
        "WELDING_TYPE_CLOCKWISE",
        "WELDING_TYPE_TWO_SIDED",
        "WELDING_TYPE_NONE"
      ]
    },
    "WorldFromModelMode": {
      "title": "C++ Info",
      "description": "- name: `WorldFromModelMode`(ctype: `hkEnum<WorldFromModelMode, hkInt8>`)",
      "type": "string",
      "enum": [
        "WORLD_FROM_MODEL_MODE_USE_OLD",
        "WORLD_FROM_MODEL_MODE_USE_INPUT",
        "WORLD_FROM_MODEL_MODE_COMPUTE",
        "WORLD_FROM_MODEL_MODE_NONE",
        "WORLD_FROM_MODEL_MODE_RAGDOLL"
      ]
    },
    "hkAabb": {
      "title": "C++ Info",
      "description": "- name: `hkAabb`\n - version: `0`\n - signature: `0x4a948b16`\n - size: ` 32`(x86)/` 32`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "max": {
          "title": "C++ Info",
          "description": "- name: `max`(ctype: `hkVector4`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "min": {
          "title": "C++ Info",
          "description": "- name: `min`(ctype: `hkVector4`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        }
      },
      "required": [
        "min",
        "max"
      ]
    },
    "hkAabbHalf": {
      "title": "C++ Info",
      "description": "- name: `hkAabbHalf`\n - version: `0`\n - signature: `0x1d716a17`\n - size: ` 16`(x86)/` 16`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "data": {
          "title": "C++ Info",
          "description": "- name: `data`(ctype: `hkUint16[6]`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: ` 12`(x86)/` 12`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint16",
            "minimum": 0
          },
          "maxItems": 6,
          "minItems": 6
        },
        "extras": {
          "title": "C++ Info",
          "description": "- name: `extras`(ctype: `hkUint16[2]`)\n - offset: ` 12`(x86)/` 12`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint16",
            "minimum": 0
          },
          "maxItems": 2,
          "minItems": 2
        }
      },
      "required": [
        "data",
        "extras"
      ]
    },
    "hkAabbUint32": {
      "title": "C++ Info",
      "description": "- name: `hkAabbUint32`\n - version: `0`\n - signature: `0x11e7c11`\n - size: ` 32`(x86)/` 32`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "expansionMax": {
          "title": "C++ Info",
          "description": "- name: `expansionMax`(ctype: `hkUint8[3]`)\n - offset: ` 28`(x86)/` 28`(x86_64)\n - type_size: `  3`(x86)/`  3`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint8",
            "minimum": 0
          },
          "maxItems": 3,
          "minItems": 3
        },
        "expansionMin": {
          "title": "C++ Info",
          "description": "- name: `expansionMin`(ctype: `hkUint8[3]`)\n - offset: ` 12`(x86)/` 12`(x86_64)\n - type_size: `  3`(x86)/`  3`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint8",
            "minimum": 0
          },
          "maxItems": 3,
          "minItems": 3
        },
        "expansionShift": {
          "title": "C++ Info",
          "description": "- name: `expansionShift`(ctype: `hkUint8`)\n - offset: ` 15`(x86)/` 15`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        },
        "max": {
          "title": "C++ Info",
          "description": "- name: `max`(ctype: `hkUint32[3]`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 12`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          },
          "maxItems": 3,
          "minItems": 3
        },
        "min": {
          "title": "C++ Info",
          "description": "- name: `min`(ctype: `hkUint32[3]`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: ` 12`(x86)/` 12`(x86_64)\n - flags: `ALIGN_16`",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          },
          "maxItems": 3,
          "minItems": 3
        },
        "shapeKeyByte": {
          "title": "C++ Info",
          "description": "- name: `shapeKeyByte`(ctype: `hkUint8`)\n - offset: ` 31`(x86)/` 31`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        }
      },
      "required": [
        "min",
        "expansionMin",
        "expansionShift",
        "max",
        "expansionMax",
        "shapeKeyByte"
      ]
    },
    "hkAlignSceneToNodeOptions": {
      "title": "C++ Info",
      "description": "- name: `hkAlignSceneToNodeOptions`\n - version: `2`\n - signature: `0x207cb01`\n - size: ` 24`(x86)/` 40`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "invert": {
          "title": "C++ Info",
          "description": "- name: `invert`(ctype: `hkBool`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "keyframe": {
          "title": "C++ Info",
          "description": "- name: `keyframe`(ctype: `hkInt32`)\n - offset: ` 16`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "nodeName": {
          "title": "C++ Info",
          "description": "- name: `nodeName`(ctype: `hkStringPtr`)\n - offset: ` 20`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "transformPositionX": {
          "title": "C++ Info",
          "description": "- name: `transformPositionX`(ctype: `hkBool`)\n - offset: `  9`(x86)/` 17`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "transformPositionY": {
          "title": "C++ Info",
          "description": "- name: `transformPositionY`(ctype: `hkBool`)\n - offset: ` 10`(x86)/` 18`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "transformPositionZ": {
          "title": "C++ Info",
          "description": "- name: `transformPositionZ`(ctype: `hkBool`)\n - offset: ` 11`(x86)/` 19`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "transformRotation": {
          "title": "C++ Info",
          "description": "- name: `transformRotation`(ctype: `hkBool`)\n - offset: ` 12`(x86)/` 20`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "transformScale": {
          "title": "C++ Info",
          "description": "- name: `transformScale`(ctype: `hkBool`)\n - offset: ` 13`(x86)/` 21`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "transformSkew": {
          "title": "C++ Info",
          "description": "- name: `transformSkew`(ctype: `hkBool`)\n - offset: ` 14`(x86)/` 22`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "invert",
        "transformPositionX",
        "transformPositionY",
        "transformPositionZ",
        "transformRotation",
        "transformScale",
        "transformSkew",
        "keyframe"
      ]
    },
    "hkArrayTypeAttribute": {
      "title": "C++ Info",
      "description": "- name: `hkArrayTypeAttribute`\n - version: `0`\n - signature: `0xd404a39a`\n - size: `  1`(x86)/`  1`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum ArrayType`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/ArrayType"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "required": [
        "type"
      ]
    },
    "hkBaseObject": {
      "title": "C++ Info",
      "description": "- name: `hkBaseObject`\n - version: `0`\n - signature: `0xe0708a00`\n - size: `  4`(x86)/`  8`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        }
      }
    },
    "hkBitField": {
      "title": "C++ Info",
      "description": "- name: `hkBitField`\n - version: `0`\n - signature: `0xda41bd9b`\n - size: ` 16`(x86)/` 24`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "numBits": {
          "title": "C++ Info",
          "description": "- name: `numBits`(ctype: `hkInt32`)\n - offset: ` 12`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "words": {
          "title": "C++ Info",
          "description": "- name: `words`(ctype: `hkArray<hkUint32>`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          }
        }
      },
      "required": [
        "words",
        "numBits"
      ]
    },
    "hkClass": {
      "title": "C++ Info",
      "description": "- name: `hkClass`\n - version: `0`\n - signature: `0x75585ef6`\n - size: ` 48`(x86)/` 80`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "attributes": {
          "title": "C++ Info",
          "description": "- name: `attributes`(ctype: `struct hkCustomAttributes*`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "declaredEnums": {
          "title": "C++ Info",
          "description": "- name: `declaredEnums`(ctype: `hkSimpleArray<struct hkClassEnum>`)\n - offset: ` 16`(x86)/` 24`(x86_64)\n - type_size: `  8`(x86)/` 12`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkClassEnum"
          }
        },
        "declaredMembers": {
          "title": "C++ Info",
          "description": "- name: `declaredMembers`(ctype: `hkSimpleArray<struct hkClassMember>`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  8`(x86)/` 12`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkClassMember"
          }
        },
        "defaults": {
          "title": "C++ Info",
          "description": "- name: `defaults`(ctype: `void*`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "describedVersion": {
          "title": "C++ Info",
          "description": "- name: `describedVersion`(ctype: `hkInt32`)\n - offset: ` 44`(x86)/` 76`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "flags": {
          "title": "C++ Info",
          "description": "- name: `flags`(ctype: `flags FlagValues`)\n - offset: ` 40`(x86)/` 72`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "$ref": "#/$defs/FlagValues3"
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `char*`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "numImplementedInterfaces": {
          "title": "C++ Info",
          "description": "- name: `numImplementedInterfaces`(ctype: `hkInt32`)\n - offset: ` 12`(x86)/` 20`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "objectSize": {
          "title": "C++ Info",
          "description": "- name: `objectSize`(ctype: `hkInt32`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "parent": {
          "title": "C++ Info",
          "description": "- name: `parent`(ctype: `struct hkClass*`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "parent",
        "objectSize",
        "numImplementedInterfaces",
        "declaredEnums",
        "declaredMembers",
        "defaults",
        "attributes",
        "flags",
        "describedVersion"
      ]
    },
    "hkClassEnum": {
      "title": "C++ Info",
      "description": "- name: `hkClassEnum`\n - version: `0`\n - signature: `0x8a3609cf`\n - size: ` 20`(x86)/` 40`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "attributes": {
          "title": "C++ Info",
          "description": "- name: `attributes`(ctype: `struct hkCustomAttributes*`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "flags": {
          "title": "C++ Info",
          "description": "- name: `flags`(ctype: `flags FlagValues`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "$ref": "#/$defs/FlagValues"
        },
        "items": {
          "title": "C++ Info",
          "description": "- name: `items`(ctype: `hkSimpleArray<struct hkClassEnumItem>`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  8`(x86)/` 12`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkClassEnumItem"
          }
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `char*`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "required": [
        "items",
        "attributes",
        "flags"
      ]
    },
    "hkClassEnumItem": {
      "title": "C++ Info",
      "description": "- name: `hkClassEnumItem`\n - version: `0`\n - signature: `0xce6f8a6c`\n - size: `  8`(x86)/` 16`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `char*`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "value": {
          "title": "C++ Info",
          "description": "- name: `value`(ctype: `hkInt32`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "value"
      ]
    },
    "hkClassMember": {
      "title": "C++ Info",
      "description": "- name: `hkClassMember`\n - version: `0`\n - signature: `0x5c7ea4c2`\n - size: ` 24`(x86)/` 40`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum Type`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/Type"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "attributes": {
          "title": "C++ Info",
          "description": "- name: `attributes`(ctype: `struct hkCustomAttributes*`)\n - offset: ` 20`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "cArraySize": {
          "title": "C++ Info",
          "description": "- name: `cArraySize`(ctype: `hkInt16`)\n - offset: ` 14`(x86)/` 26`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "int16"
        },
        "class": {
          "title": "C++ Info",
          "description": "- name: `class`(ctype: `struct hkClass*`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "enum": {
          "title": "C++ Info",
          "description": "- name: `enum`(ctype: `struct hkClassEnum*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "flags": {
          "title": "C++ Info",
          "description": "- name: `flags`(ctype: `flags FlagValues`)\n - offset: ` 16`(x86)/` 28`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "$ref": "#/$defs/FlagValues2"
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `char*`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "offset": {
          "title": "C++ Info",
          "description": "- name: `offset`(ctype: `hkUint16`)\n - offset: ` 18`(x86)/` 30`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "subtype": {
          "title": "C++ Info",
          "description": "- name: `subtype`(ctype: `enum Type`)\n - offset: ` 13`(x86)/` 25`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/Type"
        }
      },
      "required": [
        "class",
        "enum",
        "type",
        "subtype",
        "cArraySize",
        "flags",
        "offset",
        "attributes"
      ]
    },
    "hkColor": {
      "title": "C++ Info",
      "description": "- name: `hkColor`\n - version: `0`\n - signature: `0x106b96ce`\n - size: `  1`(x86)/`  1`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        }
      }
    },
    "hkContactPoint": {
      "title": "C++ Info",
      "description": "- name: `hkContactPoint`\n - version: `0`\n - signature: `0x91d7dd8e`\n - size: ` 32`(x86)/` 32`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "position": {
          "title": "C++ Info",
          "description": "- name: `position`(ctype: `hkVector4`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "separatingNormal": {
          "title": "C++ Info",
          "description": "- name: `separatingNormal`(ctype: `hkVector4`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        }
      },
      "required": [
        "position",
        "separatingNormal"
      ]
    },
    "hkContactPointMaterial": {
      "title": "C++ Info",
      "description": "- name: `hkContactPointMaterial`\n - version: `0`\n - signature: `0x4e32287c`\n - size: `  8`(x86)/` 16`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "flags": {
          "title": "C++ Info",
          "description": "- name: `flags`(ctype: `hkUint8`)\n - offset: `  7`(x86)/` 11`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        },
        "friction": {
          "title": "C++ Info",
          "description": "- name: `friction`(ctype: `hkUint8`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        },
        "maxImpulse": {
          "title": "C++ Info",
          "description": "- name: `maxImpulse`(ctype: `hkUint8`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        },
        "restitution": {
          "title": "C++ Info",
          "description": "- name: `restitution`(ctype: `hkUint8`)\n - offset: `  5`(x86)/`  9`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        }
      },
      "required": [
        "userData",
        "friction",
        "restitution",
        "maxImpulse",
        "flags"
      ]
    },
    "hkCustomAttributes": {
      "title": "C++ Info",
      "description": "- name: `hkCustomAttributes`\n - version: `0`\n - signature: `0xbff19005`\n - size: `  8`(x86)/` 16`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "attributes": {
          "title": "C++ Info",
          "description": "- name: `attributes`(ctype: `hkSimpleArray<struct hkCustomAttributesAttribute>`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  8`(x86)/` 12`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkCustomAttributesAttribute"
          }
        }
      },
      "required": [
        "attributes"
      ]
    },
    "hkCustomAttributesAttribute": {
      "title": "C++ Info",
      "description": "- name: `hkCustomAttributesAttribute`\n - version: `0`\n - signature: `0x1388d601`\n - size: ` 12`(x86)/` 24`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `char*`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "value": {
          "title": "C++ Info",
          "description": "- name: `value`(ctype: `hkVariant`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  8`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Variant"
        }
      },
      "required": [
        "value"
      ]
    },
    "hkDataObjectTypeAttribute": {
      "title": "C++ Info",
      "description": "- name: `hkDataObjectTypeAttribute`\n - version: `0`\n - signature: `0x1e3857bb`\n - size: `  4`(x86)/`  8`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "typeName": {
          "title": "C++ Info",
          "description": "- name: `typeName`(ctype: `char*`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        }
      }
    },
    "hkDescriptionAttribute": {
      "title": "C++ Info",
      "description": "- name: `hkDescriptionAttribute`\n - version: `0`\n - signature: `0xe9f9578a`\n - size: `  4`(x86)/`  8`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "string": {
          "title": "C++ Info",
          "description": "- name: `string`(ctype: `char*`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        }
      }
    },
    "hkDocumentationAttribute": {
      "title": "C++ Info",
      "description": "- name: `hkDocumentationAttribute`\n - version: `0`\n - signature: `0x630edd9e`\n - size: `  4`(x86)/`  8`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "docsSectionTag": {
          "title": "C++ Info",
          "description": "- name: `docsSectionTag`(ctype: `char*`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        }
      }
    },
    "hkGeometry": {
      "title": "C++ Info",
      "description": "- name: `hkGeometry`\n - version: `0`\n - signature: `0x98dd8bdc`\n - size: ` 24`(x86)/` 32`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "triangles": {
          "title": "C++ Info",
          "description": "- name: `triangles`(ctype: `hkArray<struct hkGeometryTriangle>`)\n - offset: ` 12`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkGeometryTriangle"
          }
        },
        "vertices": {
          "title": "C++ Info",
          "description": "- name: `vertices`(ctype: `hkArray<hkVector4>`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/Vector4"
          }
        }
      },
      "required": [
        "vertices",
        "triangles"
      ]
    },
    "hkGeometryTriangle": {
      "title": "C++ Info",
      "description": "- name: `hkGeometryTriangle`\n - version: `0`\n - signature: `0x9687513b`\n - size: ` 16`(x86)/` 16`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "a": {
          "title": "C++ Info",
          "description": "- name: `a`(ctype: `hkInt32`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "b": {
          "title": "C++ Info",
          "description": "- name: `b`(ctype: `hkInt32`)\n - offset: `  4`(x86)/`  4`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "c": {
          "title": "C++ Info",
          "description": "- name: `c`(ctype: `hkInt32`)\n - offset: `  8`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "material": {
          "title": "C++ Info",
          "description": "- name: `material`(ctype: `hkInt32`)\n - offset: ` 12`(x86)/` 12`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "a",
        "b",
        "c",
        "material"
      ]
    },
    "hkGizmoAttribute": {
      "title": "C++ Info",
      "description": "- name: `hkGizmoAttribute`\n - version: `0`\n - signature: `0x23aadfb6`\n - size: ` 12`(x86)/` 24`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum GizmoType`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/GizmoType"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "label": {
          "title": "C++ Info",
          "description": "- name: `label`(ctype: `char*`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "visible": {
          "title": "C++ Info",
          "description": "- name: `visible`(ctype: `hkBool`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        }
      },
      "required": [
        "visible",
        "type"
      ]
    },
    "hkHalf8": {
      "title": "C++ Info",
      "description": "- name: `hkHalf8`\n - version: `1`\n - signature: `0x7684dc80`\n - size: ` 16`(x86)/` 16`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "quad": {
          "title": "C++ Info",
          "description": "- name: `quad`(ctype: `hkHalf[8]`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)\n - flags: `ALIGN_16`",
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          },
          "maxItems": 8,
          "minItems": 8
        }
      },
      "required": [
        "quad"
      ]
    },
    "hkIndexedTransformSet": {
      "title": "C++ Info",
      "description": "- name: `hkIndexedTransformSet`\n - version: `1`\n - signature: `0x87fe6b5c`\n - size: ` 72`(x86)/`104`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "allMatricesAreAffine": {
          "title": "C++ Info",
          "description": "- name: `allMatricesAreAffine`(ctype: `hkBool`)\n - offset: ` 68`(x86)/` 96`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "indexMappings": {
          "title": "C++ Info",
          "description": "- name: `indexMappings`(ctype: `hkArray<struct hkMeshBoneIndexMapping>`)\n - offset: ` 56`(x86)/` 80`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkMeshBoneIndexMapping"
          }
        },
        "inverseMatrices": {
          "title": "C++ Info",
          "description": "- name: `inverseMatrices`(ctype: `hkArray<hkMatrix4>`)\n - offset: ` 20`(x86)/` 32`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/Matrix4"
          }
        },
        "matrices": {
          "title": "C++ Info",
          "description": "- name: `matrices`(ctype: `hkArray<hkMatrix4>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/Matrix4"
          }
        },
        "matricesNames": {
          "title": "C++ Info",
          "description": "- name: `matricesNames`(ctype: `hkArray<hkStringPtr>`)\n - offset: ` 44`(x86)/` 64`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "matricesOrder": {
          "title": "C++ Info",
          "description": "- name: `matricesOrder`(ctype: `hkArray<hkInt16>`)\n - offset: ` 32`(x86)/` 48`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int16"
          }
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "matrices",
        "inverseMatrices",
        "matricesOrder",
        "matricesNames",
        "indexMappings",
        "allMatricesAreAffine"
      ]
    },
    "hkLinkAttribute": {
      "title": "C++ Info",
      "description": "- name: `hkLinkAttribute`\n - version: `0`\n - signature: `0x255d8164`\n - size: `  1`(x86)/`  1`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum Link`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/Link"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "required": [
        "type"
      ]
    },
    "hkLocalFrame": {
      "title": "C++ Info",
      "description": "- name: `hkLocalFrame`\n - version: `0`\n - signature: `0xda8c7d7d`\n - size: `  8`(x86)/` 16`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount"
      ]
    },
    "hkLocalFrameGroup": {
      "title": "C++ Info",
      "description": "- name: `hkLocalFrameGroup`\n - version: `0`\n - signature: `0xb1a96c2f`\n - size: ` 12`(x86)/` 24`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount"
      ]
    },
    "hkMemoryMeshBody": {
      "title": "C++ Info",
      "description": "- name: `hkMemoryMeshBody`\n - version: `0`\n - signature: `0x94a620a8`\n - size: `112`(x86)/`128`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: `100`(x86)/`112`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "shape": {
          "title": "C++ Info",
          "description": "- name: `shape`(ctype: `struct hkMeshShape*`)\n - offset: ` 84`(x86)/` 88`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "transform": {
          "title": "C++ Info",
          "description": "- name: `transform`(ctype: `hkMatrix4`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: ` 64`(x86)/` 64`(x86_64)",
          "$ref": "#/$defs/Matrix4"
        },
        "transformSet": {
          "title": "C++ Info",
          "description": "- name: `transformSet`(ctype: `struct hkIndexedTransformSet*`)\n - offset: ` 80`(x86)/` 80`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "vertexBuffers": {
          "title": "C++ Info",
          "description": "- name: `vertexBuffers`(ctype: `hkArray<hkMeshVertexBuffer*>`)\n - offset: ` 88`(x86)/` 96`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "transform",
        "transformSet",
        "shape",
        "vertexBuffers"
      ]
    },
    "hkMemoryMeshMaterial": {
      "title": "C++ Info",
      "description": "- name: `hkMemoryMeshMaterial`\n - version: `0`\n - signature: `0x12156ee3`\n - size: ` 24`(x86)/` 40`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "materialName": {
          "title": "C++ Info",
          "description": "- name: `materialName`(ctype: `hkStringPtr`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "textures": {
          "title": "C++ Info",
          "description": "- name: `textures`(ctype: `hkArray<hkMeshTexture*>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "textures"
      ]
    },
    "hkMemoryMeshShape": {
      "title": "C++ Info",
      "description": "- name: `hkMemoryMeshShape`\n - version: `0`\n - signature: `0xb743a578`\n - size: ` 48`(x86)/` 72`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "indices16": {
          "title": "C++ Info",
          "description": "- name: `indices16`(ctype: `hkArray<hkUint16>`)\n - offset: ` 20`(x86)/` 32`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint16",
            "minimum": 0
          }
        },
        "indices32": {
          "title": "C++ Info",
          "description": "- name: `indices32`(ctype: `hkArray<hkUint32>`)\n - offset: ` 32`(x86)/` 48`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          }
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 44`(x86)/` 64`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "sections": {
          "title": "C++ Info",
          "description": "- name: `sections`(ctype: `hkArray<struct hkMeshSectionCinfo>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkMeshSectionCinfo"
          }
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "sections",
        "indices16",
        "indices32"
      ]
    },
    "hkMemoryMeshTexture": {
      "title": "C++ Info",
      "description": "- name: `hkMemoryMeshTexture`\n - version: `2`\n - signature: `0x2db6577c`\n - size: ` 32`(x86)/` 48`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "format": {
          "title": "C++ Info",
          "description": "- name: `format`(ctype: `enum Format`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/Format"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "data": {
          "title": "C++ Info",
          "description": "- name: `data`(ctype: `hkArray<hkUint8>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint8",
            "minimum": 0
          }
        },
        "filename": {
          "title": "C++ Info",
          "description": "- name: `filename`(ctype: `hkStringPtr`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "filterMode": {
          "title": "C++ Info",
          "description": "- name: `filterMode`(ctype: `enum FilterMode`)\n - offset: ` 26`(x86)/` 42`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/FilterMode"
        },
        "hasMipMaps": {
          "title": "C++ Info",
          "description": "- name: `hasMipMaps`(ctype: `hkBool`)\n - offset: ` 25`(x86)/` 41`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "textureCoordChannel": {
          "title": "C++ Info",
          "description": "- name: `textureCoordChannel`(ctype: `hkInt32`)\n - offset: ` 28`(x86)/` 44`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "usageHint": {
          "title": "C++ Info",
          "description": "- name: `usageHint`(ctype: `enum TextureUsageType`)\n - offset: ` 27`(x86)/` 43`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/TextureUsageType"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "data",
        "format",
        "hasMipMaps",
        "filterMode",
        "usageHint",
        "textureCoordChannel"
      ]
    },
    "hkMemoryMeshVertexBuffer": {
      "title": "C++ Info",
      "description": "- name: `hkMemoryMeshVertexBuffer`\n - version: `1`\n - signature: `0xa2e50753`\n - size: `424`(x86)/`440`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "format": {
          "title": "C++ Info",
          "description": "- name: `format`(ctype: `struct hkVertexFormat`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `260`(x86)/`260`(x86_64)",
          "$ref": "#/$defs/hkVertexFormat"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "elementOffsets": {
          "title": "C++ Info",
          "description": "- name: `elementOffsets`(ctype: `hkInt32[32]`)\n - offset: `268`(x86)/`276`(x86_64)\n - type_size: `128`(x86)/`128`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "maxItems": 32,
          "minItems": 32
        },
        "isBigEndian": {
          "title": "C++ Info",
          "description": "- name: `isBigEndian`(ctype: `hkBool`)\n - offset: `420`(x86)/`436`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "isSharable": {
          "title": "C++ Info",
          "description": "- name: `isSharable`(ctype: `hkBool`)\n - offset: `421`(x86)/`437`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "locked": {
          "title": "C++ Info",
          "description": "- name: `locked`(ctype: `hkBool`)\n - offset: `412`(x86)/`428`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "memory": {
          "title": "C++ Info",
          "description": "- name: `memory`(ctype: `hkArray<hkUint8>`)\n - offset: `396`(x86)/`408`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint8",
            "minimum": 0
          }
        },
        "numVertices": {
          "title": "C++ Info",
          "description": "- name: `numVertices`(ctype: `hkInt32`)\n - offset: `416`(x86)/`432`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "vertexStride": {
          "title": "C++ Info",
          "description": "- name: `vertexStride`(ctype: `hkInt32`)\n - offset: `408`(x86)/`424`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "format",
        "elementOffsets",
        "memory",
        "vertexStride",
        "locked",
        "numVertices",
        "isBigEndian",
        "isSharable"
      ]
    },
    "hkMemoryResourceContainer": {
      "title": "C++ Info",
      "description": "- name: `hkMemoryResourceContainer`\n - version: `1`\n - signature: `0x4762f92a`\n - size: ` 40`(x86)/` 64`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "children": {
          "title": "C++ Info",
          "description": "- name: `children`(ctype: `hkArray<hkMemoryResourceContainer*>`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "parent": {
          "title": "C++ Info",
          "description": "- name: `parent`(ctype: `struct hkMemoryResourceContainer*`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "resourceHandles": {
          "title": "C++ Info",
          "description": "- name: `resourceHandles`(ctype: `hkArray<hkMemoryResourceHandle*>`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "parent",
        "resourceHandles",
        "children"
      ]
    },
    "hkMemoryResourceHandle": {
      "title": "C++ Info",
      "description": "- name: `hkMemoryResourceHandle`\n - version: `2`\n - signature: `0xbffac086`\n - size: ` 28`(x86)/` 48`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "references": {
          "title": "C++ Info",
          "description": "- name: `references`(ctype: `hkArray<struct hkMemoryResourceHandleExternalLink>`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkMemoryResourceHandleExternalLink"
          }
        },
        "variant": {
          "title": "C++ Info",
          "description": "- name: `variant`(ctype: `struct hkReferencedObject*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variant",
        "references"
      ]
    },
    "hkMemoryResourceHandleExternalLink": {
      "title": "C++ Info",
      "description": "- name: `hkMemoryResourceHandleExternalLink`\n - version: `1`\n - signature: `0x3144d17c`\n - size: `  8`(x86)/` 16`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "externalId": {
          "title": "C++ Info",
          "description": "- name: `externalId`(ctype: `hkStringPtr`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "memberName": {
          "title": "C++ Info",
          "description": "- name: `memberName`(ctype: `hkStringPtr`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        }
      }
    },
    "hkMemoryTrackerAttribute": {
      "title": "C++ Info",
      "description": "- name: `hkMemoryTrackerAttribute`\n - version: `0`\n - signature: `0x7bd5c66f`\n - size: `  1`(x86)/`  1`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        }
      }
    },
    "hkMeshBody": {
      "title": "C++ Info",
      "description": "- name: `hkMeshBody`\n - version: `0`\n - signature: `0xd0be5d7d`\n - size: `  8`(x86)/` 16`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount"
      ]
    },
    "hkMeshBoneIndexMapping": {
      "title": "C++ Info",
      "description": "- name: `hkMeshBoneIndexMapping`\n - version: `0`\n - signature: `0x48aceb75`\n - size: ` 12`(x86)/` 16`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "mapping": {
          "title": "C++ Info",
          "description": "- name: `mapping`(ctype: `hkArray<hkInt16>`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int16"
          }
        }
      },
      "required": [
        "mapping"
      ]
    },
    "hkMeshMaterial": {
      "title": "C++ Info",
      "description": "- name: `hkMeshMaterial`\n - version: `0`\n - signature: `0xda8c7d7d`\n - size: `  8`(x86)/` 16`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount"
      ]
    },
    "hkMeshSection": {
      "title": "C++ Info",
      "description": "- name: `hkMeshSection`\n - version: `1`\n - signature: `0x1893c365`\n - size: ` 40`(x86)/` 56`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "indexType": {
          "title": "C++ Info",
          "description": "- name: `indexType`(ctype: `enum MeshSectionIndexType`)\n - offset: ` 20`(x86)/` 20`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/MeshSectionIndexType"
        },
        "indices": {
          "title": "C++ Info",
          "description": "- name: `indices`(ctype: `void*`)\n - offset: ` 24`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "material": {
          "title": "C++ Info",
          "description": "- name: `material`(ctype: `struct hkMeshMaterial*`)\n - offset: ` 32`(x86)/` 40`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "numIndices": {
          "title": "C++ Info",
          "description": "- name: `numIndices`(ctype: `hkInt32`)\n - offset: `  8`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "numPrimitives": {
          "title": "C++ Info",
          "description": "- name: `numPrimitives`(ctype: `hkInt32`)\n - offset: `  4`(x86)/`  4`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "primitiveType": {
          "title": "C++ Info",
          "description": "- name: `primitiveType`(ctype: `enum PrimitiveType`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/PrimitiveType"
        },
        "sectionIndex": {
          "title": "C++ Info",
          "description": "- name: `sectionIndex`(ctype: `hkInt32`)\n - offset: ` 36`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "transformIndex": {
          "title": "C++ Info",
          "description": "- name: `transformIndex`(ctype: `hkInt32`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "vertexBuffer": {
          "title": "C++ Info",
          "description": "- name: `vertexBuffer`(ctype: `struct hkMeshVertexBuffer*`)\n - offset: ` 28`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "vertexStartIndex": {
          "title": "C++ Info",
          "description": "- name: `vertexStartIndex`(ctype: `hkInt32`)\n - offset: ` 12`(x86)/` 12`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "primitiveType",
        "numPrimitives",
        "numIndices",
        "vertexStartIndex",
        "transformIndex",
        "indexType",
        "indices",
        "vertexBuffer",
        "material",
        "sectionIndex"
      ]
    },
    "hkMeshSectionCinfo": {
      "title": "C++ Info",
      "description": "- name: `hkMeshSectionCinfo`\n - version: `1`\n - signature: `0x6075f3ff`\n - size: ` 32`(x86)/` 48`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "indexType": {
          "title": "C++ Info",
          "description": "- name: `indexType`(ctype: `enum MeshSectionIndexType`)\n - offset: ` 16`(x86)/` 24`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/MeshSectionIndexType"
        },
        "indices": {
          "title": "C++ Info",
          "description": "- name: `indices`(ctype: `void*`)\n - offset: ` 20`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "material": {
          "title": "C++ Info",
          "description": "- name: `material`(ctype: `struct hkMeshMaterial*`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "numPrimitives": {
          "title": "C++ Info",
          "description": "- name: `numPrimitives`(ctype: `hkInt32`)\n - offset: ` 12`(x86)/` 20`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "primitiveType": {
          "title": "C++ Info",
          "description": "- name: `primitiveType`(ctype: `enum PrimitiveType`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/PrimitiveType"
        },
        "transformIndex": {
          "title": "C++ Info",
          "description": "- name: `transformIndex`(ctype: `hkInt32`)\n - offset: ` 28`(x86)/` 44`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "vertexBuffer": {
          "title": "C++ Info",
          "description": "- name: `vertexBuffer`(ctype: `struct hkMeshVertexBuffer*`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "vertexStartIndex": {
          "title": "C++ Info",
          "description": "- name: `vertexStartIndex`(ctype: `hkInt32`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "vertexBuffer",
        "material",
        "primitiveType",
        "numPrimitives",
        "indexType",
        "indices",
        "vertexStartIndex",
        "transformIndex"
      ]
    },
    "hkMeshShape": {
      "title": "C++ Info",
      "description": "- name: `hkMeshShape`\n - version: `0`\n - signature: `0x9117d62e`\n - size: `  8`(x86)/` 16`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount"
      ]
    },
    "hkMeshTexture": {
      "title": "C++ Info",
      "description": "- name: `hkMeshTexture`\n - version: `0`\n - signature: `0xc9887918`\n - size: `  8`(x86)/` 16`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount"
      ]
    },
    "hkMeshVertexBuffer": {
      "title": "C++ Info",
      "description": "- name: `hkMeshVertexBuffer`\n - version: `0`\n - signature: `0x534b08c8`\n - size: `  8`(x86)/` 16`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount"
      ]
    },
    "hkModelerNodeTypeAttribute": {
      "title": "C++ Info",
      "description": "- name: `hkModelerNodeTypeAttribute`\n - version: `0`\n - signature: `0x338c092f`\n - size: `  1`(x86)/`  1`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum ModelerType`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/ModelerType"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "required": [
        "type"
      ]
    },
    "hkMonitorStreamColorTable": {
      "title": "C++ Info",
      "description": "- name: `hkMonitorStreamColorTable`\n - version: `0`\n - signature: `0x79e53e85`\n - size: ` 24`(x86)/` 40`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "colorPairs": {
          "title": "C++ Info",
          "description": "- name: `colorPairs`(ctype: `hkArray<struct hkMonitorStreamColorTableColorPair>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkMonitorStreamColorTableColorPair"
          }
        },
        "defaultColor": {
          "title": "C++ Info",
          "description": "- name: `defaultColor`(ctype: `hkUint32`)\n - offset: ` 20`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "colorPairs",
        "defaultColor"
      ]
    },
    "hkMonitorStreamColorTableColorPair": {
      "title": "C++ Info",
      "description": "- name: `hkMonitorStreamColorTableColorPair`\n - version: `0`\n - signature: `0x738fca05`\n - size: `  8`(x86)/` 16`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "color": {
          "title": "C++ Info",
          "description": "- name: `color`(ctype: `enum ExtendedColors`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "$ref": "#/$defs/ExtendedColors"
        },
        "colorName": {
          "title": "C++ Info",
          "description": "- name: `colorName`(ctype: `hkStringPtr`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "required": [
        "color"
      ]
    },
    "hkMonitorStreamFrameInfo": {
      "title": "C++ Info",
      "description": "- name: `hkMonitorStreamFrameInfo`\n - version: `0`\n - signature: `0x7798b7db`\n - size: ` 36`(x86)/` 40`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "absoluteTimeCounter": {
          "title": "C++ Info",
          "description": "- name: `absoluteTimeCounter`(ctype: `enum AbsoluteTimeCounter`)\n - offset: ` 12`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "$ref": "#/$defs/AbsoluteTimeCounter"
        },
        "frameStreamEnd": {
          "title": "C++ Info",
          "description": "- name: `frameStreamEnd`(ctype: `hkInt32`)\n - offset: ` 32`(x86)/` 36`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "frameStreamStart": {
          "title": "C++ Info",
          "description": "- name: `frameStreamStart`(ctype: `hkInt32`)\n - offset: ` 28`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "heading": {
          "title": "C++ Info",
          "description": "- name: `heading`(ctype: `hkStringPtr`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "indexOfTimer0": {
          "title": "C++ Info",
          "description": "- name: `indexOfTimer0`(ctype: `hkInt32`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "indexOfTimer1": {
          "title": "C++ Info",
          "description": "- name: `indexOfTimer1`(ctype: `hkInt32`)\n - offset: `  8`(x86)/` 12`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "threadId": {
          "title": "C++ Info",
          "description": "- name: `threadId`(ctype: `hkInt32`)\n - offset: ` 24`(x86)/` 28`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "timerFactor0": {
          "title": "C++ Info",
          "description": "- name: `timerFactor0`(ctype: `hkReal`)\n - offset: ` 16`(x86)/` 20`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "timerFactor1": {
          "title": "C++ Info",
          "description": "- name: `timerFactor1`(ctype: `hkReal`)\n - offset: ` 20`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        }
      },
      "required": [
        "indexOfTimer0",
        "indexOfTimer1",
        "absoluteTimeCounter",
        "timerFactor0",
        "timerFactor1",
        "threadId",
        "frameStreamStart",
        "frameStreamEnd"
      ]
    },
    "hkMonitorStreamStringMap": {
      "title": "C++ Info",
      "description": "- name: `hkMonitorStreamStringMap`\n - version: `0`\n - signature: `0xc4d3a8b4`\n - size: ` 12`(x86)/` 16`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "map": {
          "title": "C++ Info",
          "description": "- name: `map`(ctype: `hkArray<struct hkMonitorStreamStringMapStringMap>`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkMonitorStreamStringMapStringMap"
          }
        }
      },
      "required": [
        "map"
      ]
    },
    "hkMonitorStreamStringMapStringMap": {
      "title": "C++ Info",
      "description": "- name: `hkMonitorStreamStringMapStringMap`\n - version: `0`\n - signature: `0x2c76ce16`\n - size: ` 16`(x86)/` 16`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkUint64`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  8`(x86)/`  8`(x86_64)\n - flags: `ALIGN_8`",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "string": {
          "title": "C++ Info",
          "description": "- name: `string`(ctype: `hkStringPtr`)\n - offset: `  8`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "required": [
        "id"
      ]
    },
    "hkMoppBvTreeShapeBase": {
      "title": "C++ Info",
      "description": "- name: `hkMoppBvTreeShapeBase`\n - version: `0`\n - signature: `0x7c338c66`\n - size: ` 48`(x86)/` 80`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum unknown`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "bvTreeType": {
          "title": "C++ Info",
          "description": "- name: `bvTreeType`(ctype: `enum BvTreeType`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/BvTreeType"
        },
        "code": {
          "title": "C++ Info",
          "description": "- name: `code`(ctype: `struct hkpMoppCode*`)\n - offset: ` 20`(x86)/` 40`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "codeInfoCopy": {
          "title": "C++ Info",
          "description": "- name: `codeInfoCopy`(ctype: `hkVector4`)\n - offset: ` 32`(x86)/` 64`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "$ref": "#/$defs/Vector4"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "moppData": {
          "title": "C++ Info",
          "description": "- name: `moppData`(ctype: `void*`)\n - offset: ` 24`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "moppDataSize": {
          "title": "C++ Info",
          "description": "- name: `moppDataSize`(ctype: `hkUint32`)\n - offset: ` 28`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "userData",
        "type",
        "bvTreeType",
        "code",
        "moppData",
        "moppDataSize",
        "codeInfoCopy"
      ]
    },
    "hkMotionState": {
      "title": "C++ Info",
      "description": "- name: `hkMotionState`\n - version: `1`\n - signature: `0x5797386e`\n - size: `176`(x86)/`176`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "angularDamping": {
          "title": "C++ Info",
          "description": "- name: `angularDamping`(ctype: `hkHalf`)\n - offset: `166`(x86)/`166`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "deactivationClass": {
          "title": "C++ Info",
          "description": "- name: `deactivationClass`(ctype: `hkUint8`)\n - offset: `172`(x86)/`172`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        },
        "deltaAngle": {
          "title": "C++ Info",
          "description": "- name: `deltaAngle`(ctype: `hkVector4`)\n - offset: `144`(x86)/`144`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "linearDamping": {
          "title": "C++ Info",
          "description": "- name: `linearDamping`(ctype: `hkHalf`)\n - offset: `164`(x86)/`164`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "maxAngularVelocity": {
          "title": "C++ Info",
          "description": "- name: `maxAngularVelocity`(ctype: `hkUint8`)\n - offset: `171`(x86)/`171`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        },
        "maxLinearVelocity": {
          "title": "C++ Info",
          "description": "- name: `maxLinearVelocity`(ctype: `hkUint8`)\n - offset: `170`(x86)/`170`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        },
        "objectRadius": {
          "title": "C++ Info",
          "description": "- name: `objectRadius`(ctype: `hkReal`)\n - offset: `160`(x86)/`160`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "sweptTransform": {
          "title": "C++ Info",
          "description": "- name: `sweptTransform`(ctype: `struct hkSweptTransform`)\n - offset: ` 64`(x86)/` 64`(x86_64)\n - type_size: ` 80`(x86)/` 80`(x86_64)",
          "$ref": "#/$defs/hkSweptTransform"
        },
        "timeFactor": {
          "title": "C++ Info",
          "description": "- name: `timeFactor`(ctype: `hkHalf`)\n - offset: `168`(x86)/`168`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "transform": {
          "title": "C++ Info",
          "description": "- name: `transform`(ctype: `hkTransform`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: ` 64`(x86)/` 64`(x86_64)",
          "$ref": "#/$defs/Transform"
        }
      },
      "required": [
        "transform",
        "sweptTransform",
        "deltaAngle",
        "objectRadius",
        "linearDamping",
        "angularDamping",
        "timeFactor",
        "maxLinearVelocity",
        "maxAngularVelocity",
        "deactivationClass"
      ]
    },
    "hkMultiThreadCheck": {
      "title": "C++ Info",
      "description": "- name: `hkMultiThreadCheck`\n - version: `0`\n - signature: `0x11e4408b`\n - size: ` 12`(x86)/` 12`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "markBitStack": {
          "title": "C++ Info",
          "description": "- name: `markBitStack`(ctype: `hkUint16`)\n - offset: ` 10`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "markCount": {
          "title": "C++ Info",
          "description": "- name: `markCount`(ctype: `hkUint16`)\n - offset: `  8`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "stackTraceId": {
          "title": "C++ Info",
          "description": "- name: `stackTraceId`(ctype: `hkInt32`)\n - offset: `  4`(x86)/`  4`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int32"
        },
        "threadId": {
          "title": "C++ Info",
          "description": "- name: `threadId`(ctype: `hkUint32`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        }
      },
      "required": [
        "threadId",
        "stackTraceId",
        "markCount",
        "markBitStack"
      ]
    },
    "hkMultipleVertexBuffer": {
      "title": "C++ Info",
      "description": "- name: `hkMultipleVertexBuffer`\n - version: `0`\n - signature: `0xde3ab602`\n - size: `324`(x86)/`352`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "constructionComplete": {
          "title": "C++ Info",
          "description": "- name: `constructionComplete`(ctype: `hkBool`)\n - offset: `322`(x86)/`350`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "elementInfos": {
          "title": "C++ Info",
          "description": "- name: `elementInfos`(ctype: `hkArray<struct hkMultipleVertexBufferElementInfo>`)\n - offset: `284`(x86)/`304`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkMultipleVertexBufferElementInfo"
          }
        },
        "isLocked": {
          "title": "C++ Info",
          "description": "- name: `isLocked`(ctype: `hkBool`)\n - offset: `312`(x86)/`340`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "isSharable": {
          "title": "C++ Info",
          "description": "- name: `isSharable`(ctype: `hkBool`)\n - offset: `321`(x86)/`349`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "lockedBuffer": {
          "title": "C++ Info",
          "description": "- name: `lockedBuffer`(ctype: `struct hkMemoryMeshVertexBuffer*`)\n - offset: `280`(x86)/`296`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "lockedElements": {
          "title": "C++ Info",
          "description": "- name: `lockedElements`(ctype: `hkArray<struct hkMultipleVertexBufferLockedElement>`)\n - offset: `268`(x86)/`280`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkMultipleVertexBufferLockedElement"
          }
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "numVertices": {
          "title": "C++ Info",
          "description": "- name: `numVertices`(ctype: `hkInt32`)\n - offset: `308`(x86)/`336`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "updateCount": {
          "title": "C++ Info",
          "description": "- name: `updateCount`(ctype: `hkUint32`)\n - offset: `316`(x86)/`344`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "vertexBufferInfos": {
          "title": "C++ Info",
          "description": "- name: `vertexBufferInfos`(ctype: `hkArray<struct hkMultipleVertexBufferVertexBufferInfo>`)\n - offset: `296`(x86)/`320`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkMultipleVertexBufferVertexBufferInfo"
          }
        },
        "vertexFormat": {
          "title": "C++ Info",
          "description": "- name: `vertexFormat`(ctype: `struct hkVertexFormat`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `260`(x86)/`260`(x86_64)",
          "$ref": "#/$defs/hkVertexFormat"
        },
        "writeLock": {
          "title": "C++ Info",
          "description": "- name: `writeLock`(ctype: `hkBool`)\n - offset: `320`(x86)/`348`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "vertexFormat",
        "lockedElements",
        "lockedBuffer",
        "elementInfos",
        "vertexBufferInfos",
        "numVertices",
        "isLocked",
        "updateCount",
        "writeLock",
        "isSharable",
        "constructionComplete"
      ]
    },
    "hkMultipleVertexBufferElementInfo": {
      "title": "C++ Info",
      "description": "- name: `hkMultipleVertexBufferElementInfo`\n - version: `0`\n - signature: `0x4731fb1b`\n - size: `  2`(x86)/`  2`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "elementIndex": {
          "title": "C++ Info",
          "description": "- name: `elementIndex`(ctype: `hkUint8`)\n - offset: `  1`(x86)/`  1`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        },
        "vertexBufferIndex": {
          "title": "C++ Info",
          "description": "- name: `vertexBufferIndex`(ctype: `hkUint8`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        }
      },
      "required": [
        "vertexBufferIndex",
        "elementIndex"
      ]
    },
    "hkMultipleVertexBufferLockedElement": {
      "title": "C++ Info",
      "description": "- name: `hkMultipleVertexBufferLockedElement`\n - version: `0`\n - signature: `0xa0e22afc`\n - size: `  7`(x86)/`  7`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "elementIndex": {
          "title": "C++ Info",
          "description": "- name: `elementIndex`(ctype: `hkUint8`)\n - offset: `  1`(x86)/`  1`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        },
        "emulatedIndex": {
          "title": "C++ Info",
          "description": "- name: `emulatedIndex`(ctype: `hkInt8`)\n - offset: `  6`(x86)/`  6`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "int8"
        },
        "lockFlags": {
          "title": "C++ Info",
          "description": "- name: `lockFlags`(ctype: `hkUint8`)\n - offset: `  4`(x86)/`  4`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        },
        "lockedBufferIndex": {
          "title": "C++ Info",
          "description": "- name: `lockedBufferIndex`(ctype: `hkUint8`)\n - offset: `  2`(x86)/`  2`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        },
        "outputBufferIndex": {
          "title": "C++ Info",
          "description": "- name: `outputBufferIndex`(ctype: `hkUint8`)\n - offset: `  5`(x86)/`  5`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        },
        "vertexBufferIndex": {
          "title": "C++ Info",
          "description": "- name: `vertexBufferIndex`(ctype: `hkUint8`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        },
        "vertexFormatIndex": {
          "title": "C++ Info",
          "description": "- name: `vertexFormatIndex`(ctype: `hkUint8`)\n - offset: `  3`(x86)/`  3`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        }
      },
      "required": [
        "vertexBufferIndex",
        "elementIndex",
        "lockedBufferIndex",
        "vertexFormatIndex",
        "lockFlags",
        "outputBufferIndex",
        "emulatedIndex"
      ]
    },
    "hkMultipleVertexBufferVertexBufferInfo": {
      "title": "C++ Info",
      "description": "- name: `hkMultipleVertexBufferVertexBufferInfo`\n - version: `0`\n - signature: `0xdafbe0e6`\n - size: ` 12`(x86)/` 24`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "isLocked": {
          "title": "C++ Info",
          "description": "- name: `isLocked`(ctype: `hkBool`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "lockedVertices": {
          "title": "C++ Info",
          "description": "- name: `lockedVertices`(ctype: `void*`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "vertexBuffer": {
          "title": "C++ Info",
          "description": "- name: `vertexBuffer`(ctype: `struct hkMeshVertexBuffer*`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "vertexBuffer",
        "lockedVertices",
        "isLocked"
      ]
    },
    "hkPackedVector3": {
      "title": "C++ Info",
      "description": "- name: `hkPackedVector3`\n - version: `0`\n - signature: `0x9c16df5b`\n - size: `  8`(x86)/`  8`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "values": {
          "title": "C++ Info",
          "description": "- name: `values`(ctype: `hkInt16[4]`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  8`(x86)/`  8`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int16"
          },
          "maxItems": 4,
          "minItems": 4
        }
      },
      "required": [
        "values"
      ]
    },
    "hkPackfileHeader": {
      "title": "C++ Info",
      "description": "- name: `hkPackfileHeader`\n - version: `1`\n - signature: `0x79f9ffda`\n - size: ` 64`(x86)/` 64`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "contentsClassNameSectionIndex": {
          "title": "C++ Info",
          "description": "- name: `contentsClassNameSectionIndex`(ctype: `hkInt32`)\n - offset: ` 32`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "contentsClassNameSectionOffset": {
          "title": "C++ Info",
          "description": "- name: `contentsClassNameSectionOffset`(ctype: `hkInt32`)\n - offset: ` 36`(x86)/` 36`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "contentsSectionIndex": {
          "title": "C++ Info",
          "description": "- name: `contentsSectionIndex`(ctype: `hkInt32`)\n - offset: ` 24`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "contentsSectionOffset": {
          "title": "C++ Info",
          "description": "- name: `contentsSectionOffset`(ctype: `hkInt32`)\n - offset: ` 28`(x86)/` 28`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "contentsVersion": {
          "title": "C++ Info",
          "description": "- name: `contentsVersion`(ctype: `hkChar[16]`)\n - offset: ` 40`(x86)/` 40`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string",
            "maxLength": 1,
            "minLength": 1
          },
          "maxItems": 16,
          "minItems": 16
        },
        "fileVersion": {
          "title": "C++ Info",
          "description": "- name: `fileVersion`(ctype: `hkInt32`)\n - offset: ` 12`(x86)/` 12`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "flags": {
          "title": "C++ Info",
          "description": "- name: `flags`(ctype: `hkInt32`)\n - offset: ` 56`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "layoutRules": {
          "title": "C++ Info",
          "description": "- name: `layoutRules`(ctype: `hkUint8[4]`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint8",
            "minimum": 0
          },
          "maxItems": 4,
          "minItems": 4
        },
        "magic": {
          "title": "C++ Info",
          "description": "- name: `magic`(ctype: `hkInt32[2]`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  8`(x86)/`  8`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "maxItems": 2,
          "minItems": 2
        },
        "numSections": {
          "title": "C++ Info",
          "description": "- name: `numSections`(ctype: `hkInt32`)\n - offset: ` 20`(x86)/` 20`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "pad": {
          "title": "C++ Info",
          "description": "- name: `pad`(ctype: `hkInt32[1]`)\n - offset: ` 60`(x86)/` 60`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "maxItems": 1,
          "minItems": 1
        },
        "userTag": {
          "title": "C++ Info",
          "description": "- name: `userTag`(ctype: `hkInt32`)\n - offset: `  8`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "magic",
        "userTag",
        "fileVersion",
        "layoutRules",
        "numSections",
        "contentsSectionIndex",
        "contentsSectionOffset",
        "contentsClassNameSectionIndex",
        "contentsClassNameSectionOffset",
        "contentsVersion",
        "flags",
        "pad"
      ]
    },
    "hkPackfileSectionHeader": {
      "title": "C++ Info",
      "description": "- name: `hkPackfileSectionHeader`\n - version: `0`\n - signature: `0xf2a92154`\n - size: ` 48`(x86)/` 48`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "absoluteDataStart": {
          "title": "C++ Info",
          "description": "- name: `absoluteDataStart`(ctype: `hkInt32`)\n - offset: ` 20`(x86)/` 20`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "endOffset": {
          "title": "C++ Info",
          "description": "- name: `endOffset`(ctype: `hkInt32`)\n - offset: ` 44`(x86)/` 44`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "exportsOffset": {
          "title": "C++ Info",
          "description": "- name: `exportsOffset`(ctype: `hkInt32`)\n - offset: ` 36`(x86)/` 36`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "globalFixupsOffset": {
          "title": "C++ Info",
          "description": "- name: `globalFixupsOffset`(ctype: `hkInt32`)\n - offset: ` 28`(x86)/` 28`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "importsOffset": {
          "title": "C++ Info",
          "description": "- name: `importsOffset`(ctype: `hkInt32`)\n - offset: ` 40`(x86)/` 40`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "localFixupsOffset": {
          "title": "C++ Info",
          "description": "- name: `localFixupsOffset`(ctype: `hkInt32`)\n - offset: ` 24`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "nullByte": {
          "title": "C++ Info",
          "description": "- name: `nullByte`(ctype: `hkChar`)\n - offset: ` 19`(x86)/` 19`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "string",
          "maxLength": 1,
          "minLength": 1
        },
        "sectionTag": {
          "title": "C++ Info",
          "description": "- name: `sectionTag`(ctype: `hkChar[19]`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: ` 19`(x86)/` 19`(x86_64)",
          "type": "array",
          "items": {
            "type": "string",
            "maxLength": 1,
            "minLength": 1
          },
          "maxItems": 19,
          "minItems": 19
        },
        "virtualFixupsOffset": {
          "title": "C++ Info",
          "description": "- name: `virtualFixupsOffset`(ctype: `hkInt32`)\n - offset: ` 32`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "sectionTag",
        "nullByte",
        "absoluteDataStart",
        "localFixupsOffset",
        "globalFixupsOffset",
        "virtualFixupsOffset",
        "exportsOffset",
        "importsOffset",
        "endOffset"
      ]
    },
    "hkPostFinishAttribute": {
      "title": "C++ Info",
      "description": "- name: `hkPostFinishAttribute`\n - version: `0`\n - signature: `0x903abb2c`\n - size: `  4`(x86)/`  8`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "postFinishFunction": {
          "title": "C++ Info",
          "description": "- name: `postFinishFunction`(ctype: `void*`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        }
      },
      "required": [
        "postFinishFunction"
      ]
    },
    "hkQTransform": {
      "title": "C++ Info",
      "description": "- name: `hkQTransform`\n - version: `0`\n - signature: `0x471a21ee`\n - size: ` 32`(x86)/` 32`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "rotation": {
          "title": "C++ Info",
          "description": "- name: `rotation`(ctype: `hkQuaternion`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Quaternion"
        },
        "translation": {
          "title": "C++ Info",
          "description": "- name: `translation`(ctype: `hkVector4`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        }
      },
      "required": [
        "rotation",
        "translation"
      ]
    },
    "hkRangeInt32Attribute": {
      "title": "C++ Info",
      "description": "- name: `hkRangeInt32Attribute`\n - version: `0`\n - signature: `0x4846be29`\n - size: ` 16`(x86)/` 16`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "absmax": {
          "title": "C++ Info",
          "description": "- name: `absmax`(ctype: `hkInt32`)\n - offset: `  4`(x86)/`  4`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "absmin": {
          "title": "C++ Info",
          "description": "- name: `absmin`(ctype: `hkInt32`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "softmax": {
          "title": "C++ Info",
          "description": "- name: `softmax`(ctype: `hkInt32`)\n - offset: ` 12`(x86)/` 12`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "softmin": {
          "title": "C++ Info",
          "description": "- name: `softmin`(ctype: `hkInt32`)\n - offset: `  8`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "absmin",
        "absmax",
        "softmin",
        "softmax"
      ]
    },
    "hkRangeRealAttribute": {
      "title": "C++ Info",
      "description": "- name: `hkRangeRealAttribute`\n - version: `0`\n - signature: `0x949db24f`\n - size: ` 16`(x86)/` 16`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "absmax": {
          "title": "C++ Info",
          "description": "- name: `absmax`(ctype: `hkReal`)\n - offset: `  4`(x86)/`  4`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "absmin": {
          "title": "C++ Info",
          "description": "- name: `absmin`(ctype: `hkReal`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "softmax": {
          "title": "C++ Info",
          "description": "- name: `softmax`(ctype: `hkReal`)\n - offset: ` 12`(x86)/` 12`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "softmin": {
          "title": "C++ Info",
          "description": "- name: `softmin`(ctype: `hkReal`)\n - offset: `  8`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        }
      },
      "required": [
        "absmin",
        "absmax",
        "softmin",
        "softmax"
      ]
    },
    "hkReferencedObject": {
      "title": "C++ Info",
      "description": "- name: `hkReferencedObject`\n - version: `0`\n - signature: `0x3b1c1113`\n - size: `  8`(x86)/` 16`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount"
      ]
    },
    "hkReflectedFileAttribute": {
      "title": "C++ Info",
      "description": "- name: `hkReflectedFileAttribute`\n - version: `0`\n - signature: `0xedb6b8f7`\n - size: `  4`(x86)/`  8`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "value": {
          "title": "C++ Info",
          "description": "- name: `value`(ctype: `char*`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        }
      }
    },
    "hkResourceBase": {
      "title": "C++ Info",
      "description": "- name: `hkResourceBase`\n - version: `0`\n - signature: `0x660d7cac`\n - size: `  8`(x86)/` 16`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount"
      ]
    },
    "hkResourceContainer": {
      "title": "C++ Info",
      "description": "- name: `hkResourceContainer`\n - version: `0`\n - signature: `0x4e94146`\n - size: `  8`(x86)/` 16`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount"
      ]
    },
    "hkResourceHandle": {
      "title": "C++ Info",
      "description": "- name: `hkResourceHandle`\n - version: `0`\n - signature: `0x4e94146`\n - size: `  8`(x86)/` 16`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount"
      ]
    },
    "hkRootLevelContainer": {
      "title": "C++ Info",
      "description": "- name: `hkRootLevelContainer`\n - version: `0`\n - signature: `0x2772c11e`\n - size: ` 12`(x86)/` 16`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "namedVariants": {
          "title": "C++ Info",
          "description": "- name: `namedVariants`(ctype: `hkArray<struct hkRootLevelContainerNamedVariant>`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkRootLevelContainerNamedVariant"
          }
        }
      },
      "required": [
        "namedVariants"
      ]
    },
    "hkRootLevelContainerNamedVariant": {
      "title": "C++ Info",
      "description": "- name: `hkRootLevelContainerNamedVariant`\n - version: `0`\n - signature: `0xb103a2cd`\n - size: ` 12`(x86)/` 24`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "className": {
          "title": "C++ Info",
          "description": "- name: `className`(ctype: `hkStringPtr`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "variant": {
          "title": "C++ Info",
          "description": "- name: `variant`(ctype: `struct hkReferencedObject*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "variant"
      ]
    },
    "hkSemanticsAttribute": {
      "title": "C++ Info",
      "description": "- name: `hkSemanticsAttribute`\n - version: `0`\n - signature: `0x837099c3`\n - size: `  1`(x86)/`  1`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum Semantics`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/Semantics"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "required": [
        "type"
      ]
    },
    "hkSimpleLocalFrame": {
      "title": "C++ Info",
      "description": "- name: `hkSimpleLocalFrame`\n - version: `1`\n - signature: `0xe758f63c`\n - size: `112`(x86)/`128`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "children": {
          "title": "C++ Info",
          "description": "- name: `children`(ctype: `hkArray<hkLocalFrame*>`)\n - offset: ` 80`(x86)/` 80`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "group": {
          "title": "C++ Info",
          "description": "- name: `group`(ctype: `struct hkLocalFrameGroup*`)\n - offset: ` 96`(x86)/`104`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: `100`(x86)/`112`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "parentFrame": {
          "title": "C++ Info",
          "description": "- name: `parentFrame`(ctype: `struct hkLocalFrame*`)\n - offset: ` 92`(x86)/` 96`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `NOT_OWNED`",
          "type": "string"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "transform": {
          "title": "C++ Info",
          "description": "- name: `transform`(ctype: `hkTransform`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: ` 64`(x86)/` 64`(x86_64)",
          "$ref": "#/$defs/Transform"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "transform",
        "children",
        "parentFrame",
        "group"
      ]
    },
    "hkSphere": {
      "title": "C++ Info",
      "description": "- name: `hkSphere`\n - version: `0`\n - signature: `0x143dff99`\n - size: ` 16`(x86)/` 16`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "pos": {
          "title": "C++ Info",
          "description": "- name: `pos`(ctype: `hkVector4`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        }
      },
      "required": [
        "pos"
      ]
    },
    "hkSweptTransform": {
      "title": "C++ Info",
      "description": "- name: `hkSweptTransform`\n - version: `0`\n - signature: `0xb4e5770`\n - size: ` 80`(x86)/` 80`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "centerOfMass0": {
          "title": "C++ Info",
          "description": "- name: `centerOfMass0`(ctype: `hkVector4`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "centerOfMass1": {
          "title": "C++ Info",
          "description": "- name: `centerOfMass1`(ctype: `hkVector4`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "centerOfMassLocal": {
          "title": "C++ Info",
          "description": "- name: `centerOfMassLocal`(ctype: `hkVector4`)\n - offset: ` 64`(x86)/` 64`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "rotation0": {
          "title": "C++ Info",
          "description": "- name: `rotation0`(ctype: `hkQuaternion`)\n - offset: ` 32`(x86)/` 32`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Quaternion"
        },
        "rotation1": {
          "title": "C++ Info",
          "description": "- name: `rotation1`(ctype: `hkQuaternion`)\n - offset: ` 48`(x86)/` 48`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Quaternion"
        }
      },
      "required": [
        "centerOfMass0",
        "centerOfMass1",
        "rotation0",
        "rotation1",
        "centerOfMassLocal"
      ]
    },
    "hkTraceStreamTitle": {
      "title": "C++ Info",
      "description": "- name: `hkTraceStreamTitle`\n - version: `0`\n - signature: `0x6a4ca82c`\n - size: ` 32`(x86)/` 32`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "value": {
          "title": "C++ Info",
          "description": "- name: `value`(ctype: `hkChar[32]`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: ` 32`(x86)/` 32`(x86_64)",
          "type": "array",
          "items": {
            "type": "string",
            "maxLength": 1,
            "minLength": 1
          },
          "maxItems": 32,
          "minItems": 32
        }
      },
      "required": [
        "value"
      ]
    },
    "hkTrackerSerializableScanSnapshot": {
      "title": "C++ Info",
      "description": "- name: `hkTrackerSerializableScanSnapshot`\n - version: `0`\n - signature: `0x875af1d9`\n - size: ` 92`(x86)/`128`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "allocations": {
          "title": "C++ Info",
          "description": "- name: `allocations`(ctype: `hkArray<struct hkTrackerSerializableScanSnapshotAllocation>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkTrackerSerializableScanSnapshotAllocation"
          }
        },
        "blocks": {
          "title": "C++ Info",
          "description": "- name: `blocks`(ctype: `hkArray<struct hkTrackerSerializableScanSnapshotBlock>`)\n - offset: ` 20`(x86)/` 32`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkTrackerSerializableScanSnapshotBlock"
          }
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "refs": {
          "title": "C++ Info",
          "description": "- name: `refs`(ctype: `hkArray<hkInt32>`)\n - offset: ` 32`(x86)/` 48`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "traceAddrs": {
          "title": "C++ Info",
          "description": "- name: `traceAddrs`(ctype: `hkArray<hkUint64>`)\n - offset: ` 68`(x86)/` 96`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0
          }
        },
        "traceParents": {
          "title": "C++ Info",
          "description": "- name: `traceParents`(ctype: `hkArray<hkInt32>`)\n - offset: ` 80`(x86)/`112`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "traceText": {
          "title": "C++ Info",
          "description": "- name: `traceText`(ctype: `hkArray<hkUint8>`)\n - offset: ` 56`(x86)/` 80`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint8",
            "minimum": 0
          }
        },
        "typeNames": {
          "title": "C++ Info",
          "description": "- name: `typeNames`(ctype: `hkArray<hkUint8>`)\n - offset: ` 44`(x86)/` 64`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint8",
            "minimum": 0
          }
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "allocations",
        "blocks",
        "refs",
        "typeNames",
        "traceText",
        "traceAddrs",
        "traceParents"
      ]
    },
    "hkTrackerSerializableScanSnapshotAllocation": {
      "title": "C++ Info",
      "description": "- name: `hkTrackerSerializableScanSnapshotAllocation`\n - version: `0`\n - signature: `0x9ab3a6ac`\n - size: ` 12`(x86)/` 24`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "size": {
          "title": "C++ Info",
          "description": "- name: `size`(ctype: `hkUlong`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "start": {
          "title": "C++ Info",
          "description": "- name: `start`(ctype: `hkUlong`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "traceId": {
          "title": "C++ Info",
          "description": "- name: `traceId`(ctype: `hkInt32`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "start",
        "size",
        "traceId"
      ]
    },
    "hkTrackerSerializableScanSnapshotBlock": {
      "title": "C++ Info",
      "description": "- name: `hkTrackerSerializableScanSnapshotBlock`\n - version: `0`\n - signature: `0xe7f23e6d`\n - size: ` 24`(x86)/` 40`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "arraySize": {
          "title": "C++ Info",
          "description": "- name: `arraySize`(ctype: `hkInt32`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "numReferences": {
          "title": "C++ Info",
          "description": "- name: `numReferences`(ctype: `hkInt32`)\n - offset: ` 20`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "size": {
          "title": "C++ Info",
          "description": "- name: `size`(ctype: `hkUlong`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "start": {
          "title": "C++ Info",
          "description": "- name: `start`(ctype: `hkUlong`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "startReferenceIndex": {
          "title": "C++ Info",
          "description": "- name: `startReferenceIndex`(ctype: `hkInt32`)\n - offset: ` 16`(x86)/` 28`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "typeIndex": {
          "title": "C++ Info",
          "description": "- name: `typeIndex`(ctype: `hkInt32`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "typeIndex",
        "start",
        "size",
        "arraySize",
        "startReferenceIndex",
        "numReferences"
      ]
    },
    "hkUiAttribute": {
      "title": "C++ Info",
      "description": "- name: `hkUiAttribute`\n - version: `2`\n - signature: `0xeb6e96e3`\n - size: ` 20`(x86)/` 40`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "advanced": {
          "title": "C++ Info",
          "description": "- name: `advanced`(ctype: `hkBool`)\n - offset: ` 18`(x86)/` 34`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "endGroup": {
          "title": "C++ Info",
          "description": "- name: `endGroup`(ctype: `hkBool`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "endGroup2": {
          "title": "C++ Info",
          "description": "- name: `endGroup2`(ctype: `hkBool`)\n - offset: ` 17`(x86)/` 33`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "group": {
          "title": "C++ Info",
          "description": "- name: `group`(ctype: `char*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "hideBaseClassMembers": {
          "title": "C++ Info",
          "description": "- name: `hideBaseClassMembers`(ctype: `char*`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "hideInModeler": {
          "title": "C++ Info",
          "description": "- name: `hideInModeler`(ctype: `enum HideInModeler`)\n - offset: `  1`(x86)/`  1`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/HideInModeler"
        },
        "label": {
          "title": "C++ Info",
          "description": "- name: `label`(ctype: `char*`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "visible": {
          "title": "C++ Info",
          "description": "- name: `visible`(ctype: `hkBool`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        }
      },
      "required": [
        "visible",
        "hideInModeler",
        "endGroup",
        "endGroup2",
        "advanced"
      ]
    },
    "hkVertexFormat": {
      "title": "C++ Info",
      "description": "- name: `hkVertexFormat`\n - version: `0`\n - signature: `0xf11e3ff7`\n - size: `260`(x86)/`260`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "elements": {
          "title": "C++ Info",
          "description": "- name: `elements`(ctype: `struct hkVertexFormatElement[32]`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `256`(x86)/`256`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkVertexFormatElement"
          },
          "maxItems": 32,
          "minItems": 32
        },
        "numElements": {
          "title": "C++ Info",
          "description": "- name: `numElements`(ctype: `hkInt32`)\n - offset: `256`(x86)/`256`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "elements",
        "numElements"
      ]
    },
    "hkVertexFormatElement": {
      "title": "C++ Info",
      "description": "- name: `hkVertexFormatElement`\n - version: `0`\n - signature: `0x54867cbf`\n - size: `  8`(x86)/`  8`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "dataType": {
          "title": "C++ Info",
          "description": "- name: `dataType`(ctype: `enum ComponentType`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/ComponentType"
        },
        "flags": {
          "title": "C++ Info",
          "description": "- name: `flags`(ctype: `flags HintFlags`)\n - offset: `  4`(x86)/`  4`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/HintFlags"
        },
        "numValues": {
          "title": "C++ Info",
          "description": "- name: `numValues`(ctype: `hkUint8`)\n - offset: `  1`(x86)/`  1`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        },
        "pad": {
          "title": "C++ Info",
          "description": "- name: `pad`(ctype: `hkUint8[3]`)\n - offset: `  5`(x86)/`  5`(x86_64)\n - type_size: `  3`(x86)/`  3`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint8",
            "minimum": 0
          },
          "maxItems": 3,
          "minItems": 3
        },
        "subUsage": {
          "title": "C++ Info",
          "description": "- name: `subUsage`(ctype: `hkUint8`)\n - offset: `  3`(x86)/`  3`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        },
        "usage": {
          "title": "C++ Info",
          "description": "- name: `usage`(ctype: `enum ComponentUsage`)\n - offset: `  2`(x86)/`  2`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/ComponentUsage"
        }
      },
      "required": [
        "dataType",
        "numValues",
        "usage",
        "subUsage",
        "flags",
        "pad"
      ]
    },
    "hkWorldMemoryAvailableWatchDog": {
      "title": "C++ Info",
      "description": "- name: `hkWorldMemoryAvailableWatchDog`\n - version: `1`\n - signature: `0xda8c7d7d`\n - size: `  8`(x86)/` 16`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount"
      ]
    },
    "hkaAnimatedReferenceFrame": {
      "title": "C++ Info",
      "description": "- name: `hkaAnimatedReferenceFrame`\n - version: `0`\n - signature: `0xda8c7d7d`\n - size: `  8`(x86)/` 16`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount"
      ]
    },
    "hkaAnimation": {
      "title": "C++ Info",
      "description": "- name: `hkaAnimation`\n - version: `1`\n - signature: `0xa6fa7e88`\n - size: ` 40`(x86)/` 56`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum AnimationType`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "$ref": "#/$defs/AnimationType"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "annotationTracks": {
          "title": "C++ Info",
          "description": "- name: `annotationTracks`(ctype: `hkArray<struct hkaAnnotationTrack>`)\n - offset: ` 28`(x86)/` 40`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkaAnnotationTrack"
          }
        },
        "duration": {
          "title": "C++ Info",
          "description": "- name: `duration`(ctype: `hkReal`)\n - offset: ` 12`(x86)/` 20`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "extractedMotion": {
          "title": "C++ Info",
          "description": "- name: `extractedMotion`(ctype: `struct hkaAnimatedReferenceFrame*`)\n - offset: ` 24`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "numberOfFloatTracks": {
          "title": "C++ Info",
          "description": "- name: `numberOfFloatTracks`(ctype: `hkInt32`)\n - offset: ` 20`(x86)/` 28`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "numberOfTransformTracks": {
          "title": "C++ Info",
          "description": "- name: `numberOfTransformTracks`(ctype: `hkInt32`)\n - offset: ` 16`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "type",
        "duration",
        "numberOfTransformTracks",
        "numberOfFloatTracks",
        "extractedMotion",
        "annotationTracks"
      ]
    },
    "hkaAnimationBinding": {
      "title": "C++ Info",
      "description": "- name: `hkaAnimationBinding`\n - version: `1`\n - signature: `0x66eac971`\n - size: ` 44`(x86)/` 72`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "animation": {
          "title": "C++ Info",
          "description": "- name: `animation`(ctype: `struct hkaAnimation*`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "blendHint": {
          "title": "C++ Info",
          "description": "- name: `blendHint`(ctype: `enum BlendHint`)\n - offset: ` 40`(x86)/` 64`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/BlendHint"
        },
        "floatTrackToFloatSlotIndices": {
          "title": "C++ Info",
          "description": "- name: `floatTrackToFloatSlotIndices`(ctype: `hkArray<hkInt16>`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int16"
          }
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "originalSkeletonName": {
          "title": "C++ Info",
          "description": "- name: `originalSkeletonName`(ctype: `hkStringPtr`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "transformTrackToBoneIndices": {
          "title": "C++ Info",
          "description": "- name: `transformTrackToBoneIndices`(ctype: `hkArray<hkInt16>`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int16"
          }
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "animation",
        "transformTrackToBoneIndices",
        "floatTrackToFloatSlotIndices",
        "blendHint"
      ]
    },
    "hkaAnimationContainer": {
      "title": "C++ Info",
      "description": "- name: `hkaAnimationContainer`\n - version: `1`\n - signature: `0x8dc20333`\n - size: ` 68`(x86)/` 96`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "animations": {
          "title": "C++ Info",
          "description": "- name: `animations`(ctype: `hkArray<hkaAnimation*>`)\n - offset: ` 20`(x86)/` 32`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "attachments": {
          "title": "C++ Info",
          "description": "- name: `attachments`(ctype: `hkArray<hkaBoneAttachment*>`)\n - offset: ` 44`(x86)/` 64`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "bindings": {
          "title": "C++ Info",
          "description": "- name: `bindings`(ctype: `hkArray<hkaAnimationBinding*>`)\n - offset: ` 32`(x86)/` 48`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "skeletons": {
          "title": "C++ Info",
          "description": "- name: `skeletons`(ctype: `hkArray<hkaSkeleton*>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "skins": {
          "title": "C++ Info",
          "description": "- name: `skins`(ctype: `hkArray<hkaMeshBinding*>`)\n - offset: ` 56`(x86)/` 80`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "skeletons",
        "animations",
        "bindings",
        "attachments",
        "skins"
      ]
    },
    "hkaAnimationPreviewColorContainer": {
      "title": "C++ Info",
      "description": "- name: `hkaAnimationPreviewColorContainer`\n - version: `1`\n - signature: `0x4bc4c3e0`\n - size: ` 20`(x86)/` 32`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "previewColor": {
          "title": "C++ Info",
          "description": "- name: `previewColor`(ctype: `hkArray<hkUint32>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          }
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "previewColor"
      ]
    },
    "hkaAnnotationTrack": {
      "title": "C++ Info",
      "description": "- name: `hkaAnnotationTrack`\n - version: `0`\n - signature: `0xd4114fdd`\n - size: ` 16`(x86)/` 24`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "annotations": {
          "title": "C++ Info",
          "description": "- name: `annotations`(ctype: `hkArray<struct hkaAnnotationTrackAnnotation>`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkaAnnotationTrackAnnotation"
          }
        },
        "trackName": {
          "title": "C++ Info",
          "description": "- name: `trackName`(ctype: `hkStringPtr`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "required": [
        "annotations"
      ]
    },
    "hkaAnnotationTrackAnnotation": {
      "title": "C++ Info",
      "description": "- name: `hkaAnnotationTrackAnnotation`\n - version: `0`\n - signature: `0x623bf34f`\n - size: `  8`(x86)/` 16`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "text": {
          "title": "C++ Info",
          "description": "- name: `text`(ctype: `hkStringPtr`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "time": {
          "title": "C++ Info",
          "description": "- name: `time`(ctype: `hkReal`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        }
      },
      "required": [
        "time"
      ]
    },
    "hkaBone": {
      "title": "C++ Info",
      "description": "- name: `hkaBone`\n - version: `0`\n - signature: `0x35912f8a`\n - size: `  8`(x86)/` 16`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "lockTranslation": {
          "title": "C++ Info",
          "description": "- name: `lockTranslation`(ctype: `hkBool`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "required": [
        "lockTranslation"
      ]
    },
    "hkaBoneAttachment": {
      "title": "C++ Info",
      "description": "- name: `hkaBoneAttachment`\n - version: `1`\n - signature: `0xa8ccd5cf`\n - size: ` 96`(x86)/`128`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "attachment": {
          "title": "C++ Info",
          "description": "- name: `attachment`(ctype: `struct hkReferencedObject*`)\n - offset: ` 80`(x86)/` 96`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "boneFromAttachment": {
          "title": "C++ Info",
          "description": "- name: `boneFromAttachment`(ctype: `hkMatrix4`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: ` 64`(x86)/` 64`(x86_64)",
          "$ref": "#/$defs/Matrix4"
        },
        "boneIndex": {
          "title": "C++ Info",
          "description": "- name: `boneIndex`(ctype: `hkInt16`)\n - offset: ` 88`(x86)/`112`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "int16"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 84`(x86)/`104`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "originalSkeletonName": {
          "title": "C++ Info",
          "description": "- name: `originalSkeletonName`(ctype: `hkStringPtr`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "boneFromAttachment",
        "attachment",
        "boneIndex"
      ]
    },
    "hkaDefaultAnimatedReferenceFrame": {
      "title": "C++ Info",
      "description": "- name: `hkaDefaultAnimatedReferenceFrame`\n - version: `0`\n - signature: `0x6d85e445`\n - size: ` 64`(x86)/` 80`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "duration": {
          "title": "C++ Info",
          "description": "- name: `duration`(ctype: `hkReal`)\n - offset: ` 48`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "forward": {
          "title": "C++ Info",
          "description": "- name: `forward`(ctype: `hkVector4`)\n - offset: ` 32`(x86)/` 32`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "referenceFrameSamples": {
          "title": "C++ Info",
          "description": "- name: `referenceFrameSamples`(ctype: `hkArray<hkVector4>`)\n - offset: ` 52`(x86)/` 56`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/Vector4"
          }
        },
        "up": {
          "title": "C++ Info",
          "description": "- name: `up`(ctype: `hkVector4`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "up",
        "forward",
        "duration",
        "referenceFrameSamples"
      ]
    },
    "hkaDeltaCompressedAnimation": {
      "title": "C++ Info",
      "description": "- name: `hkaDeltaCompressedAnimation`\n - version: `0`\n - signature: `0x90a68d40`\n - size: `120`(x86)/`144`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum AnimationType`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "$ref": "#/$defs/AnimationType"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "annotationTracks": {
          "title": "C++ Info",
          "description": "- name: `annotationTracks`(ctype: `hkArray<struct hkaAnnotationTrack>`)\n - offset: ` 28`(x86)/` 40`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkaAnnotationTrack"
          }
        },
        "blockSize": {
          "title": "C++ Info",
          "description": "- name: `blockSize`(ctype: `hkInt32`)\n - offset: ` 44`(x86)/` 60`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "dataBuffer": {
          "title": "C++ Info",
          "description": "- name: `dataBuffer`(ctype: `hkArray<hkUint8>`)\n - offset: `108`(x86)/`128`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint8",
            "minimum": 0
          }
        },
        "duration": {
          "title": "C++ Info",
          "description": "- name: `duration`(ctype: `hkReal`)\n - offset: ` 12`(x86)/` 20`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "extractedMotion": {
          "title": "C++ Info",
          "description": "- name: `extractedMotion`(ctype: `struct hkaAnimatedReferenceFrame*`)\n - offset: ` 24`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "lastBlockSize": {
          "title": "C++ Info",
          "description": "- name: `lastBlockSize`(ctype: `hkUint32`)\n - offset: `104`(x86)/`120`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "numDynamicTransformDOFs": {
          "title": "C++ Info",
          "description": "- name: `numDynamicTransformDOFs`(ctype: `hkUint32`)\n - offset: ` 96`(x86)/`112`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "numStaticTransformDOFs": {
          "title": "C++ Info",
          "description": "- name: `numStaticTransformDOFs`(ctype: `hkUint32`)\n - offset: ` 92`(x86)/`108`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "numberOfFloatTracks": {
          "title": "C++ Info",
          "description": "- name: `numberOfFloatTracks`(ctype: `hkInt32`)\n - offset: ` 20`(x86)/` 28`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "numberOfPoses": {
          "title": "C++ Info",
          "description": "- name: `numberOfPoses`(ctype: `hkInt32`)\n - offset: ` 40`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "numberOfTransformTracks": {
          "title": "C++ Info",
          "description": "- name: `numberOfTransformTracks`(ctype: `hkInt32`)\n - offset: ` 16`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "qFormat": {
          "title": "C++ Info",
          "description": "- name: `qFormat`(ctype: `struct hkaDeltaCompressedAnimationQuantizationFormat`)\n - offset: ` 48`(x86)/` 64`(x86_64)\n - type_size: ` 20`(x86)/` 20`(x86_64)",
          "$ref": "#/$defs/hkaDeltaCompressedAnimationQuantizationFormat"
        },
        "quantizedDataIdx": {
          "title": "C++ Info",
          "description": "- name: `quantizedDataIdx`(ctype: `hkUint32`)\n - offset: ` 68`(x86)/` 84`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "quantizedDataSize": {
          "title": "C++ Info",
          "description": "- name: `quantizedDataSize`(ctype: `hkUint32`)\n - offset: ` 72`(x86)/` 88`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "staticDOFsIdx": {
          "title": "C++ Info",
          "description": "- name: `staticDOFsIdx`(ctype: `hkUint32`)\n - offset: ` 84`(x86)/`100`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "staticDOFsSize": {
          "title": "C++ Info",
          "description": "- name: `staticDOFsSize`(ctype: `hkUint32`)\n - offset: ` 88`(x86)/`104`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "staticMaskIdx": {
          "title": "C++ Info",
          "description": "- name: `staticMaskIdx`(ctype: `hkUint32`)\n - offset: ` 76`(x86)/` 92`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "staticMaskSize": {
          "title": "C++ Info",
          "description": "- name: `staticMaskSize`(ctype: `hkUint32`)\n - offset: ` 80`(x86)/` 96`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "totalBlockSize": {
          "title": "C++ Info",
          "description": "- name: `totalBlockSize`(ctype: `hkUint32`)\n - offset: `100`(x86)/`116`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "type",
        "duration",
        "numberOfTransformTracks",
        "numberOfFloatTracks",
        "extractedMotion",
        "annotationTracks",
        "numberOfPoses",
        "blockSize",
        "qFormat",
        "quantizedDataIdx",
        "quantizedDataSize",
        "staticMaskIdx",
        "staticMaskSize",
        "staticDOFsIdx",
        "staticDOFsSize",
        "numStaticTransformDOFs",
        "numDynamicTransformDOFs",
        "totalBlockSize",
        "lastBlockSize",
        "dataBuffer"
      ]
    },
    "hkaDeltaCompressedAnimationQuantizationFormat": {
      "title": "C++ Info",
      "description": "- name: `hkaDeltaCompressedAnimationQuantizationFormat`\n - version: `0`\n - signature: `0x724a7561`\n - size: ` 20`(x86)/` 20`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "bitWidthIdx": {
          "title": "C++ Info",
          "description": "- name: `bitWidthIdx`(ctype: `hkUint32`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "maxBitWidth": {
          "title": "C++ Info",
          "description": "- name: `maxBitWidth`(ctype: `hkUint8`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        },
        "numD": {
          "title": "C++ Info",
          "description": "- name: `numD`(ctype: `hkUint32`)\n - offset: `  4`(x86)/`  4`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "offsetIdx": {
          "title": "C++ Info",
          "description": "- name: `offsetIdx`(ctype: `hkUint32`)\n - offset: `  8`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "preserved": {
          "title": "C++ Info",
          "description": "- name: `preserved`(ctype: `hkUint8`)\n - offset: `  1`(x86)/`  1`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        },
        "scaleIdx": {
          "title": "C++ Info",
          "description": "- name: `scaleIdx`(ctype: `hkUint32`)\n - offset: ` 12`(x86)/` 12`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        }
      },
      "required": [
        "maxBitWidth",
        "preserved",
        "numD",
        "offsetIdx",
        "scaleIdx",
        "bitWidthIdx"
      ]
    },
    "hkaFootstepAnalysisInfo": {
      "title": "C++ Info",
      "description": "- name: `hkaFootstepAnalysisInfo`\n - version: `1`\n - signature: `0x824faf75`\n - size: `152`(x86)/`208`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "allBonesDown": {
          "title": "C++ Info",
          "description": "- name: `allBonesDown`(ctype: `hkArray<hkReal>`)\n - offset: `116`(x86)/`160`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "anyBonesDown": {
          "title": "C++ Info",
          "description": "- name: `anyBonesDown`(ctype: `hkArray<hkReal>`)\n - offset: `128`(x86)/`176`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "duration": {
          "title": "C++ Info",
          "description": "- name: `duration`(ctype: `hkReal`)\n - offset: `148`(x86)/`200`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "maxPos": {
          "title": "C++ Info",
          "description": "- name: `maxPos`(ctype: `hkArray<hkReal>`)\n - offset: ` 80`(x86)/`112`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "maxVel": {
          "title": "C++ Info",
          "description": "- name: `maxVel`(ctype: `hkArray<hkReal>`)\n - offset: `104`(x86)/`144`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "minPos": {
          "title": "C++ Info",
          "description": "- name: `minPos`(ctype: `hkArray<hkReal>`)\n - offset: ` 68`(x86)/` 96`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "minVel": {
          "title": "C++ Info",
          "description": "- name: `minVel`(ctype: `hkArray<hkReal>`)\n - offset: ` 92`(x86)/`128`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkArray<hkChar>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string",
            "maxLength": 1,
            "minLength": 1
          }
        },
        "nameLift": {
          "title": "C++ Info",
          "description": "- name: `nameLift`(ctype: `hkArray<hkChar>`)\n - offset: ` 32`(x86)/` 48`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string",
            "maxLength": 1,
            "minLength": 1
          }
        },
        "nameLock": {
          "title": "C++ Info",
          "description": "- name: `nameLock`(ctype: `hkArray<hkChar>`)\n - offset: ` 44`(x86)/` 64`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string",
            "maxLength": 1,
            "minLength": 1
          }
        },
        "nameStrike": {
          "title": "C++ Info",
          "description": "- name: `nameStrike`(ctype: `hkArray<hkChar>`)\n - offset: ` 20`(x86)/` 32`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string",
            "maxLength": 1,
            "minLength": 1
          }
        },
        "nameUnlock": {
          "title": "C++ Info",
          "description": "- name: `nameUnlock`(ctype: `hkArray<hkChar>`)\n - offset: ` 56`(x86)/` 80`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string",
            "maxLength": 1,
            "minLength": 1
          }
        },
        "posTol": {
          "title": "C++ Info",
          "description": "- name: `posTol`(ctype: `hkReal`)\n - offset: `140`(x86)/`192`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "velTol": {
          "title": "C++ Info",
          "description": "- name: `velTol`(ctype: `hkReal`)\n - offset: `144`(x86)/`196`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "name",
        "nameStrike",
        "nameLift",
        "nameLock",
        "nameUnlock",
        "minPos",
        "maxPos",
        "minVel",
        "maxVel",
        "allBonesDown",
        "anyBonesDown",
        "posTol",
        "velTol",
        "duration"
      ]
    },
    "hkaFootstepAnalysisInfoContainer": {
      "title": "C++ Info",
      "description": "- name: `hkaFootstepAnalysisInfoContainer`\n - version: `1`\n - signature: `0x1d81207c`\n - size: ` 20`(x86)/` 32`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "previewInfo": {
          "title": "C++ Info",
          "description": "- name: `previewInfo`(ctype: `hkArray<hkaFootstepAnalysisInfo*>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "previewInfo"
      ]
    },
    "hkaInterleavedUncompressedAnimation": {
      "title": "C++ Info",
      "description": "- name: `hkaInterleavedUncompressedAnimation`\n - version: `0`\n - signature: `0x930af031`\n - size: ` 64`(x86)/` 88`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum AnimationType`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "$ref": "#/$defs/AnimationType"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "annotationTracks": {
          "title": "C++ Info",
          "description": "- name: `annotationTracks`(ctype: `hkArray<struct hkaAnnotationTrack>`)\n - offset: ` 28`(x86)/` 40`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkaAnnotationTrack"
          }
        },
        "duration": {
          "title": "C++ Info",
          "description": "- name: `duration`(ctype: `hkReal`)\n - offset: ` 12`(x86)/` 20`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "extractedMotion": {
          "title": "C++ Info",
          "description": "- name: `extractedMotion`(ctype: `struct hkaAnimatedReferenceFrame*`)\n - offset: ` 24`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "floats": {
          "title": "C++ Info",
          "description": "- name: `floats`(ctype: `hkArray<hkReal>`)\n - offset: ` 52`(x86)/` 72`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "numberOfFloatTracks": {
          "title": "C++ Info",
          "description": "- name: `numberOfFloatTracks`(ctype: `hkInt32`)\n - offset: ` 20`(x86)/` 28`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "numberOfTransformTracks": {
          "title": "C++ Info",
          "description": "- name: `numberOfTransformTracks`(ctype: `hkInt32`)\n - offset: ` 16`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "transforms": {
          "title": "C++ Info",
          "description": "- name: `transforms`(ctype: `hkArray<hkQsTransform>`)\n - offset: ` 40`(x86)/` 56`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/QsTransform"
          }
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "type",
        "duration",
        "numberOfTransformTracks",
        "numberOfFloatTracks",
        "extractedMotion",
        "annotationTracks",
        "transforms",
        "floats"
      ]
    },
    "hkaKeyFrameHierarchyUtility": {
      "title": "C++ Info",
      "description": "- name: `hkaKeyFrameHierarchyUtility`\n - version: `0`\n - signature: `0x7bd5c66f`\n - size: `  1`(x86)/`  1`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        }
      }
    },
    "hkaKeyFrameHierarchyUtilityControlData": {
      "title": "C++ Info",
      "description": "- name: `hkaKeyFrameHierarchyUtilityControlData`\n - version: `0`\n - signature: `0xa3d0ac71`\n - size: ` 48`(x86)/` 48`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "accelerationGain": {
          "title": "C++ Info",
          "description": "- name: `accelerationGain`(ctype: `hkReal`)\n - offset: `  8`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "hierarchyGain": {
          "title": "C++ Info",
          "description": "- name: `hierarchyGain`(ctype: `hkReal`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "positionGain": {
          "title": "C++ Info",
          "description": "- name: `positionGain`(ctype: `hkReal`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "positionMaxAngularVelocity": {
          "title": "C++ Info",
          "description": "- name: `positionMaxAngularVelocity`(ctype: `hkReal`)\n - offset: ` 24`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "positionMaxLinearVelocity": {
          "title": "C++ Info",
          "description": "- name: `positionMaxLinearVelocity`(ctype: `hkReal`)\n - offset: ` 20`(x86)/` 20`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "snapGain": {
          "title": "C++ Info",
          "description": "- name: `snapGain`(ctype: `hkReal`)\n - offset: ` 28`(x86)/` 28`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "snapMaxAngularDistance": {
          "title": "C++ Info",
          "description": "- name: `snapMaxAngularDistance`(ctype: `hkReal`)\n - offset: ` 44`(x86)/` 44`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "snapMaxAngularVelocity": {
          "title": "C++ Info",
          "description": "- name: `snapMaxAngularVelocity`(ctype: `hkReal`)\n - offset: ` 36`(x86)/` 36`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "snapMaxLinearDistance": {
          "title": "C++ Info",
          "description": "- name: `snapMaxLinearDistance`(ctype: `hkReal`)\n - offset: ` 40`(x86)/` 40`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "snapMaxLinearVelocity": {
          "title": "C++ Info",
          "description": "- name: `snapMaxLinearVelocity`(ctype: `hkReal`)\n - offset: ` 32`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "velocityDamping": {
          "title": "C++ Info",
          "description": "- name: `velocityDamping`(ctype: `hkReal`)\n - offset: `  4`(x86)/`  4`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "velocityGain": {
          "title": "C++ Info",
          "description": "- name: `velocityGain`(ctype: `hkReal`)\n - offset: ` 12`(x86)/` 12`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        }
      },
      "required": [
        "hierarchyGain",
        "velocityDamping",
        "accelerationGain",
        "velocityGain",
        "positionGain",
        "positionMaxLinearVelocity",
        "positionMaxAngularVelocity",
        "snapGain",
        "snapMaxLinearVelocity",
        "snapMaxAngularVelocity",
        "snapMaxLinearDistance",
        "snapMaxAngularDistance"
      ]
    },
    "hkaMeshBinding": {
      "title": "C++ Info",
      "description": "- name: `hkaMeshBinding`\n - version: `1`\n - signature: `0x81d9950b`\n - size: ` 44`(x86)/` 72`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "boneFromSkinMeshTransforms": {
          "title": "C++ Info",
          "description": "- name: `boneFromSkinMeshTransforms`(ctype: `hkArray<hkTransform>`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/Transform"
          }
        },
        "mappings": {
          "title": "C++ Info",
          "description": "- name: `mappings`(ctype: `hkArray<struct hkaMeshBindingMapping>`)\n - offset: ` 20`(x86)/` 40`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkaMeshBindingMapping"
          }
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "mesh": {
          "title": "C++ Info",
          "description": "- name: `mesh`(ctype: `struct hkxMesh*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "originalSkeletonName": {
          "title": "C++ Info",
          "description": "- name: `originalSkeletonName`(ctype: `hkStringPtr`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "skeleton": {
          "title": "C++ Info",
          "description": "- name: `skeleton`(ctype: `struct hkaSkeleton*`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "mesh",
        "skeleton",
        "mappings",
        "boneFromSkinMeshTransforms"
      ]
    },
    "hkaMeshBindingMapping": {
      "title": "C++ Info",
      "description": "- name: `hkaMeshBindingMapping`\n - version: `0`\n - signature: `0x48aceb75`\n - size: ` 12`(x86)/` 16`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "mapping": {
          "title": "C++ Info",
          "description": "- name: `mapping`(ctype: `hkArray<hkInt16>`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int16"
          }
        }
      },
      "required": [
        "mapping"
      ]
    },
    "hkaQuantizedAnimation": {
      "title": "C++ Info",
      "description": "- name: `hkaQuantizedAnimation`\n - version: `0`\n - signature: `0x3920f053`\n - size: ` 60`(x86)/` 88`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum AnimationType`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "$ref": "#/$defs/AnimationType"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "annotationTracks": {
          "title": "C++ Info",
          "description": "- name: `annotationTracks`(ctype: `hkArray<struct hkaAnnotationTrack>`)\n - offset: ` 28`(x86)/` 40`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkaAnnotationTrack"
          }
        },
        "data": {
          "title": "C++ Info",
          "description": "- name: `data`(ctype: `hkArray<hkUint8>`)\n - offset: ` 40`(x86)/` 56`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint8",
            "minimum": 0
          }
        },
        "duration": {
          "title": "C++ Info",
          "description": "- name: `duration`(ctype: `hkReal`)\n - offset: ` 12`(x86)/` 20`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "endian": {
          "title": "C++ Info",
          "description": "- name: `endian`(ctype: `hkUint32`)\n - offset: ` 52`(x86)/` 72`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "extractedMotion": {
          "title": "C++ Info",
          "description": "- name: `extractedMotion`(ctype: `struct hkaAnimatedReferenceFrame*`)\n - offset: ` 24`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "numberOfFloatTracks": {
          "title": "C++ Info",
          "description": "- name: `numberOfFloatTracks`(ctype: `hkInt32`)\n - offset: ` 20`(x86)/` 28`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "numberOfTransformTracks": {
          "title": "C++ Info",
          "description": "- name: `numberOfTransformTracks`(ctype: `hkInt32`)\n - offset: ` 16`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "skeleton": {
          "title": "C++ Info",
          "description": "- name: `skeleton`(ctype: `void*`)\n - offset: ` 56`(x86)/` 80`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "type",
        "duration",
        "numberOfTransformTracks",
        "numberOfFloatTracks",
        "extractedMotion",
        "annotationTracks",
        "data",
        "endian",
        "skeleton"
      ]
    },
    "hkaQuantizedAnimationTrackCompressionParams": {
      "title": "C++ Info",
      "description": "- name: `hkaQuantizedAnimationTrackCompressionParams`\n - version: `0`\n - signature: `0xf7d64649`\n - size: ` 16`(x86)/` 16`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "floatingTolerance": {
          "title": "C++ Info",
          "description": "- name: `floatingTolerance`(ctype: `hkReal`)\n - offset: ` 12`(x86)/` 12`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "rotationTolerance": {
          "title": "C++ Info",
          "description": "- name: `rotationTolerance`(ctype: `hkReal`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "scaleTolerance": {
          "title": "C++ Info",
          "description": "- name: `scaleTolerance`(ctype: `hkReal`)\n - offset: `  8`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "translationTolerance": {
          "title": "C++ Info",
          "description": "- name: `translationTolerance`(ctype: `hkReal`)\n - offset: `  4`(x86)/`  4`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        }
      },
      "required": [
        "rotationTolerance",
        "translationTolerance",
        "scaleTolerance",
        "floatingTolerance"
      ]
    },
    "hkaRagdollInstance": {
      "title": "C++ Info",
      "description": "- name: `hkaRagdollInstance`\n - version: `0`\n - signature: `0x154948e8`\n - size: ` 48`(x86)/` 72`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "boneToRigidBodyMap": {
          "title": "C++ Info",
          "description": "- name: `boneToRigidBodyMap`(ctype: `hkArray<hkInt32>`)\n - offset: ` 32`(x86)/` 48`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "constraints": {
          "title": "C++ Info",
          "description": "- name: `constraints`(ctype: `hkArray<hkpConstraintInstance*>`)\n - offset: ` 20`(x86)/` 32`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "rigidBodies": {
          "title": "C++ Info",
          "description": "- name: `rigidBodies`(ctype: `hkArray<hkpRigidBody*>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "skeleton": {
          "title": "C++ Info",
          "description": "- name: `skeleton`(ctype: `struct hkaSkeleton*`)\n - offset: ` 44`(x86)/` 64`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "rigidBodies",
        "constraints",
        "boneToRigidBodyMap",
        "skeleton"
      ]
    },
    "hkaSkeleton": {
      "title": "C++ Info",
      "description": "- name: `hkaSkeleton`\n - version: `3`\n - signature: `0x366e8220`\n - size: ` 84`(x86)/`120`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "bones": {
          "title": "C++ Info",
          "description": "- name: `bones`(ctype: `hkArray<struct hkaBone>`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkaBone"
          }
        },
        "floatSlots": {
          "title": "C++ Info",
          "description": "- name: `floatSlots`(ctype: `hkArray<hkStringPtr>`)\n - offset: ` 60`(x86)/` 88`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "localFrames": {
          "title": "C++ Info",
          "description": "- name: `localFrames`(ctype: `hkArray<struct hkaSkeletonLocalFrameOnBone>`)\n - offset: ` 72`(x86)/`104`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkaSkeletonLocalFrameOnBone"
          }
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "parentIndices": {
          "title": "C++ Info",
          "description": "- name: `parentIndices`(ctype: `hkArray<hkInt16>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int16"
          }
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "referenceFloats": {
          "title": "C++ Info",
          "description": "- name: `referenceFloats`(ctype: `hkArray<hkReal>`)\n - offset: ` 48`(x86)/` 72`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "referencePose": {
          "title": "C++ Info",
          "description": "- name: `referencePose`(ctype: `hkArray<hkQsTransform>`)\n - offset: ` 36`(x86)/` 56`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/QsTransform"
          }
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "parentIndices",
        "bones",
        "referencePose",
        "referenceFloats",
        "floatSlots",
        "localFrames"
      ]
    },
    "hkaSkeletonLocalFrameOnBone": {
      "title": "C++ Info",
      "description": "- name: `hkaSkeletonLocalFrameOnBone`\n - version: `0`\n - signature: `0x52e8043`\n - size: `  8`(x86)/` 16`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "boneIndex": {
          "title": "C++ Info",
          "description": "- name: `boneIndex`(ctype: `hkInt32`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "localFrame": {
          "title": "C++ Info",
          "description": "- name: `localFrame`(ctype: `struct hkLocalFrame*`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "localFrame",
        "boneIndex"
      ]
    },
    "hkaSkeletonMapper": {
      "title": "C++ Info",
      "description": "- name: `hkaSkeletonMapper`\n - version: `0`\n - signature: `0x12df42a5`\n - size: `128`(x86)/`144`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "mapping": {
          "title": "C++ Info",
          "description": "- name: `mapping`(ctype: `struct hkaSkeletonMapperData`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: `112`(x86)/`128`(x86_64)",
          "$ref": "#/$defs/hkaSkeletonMapperData"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "mapping"
      ]
    },
    "hkaSkeletonMapperData": {
      "title": "C++ Info",
      "description": "- name: `hkaSkeletonMapperData`\n - version: `1`\n - signature: `0x95687ea0`\n - size: `112`(x86)/`128`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "chainMappings": {
          "title": "C++ Info",
          "description": "- name: `chainMappings`(ctype: `hkArray<struct hkaSkeletonMapperDataChainMapping>`)\n - offset: ` 20`(x86)/` 32`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkaSkeletonMapperDataChainMapping"
          }
        },
        "extractedMotionMapping": {
          "title": "C++ Info",
          "description": "- name: `extractedMotionMapping`(ctype: `hkQsTransform`)\n - offset: ` 48`(x86)/` 64`(x86_64)\n - type_size: ` 48`(x86)/` 48`(x86_64)",
          "$ref": "#/$defs/QsTransform"
        },
        "keepUnmappedLocal": {
          "title": "C++ Info",
          "description": "- name: `keepUnmappedLocal`(ctype: `hkBool`)\n - offset: ` 96`(x86)/`112`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "mappingType": {
          "title": "C++ Info",
          "description": "- name: `mappingType`(ctype: `enum MappingType`)\n - offset: `100`(x86)/`116`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "$ref": "#/$defs/MappingType"
        },
        "simpleMappings": {
          "title": "C++ Info",
          "description": "- name: `simpleMappings`(ctype: `hkArray<struct hkaSkeletonMapperDataSimpleMapping>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkaSkeletonMapperDataSimpleMapping"
          }
        },
        "skeletonA": {
          "title": "C++ Info",
          "description": "- name: `skeletonA`(ctype: `struct hkaSkeleton*`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "skeletonB": {
          "title": "C++ Info",
          "description": "- name: `skeletonB`(ctype: `struct hkaSkeleton*`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "unmappedBones": {
          "title": "C++ Info",
          "description": "- name: `unmappedBones`(ctype: `hkArray<hkInt16>`)\n - offset: ` 32`(x86)/` 48`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int16"
          }
        }
      },
      "required": [
        "skeletonA",
        "skeletonB",
        "simpleMappings",
        "chainMappings",
        "unmappedBones",
        "extractedMotionMapping",
        "keepUnmappedLocal",
        "mappingType"
      ]
    },
    "hkaSkeletonMapperDataChainMapping": {
      "title": "C++ Info",
      "description": "- name: `hkaSkeletonMapperDataChainMapping`\n - version: `0`\n - signature: `0xa528f7cf`\n - size: `112`(x86)/`112`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "endAFromBTransform": {
          "title": "C++ Info",
          "description": "- name: `endAFromBTransform`(ctype: `hkQsTransform`)\n - offset: ` 64`(x86)/` 64`(x86_64)\n - type_size: ` 48`(x86)/` 48`(x86_64)",
          "$ref": "#/$defs/QsTransform"
        },
        "endBoneA": {
          "title": "C++ Info",
          "description": "- name: `endBoneA`(ctype: `hkInt16`)\n - offset: `  2`(x86)/`  2`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "int16"
        },
        "endBoneB": {
          "title": "C++ Info",
          "description": "- name: `endBoneB`(ctype: `hkInt16`)\n - offset: `  6`(x86)/`  6`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "int16"
        },
        "startAFromBTransform": {
          "title": "C++ Info",
          "description": "- name: `startAFromBTransform`(ctype: `hkQsTransform`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: ` 48`(x86)/` 48`(x86_64)",
          "$ref": "#/$defs/QsTransform"
        },
        "startBoneA": {
          "title": "C++ Info",
          "description": "- name: `startBoneA`(ctype: `hkInt16`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "int16"
        },
        "startBoneB": {
          "title": "C++ Info",
          "description": "- name: `startBoneB`(ctype: `hkInt16`)\n - offset: `  4`(x86)/`  4`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "startBoneA",
        "endBoneA",
        "startBoneB",
        "endBoneB",
        "startAFromBTransform",
        "endAFromBTransform"
      ]
    },
    "hkaSkeletonMapperDataSimpleMapping": {
      "title": "C++ Info",
      "description": "- name: `hkaSkeletonMapperDataSimpleMapping`\n - version: `0`\n - signature: `0x3405deca`\n - size: ` 64`(x86)/` 64`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "aFromBTransform": {
          "title": "C++ Info",
          "description": "- name: `aFromBTransform`(ctype: `hkQsTransform`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: ` 48`(x86)/` 48`(x86_64)",
          "$ref": "#/$defs/QsTransform"
        },
        "boneA": {
          "title": "C++ Info",
          "description": "- name: `boneA`(ctype: `hkInt16`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "int16"
        },
        "boneB": {
          "title": "C++ Info",
          "description": "- name: `boneB`(ctype: `hkInt16`)\n - offset: `  2`(x86)/`  2`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "boneA",
        "boneB",
        "aFromBTransform"
      ]
    },
    "hkaSplineCompressedAnimation": {
      "title": "C++ Info",
      "description": "- name: `hkaSplineCompressedAnimation`\n - version: `0`\n - signature: `0x792ee0bb`\n - size: `132`(x86)/`176`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum AnimationType`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "$ref": "#/$defs/AnimationType"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "annotationTracks": {
          "title": "C++ Info",
          "description": "- name: `annotationTracks`(ctype: `hkArray<struct hkaAnnotationTrack>`)\n - offset: ` 28`(x86)/` 40`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkaAnnotationTrack"
          }
        },
        "blockDuration": {
          "title": "C++ Info",
          "description": "- name: `blockDuration`(ctype: `hkReal`)\n - offset: ` 56`(x86)/` 72`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "blockInverseDuration": {
          "title": "C++ Info",
          "description": "- name: `blockInverseDuration`(ctype: `hkReal`)\n - offset: ` 60`(x86)/` 76`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "blockOffsets": {
          "title": "C++ Info",
          "description": "- name: `blockOffsets`(ctype: `hkArray<hkUint32>`)\n - offset: ` 68`(x86)/` 88`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          }
        },
        "data": {
          "title": "C++ Info",
          "description": "- name: `data`(ctype: `hkArray<hkUint8>`)\n - offset: `116`(x86)/`152`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint8",
            "minimum": 0
          }
        },
        "duration": {
          "title": "C++ Info",
          "description": "- name: `duration`(ctype: `hkReal`)\n - offset: ` 12`(x86)/` 20`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "endian": {
          "title": "C++ Info",
          "description": "- name: `endian`(ctype: `hkInt32`)\n - offset: `128`(x86)/`168`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "extractedMotion": {
          "title": "C++ Info",
          "description": "- name: `extractedMotion`(ctype: `struct hkaAnimatedReferenceFrame*`)\n - offset: ` 24`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "floatBlockOffsets": {
          "title": "C++ Info",
          "description": "- name: `floatBlockOffsets`(ctype: `hkArray<hkUint32>`)\n - offset: ` 80`(x86)/`104`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          }
        },
        "floatOffsets": {
          "title": "C++ Info",
          "description": "- name: `floatOffsets`(ctype: `hkArray<hkUint32>`)\n - offset: `104`(x86)/`136`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          }
        },
        "frameDuration": {
          "title": "C++ Info",
          "description": "- name: `frameDuration`(ctype: `hkReal`)\n - offset: ` 64`(x86)/` 80`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "maskAndQuantizationSize": {
          "title": "C++ Info",
          "description": "- name: `maskAndQuantizationSize`(ctype: `hkInt32`)\n - offset: ` 52`(x86)/` 68`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "maxFramesPerBlock": {
          "title": "C++ Info",
          "description": "- name: `maxFramesPerBlock`(ctype: `hkInt32`)\n - offset: ` 48`(x86)/` 64`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "numBlocks": {
          "title": "C++ Info",
          "description": "- name: `numBlocks`(ctype: `hkInt32`)\n - offset: ` 44`(x86)/` 60`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "numFrames": {
          "title": "C++ Info",
          "description": "- name: `numFrames`(ctype: `hkInt32`)\n - offset: ` 40`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "numberOfFloatTracks": {
          "title": "C++ Info",
          "description": "- name: `numberOfFloatTracks`(ctype: `hkInt32`)\n - offset: ` 20`(x86)/` 28`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "numberOfTransformTracks": {
          "title": "C++ Info",
          "description": "- name: `numberOfTransformTracks`(ctype: `hkInt32`)\n - offset: ` 16`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "transformOffsets": {
          "title": "C++ Info",
          "description": "- name: `transformOffsets`(ctype: `hkArray<hkUint32>`)\n - offset: ` 92`(x86)/`120`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          }
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "type",
        "duration",
        "numberOfTransformTracks",
        "numberOfFloatTracks",
        "extractedMotion",
        "annotationTracks",
        "numFrames",
        "numBlocks",
        "maxFramesPerBlock",
        "maskAndQuantizationSize",
        "blockDuration",
        "blockInverseDuration",
        "frameDuration",
        "blockOffsets",
        "floatBlockOffsets",
        "transformOffsets",
        "floatOffsets",
        "data",
        "endian"
      ]
    },
    "hkaSplineCompressedAnimationAnimationCompressionParams": {
      "title": "C++ Info",
      "description": "- name: `hkaSplineCompressedAnimationAnimationCompressionParams`\n - version: `0`\n - signature: `0xde830789`\n - size: `  4`(x86)/`  4`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "enableSampleSingleTracks": {
          "title": "C++ Info",
          "description": "- name: `enableSampleSingleTracks`(ctype: `hkBool`)\n - offset: `  2`(x86)/`  2`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "maxFramesPerBlock": {
          "title": "C++ Info",
          "description": "- name: `maxFramesPerBlock`(ctype: `hkUint16`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        }
      },
      "required": [
        "maxFramesPerBlock",
        "enableSampleSingleTracks"
      ]
    },
    "hkaSplineCompressedAnimationTrackCompressionParams": {
      "title": "C++ Info",
      "description": "- name: `hkaSplineCompressedAnimationTrackCompressionParams`\n - version: `0`\n - signature: `0x42e878d3`\n - size: ` 28`(x86)/` 28`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "floatQuantizationType": {
          "title": "C++ Info",
          "description": "- name: `floatQuantizationType`(ctype: `enum ScalarQuantization`)\n - offset: ` 27`(x86)/` 27`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/ScalarQuantization"
        },
        "floatingDegree": {
          "title": "C++ Info",
          "description": "- name: `floatingDegree`(ctype: `hkUint16`)\n - offset: ` 22`(x86)/` 22`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "floatingTolerance": {
          "title": "C++ Info",
          "description": "- name: `floatingTolerance`(ctype: `hkReal`)\n - offset: ` 12`(x86)/` 12`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "rotationDegree": {
          "title": "C++ Info",
          "description": "- name: `rotationDegree`(ctype: `hkUint16`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "rotationQuantizationType": {
          "title": "C++ Info",
          "description": "- name: `rotationQuantizationType`(ctype: `enum RotationQuantization`)\n - offset: ` 24`(x86)/` 24`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/RotationQuantization"
        },
        "rotationTolerance": {
          "title": "C++ Info",
          "description": "- name: `rotationTolerance`(ctype: `hkReal`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "scaleDegree": {
          "title": "C++ Info",
          "description": "- name: `scaleDegree`(ctype: `hkUint16`)\n - offset: ` 20`(x86)/` 20`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "scaleQuantizationType": {
          "title": "C++ Info",
          "description": "- name: `scaleQuantizationType`(ctype: `enum ScalarQuantization`)\n - offset: ` 26`(x86)/` 26`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/ScalarQuantization"
        },
        "scaleTolerance": {
          "title": "C++ Info",
          "description": "- name: `scaleTolerance`(ctype: `hkReal`)\n - offset: `  8`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "translationDegree": {
          "title": "C++ Info",
          "description": "- name: `translationDegree`(ctype: `hkUint16`)\n - offset: ` 18`(x86)/` 18`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "translationQuantizationType": {
          "title": "C++ Info",
          "description": "- name: `translationQuantizationType`(ctype: `enum ScalarQuantization`)\n - offset: ` 25`(x86)/` 25`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/ScalarQuantization"
        },
        "translationTolerance": {
          "title": "C++ Info",
          "description": "- name: `translationTolerance`(ctype: `hkReal`)\n - offset: `  4`(x86)/`  4`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        }
      },
      "required": [
        "rotationTolerance",
        "translationTolerance",
        "scaleTolerance",
        "floatingTolerance",
        "rotationDegree",
        "translationDegree",
        "scaleDegree",
        "floatingDegree",
        "rotationQuantizationType",
        "translationQuantizationType",
        "scaleQuantizationType",
        "floatQuantizationType"
      ]
    },
    "hkaWaveletCompressedAnimation": {
      "title": "C++ Info",
      "description": "- name: `hkaWaveletCompressedAnimation`\n - version: `0`\n - signature: `0x77cf0962`\n - size: `112`(x86)/`136`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum AnimationType`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "$ref": "#/$defs/AnimationType"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "annotationTracks": {
          "title": "C++ Info",
          "description": "- name: `annotationTracks`(ctype: `hkArray<struct hkaAnnotationTrack>`)\n - offset: ` 28`(x86)/` 40`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkaAnnotationTrack"
          }
        },
        "blockIndexIdx": {
          "title": "C++ Info",
          "description": "- name: `blockIndexIdx`(ctype: `hkUint32`)\n - offset: ` 84`(x86)/`100`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "blockIndexSize": {
          "title": "C++ Info",
          "description": "- name: `blockIndexSize`(ctype: `hkUint32`)\n - offset: ` 88`(x86)/`104`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "blockSize": {
          "title": "C++ Info",
          "description": "- name: `blockSize`(ctype: `hkInt32`)\n - offset: ` 44`(x86)/` 60`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "dataBuffer": {
          "title": "C++ Info",
          "description": "- name: `dataBuffer`(ctype: `hkArray<hkUint8>`)\n - offset: `100`(x86)/`120`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint8",
            "minimum": 0
          }
        },
        "duration": {
          "title": "C++ Info",
          "description": "- name: `duration`(ctype: `hkReal`)\n - offset: ` 12`(x86)/` 20`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "extractedMotion": {
          "title": "C++ Info",
          "description": "- name: `extractedMotion`(ctype: `struct hkaAnimatedReferenceFrame*`)\n - offset: ` 24`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "numDynamicTransformDOFs": {
          "title": "C++ Info",
          "description": "- name: `numDynamicTransformDOFs`(ctype: `hkUint32`)\n - offset: ` 80`(x86)/` 96`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "numStaticTransformDOFs": {
          "title": "C++ Info",
          "description": "- name: `numStaticTransformDOFs`(ctype: `hkUint32`)\n - offset: ` 76`(x86)/` 92`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "numberOfFloatTracks": {
          "title": "C++ Info",
          "description": "- name: `numberOfFloatTracks`(ctype: `hkInt32`)\n - offset: ` 20`(x86)/` 28`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "numberOfPoses": {
          "title": "C++ Info",
          "description": "- name: `numberOfPoses`(ctype: `hkInt32`)\n - offset: ` 40`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "numberOfTransformTracks": {
          "title": "C++ Info",
          "description": "- name: `numberOfTransformTracks`(ctype: `hkInt32`)\n - offset: ` 16`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "qFormat": {
          "title": "C++ Info",
          "description": "- name: `qFormat`(ctype: `struct hkaWaveletCompressedAnimationQuantizationFormat`)\n - offset: ` 48`(x86)/` 64`(x86_64)\n - type_size: ` 20`(x86)/` 20`(x86_64)",
          "$ref": "#/$defs/hkaWaveletCompressedAnimationQuantizationFormat"
        },
        "quantizedDataIdx": {
          "title": "C++ Info",
          "description": "- name: `quantizedDataIdx`(ctype: `hkUint32`)\n - offset: ` 92`(x86)/`108`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "quantizedDataSize": {
          "title": "C++ Info",
          "description": "- name: `quantizedDataSize`(ctype: `hkUint32`)\n - offset: ` 96`(x86)/`112`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "staticDOFsIdx": {
          "title": "C++ Info",
          "description": "- name: `staticDOFsIdx`(ctype: `hkUint32`)\n - offset: ` 72`(x86)/` 88`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "staticMaskIdx": {
          "title": "C++ Info",
          "description": "- name: `staticMaskIdx`(ctype: `hkUint32`)\n - offset: ` 68`(x86)/` 84`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "type",
        "duration",
        "numberOfTransformTracks",
        "numberOfFloatTracks",
        "extractedMotion",
        "annotationTracks",
        "numberOfPoses",
        "blockSize",
        "qFormat",
        "staticMaskIdx",
        "staticDOFsIdx",
        "numStaticTransformDOFs",
        "numDynamicTransformDOFs",
        "blockIndexIdx",
        "blockIndexSize",
        "quantizedDataIdx",
        "quantizedDataSize",
        "dataBuffer"
      ]
    },
    "hkaWaveletCompressedAnimationCompressionParams": {
      "title": "C++ Info",
      "description": "- name: `hkaWaveletCompressedAnimationCompressionParams`\n - version: `0`\n - signature: `0x27c6cafa`\n - size: ` 36`(x86)/` 36`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "absoluteFloatTolerance": {
          "title": "C++ Info",
          "description": "- name: `absoluteFloatTolerance`(ctype: `hkReal`)\n - offset: ` 32`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "absolutePositionTolerance": {
          "title": "C++ Info",
          "description": "- name: `absolutePositionTolerance`(ctype: `hkReal`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "blockSize": {
          "title": "C++ Info",
          "description": "- name: `blockSize`(ctype: `hkUint16`)\n - offset: `  2`(x86)/`  2`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "preserve": {
          "title": "C++ Info",
          "description": "- name: `preserve`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  4`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "quantizationBits": {
          "title": "C++ Info",
          "description": "- name: `quantizationBits`(ctype: `hkUint16`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "relativePositionTolerance": {
          "title": "C++ Info",
          "description": "- name: `relativePositionTolerance`(ctype: `hkReal`)\n - offset: ` 20`(x86)/` 20`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "rotationTolerance": {
          "title": "C++ Info",
          "description": "- name: `rotationTolerance`(ctype: `hkReal`)\n - offset: ` 24`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "scaleTolerance": {
          "title": "C++ Info",
          "description": "- name: `scaleTolerance`(ctype: `hkReal`)\n - offset: ` 28`(x86)/` 28`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "truncProp": {
          "title": "C++ Info",
          "description": "- name: `truncProp`(ctype: `hkReal`)\n - offset: `  8`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "useOldStyleTruncation": {
          "title": "C++ Info",
          "description": "- name: `useOldStyleTruncation`(ctype: `hkBool`)\n - offset: ` 12`(x86)/` 12`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        }
      },
      "required": [
        "quantizationBits",
        "blockSize",
        "preserve",
        "truncProp",
        "useOldStyleTruncation",
        "absolutePositionTolerance",
        "relativePositionTolerance",
        "rotationTolerance",
        "scaleTolerance",
        "absoluteFloatTolerance"
      ]
    },
    "hkaWaveletCompressedAnimationQuantizationFormat": {
      "title": "C++ Info",
      "description": "- name: `hkaWaveletCompressedAnimationQuantizationFormat`\n - version: `0`\n - signature: `0x724a7561`\n - size: ` 20`(x86)/` 20`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "bitWidthIdx": {
          "title": "C++ Info",
          "description": "- name: `bitWidthIdx`(ctype: `hkUint32`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "maxBitWidth": {
          "title": "C++ Info",
          "description": "- name: `maxBitWidth`(ctype: `hkUint8`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        },
        "numD": {
          "title": "C++ Info",
          "description": "- name: `numD`(ctype: `hkUint32`)\n - offset: `  4`(x86)/`  4`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "offsetIdx": {
          "title": "C++ Info",
          "description": "- name: `offsetIdx`(ctype: `hkUint32`)\n - offset: `  8`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "preserved": {
          "title": "C++ Info",
          "description": "- name: `preserved`(ctype: `hkUint8`)\n - offset: `  1`(x86)/`  1`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        },
        "scaleIdx": {
          "title": "C++ Info",
          "description": "- name: `scaleIdx`(ctype: `hkUint32`)\n - offset: ` 12`(x86)/` 12`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        }
      },
      "required": [
        "maxBitWidth",
        "preserved",
        "numD",
        "offsetIdx",
        "scaleIdx",
        "bitWidthIdx"
      ]
    },
    "hkbAttachmentModifier": {
      "title": "C++ Info",
      "description": "- name: `hkbAttachmentModifier`\n - version: `1`\n - signature: `0xcc0aab32`\n - size: `108`(x86)/`200`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "attacheeHandle": {
          "title": "C++ Info",
          "description": "- name: `attacheeHandle`(ctype: `struct hkbHandle*`)\n - offset: ` 84`(x86)/`160`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "attacheeLayer": {
          "title": "C++ Info",
          "description": "- name: `attacheeLayer`(ctype: `hkInt32`)\n - offset: ` 88`(x86)/`168`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "attacheeRB": {
          "title": "C++ Info",
          "description": "- name: `attacheeRB`(ctype: `void*`)\n - offset: ` 92`(x86)/`176`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "attacherHandle": {
          "title": "C++ Info",
          "description": "- name: `attacherHandle`(ctype: `struct hkbHandle*`)\n - offset: ` 80`(x86)/`152`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "attachment": {
          "title": "C++ Info",
          "description": "- name: `attachment`(ctype: `void*`)\n - offset: `104`(x86)/`192`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "attachmentSetup": {
          "title": "C++ Info",
          "description": "- name: `attachmentSetup`(ctype: `struct hkbAttachmentSetup*`)\n - offset: ` 76`(x86)/`144`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "cloneState": {
          "title": "C++ Info",
          "description": "- name: `cloneState`(ctype: `enum unknown`)\n - offset: ` 38`(x86)/` 66`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "enable": {
          "title": "C++ Info",
          "description": "- name: `enable`(ctype: `hkBool`)\n - offset: ` 40`(x86)/` 72`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkInt16`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "oldFilterInfo": {
          "title": "C++ Info",
          "description": "- name: `oldFilterInfo`(ctype: `hkInt32`)\n - offset: `100`(x86)/`188`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int32"
        },
        "oldMotionType": {
          "title": "C++ Info",
          "description": "- name: `oldMotionType`(ctype: `enum unknown`)\n - offset: ` 96`(x86)/`184`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        },
        "padModifier": {
          "title": "C++ Info",
          "description": "- name: `padModifier`(ctype: `hkBool[3]`)\n - offset: ` 41`(x86)/` 73`(x86_64)\n - type_size: `  3`(x86)/`  3`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 3,
          "minItems": 3
        },
        "padNode": {
          "title": "C++ Info",
          "description": "- name: `padNode`(ctype: `hkBool[1]`)\n - offset: ` 39`(x86)/` 67`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 1,
          "minItems": 1
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "sendToAttacheeOnAttach": {
          "title": "C++ Info",
          "description": "- name: `sendToAttacheeOnAttach`(ctype: `struct hkbEventProperty`)\n - offset: ` 52`(x86)/` 96`(x86_64)\n - type_size: `  8`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/hkbEventProperty"
        },
        "sendToAttacheeOnDetach": {
          "title": "C++ Info",
          "description": "- name: `sendToAttacheeOnDetach`(ctype: `struct hkbEventProperty`)\n - offset: ` 68`(x86)/`128`(x86_64)\n - type_size: `  8`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/hkbEventProperty"
        },
        "sendToAttacherOnAttach": {
          "title": "C++ Info",
          "description": "- name: `sendToAttacherOnAttach`(ctype: `struct hkbEventProperty`)\n - offset: ` 44`(x86)/` 80`(x86_64)\n - type_size: `  8`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/hkbEventProperty"
        },
        "sendToAttacherOnDetach": {
          "title": "C++ Info",
          "description": "- name: `sendToAttacherOnDetach`(ctype: `struct hkbEventProperty`)\n - offset: ` 60`(x86)/`112`(x86_64)\n - type_size: `  8`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/hkbEventProperty"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "userData",
        "id",
        "cloneState",
        "padNode",
        "enable",
        "padModifier",
        "sendToAttacherOnAttach",
        "sendToAttacheeOnAttach",
        "sendToAttacherOnDetach",
        "sendToAttacheeOnDetach",
        "attachmentSetup",
        "attacherHandle",
        "attacheeHandle",
        "attacheeLayer",
        "attacheeRB",
        "oldMotionType",
        "oldFilterInfo",
        "attachment"
      ]
    },
    "hkbAttachmentSetup": {
      "title": "C++ Info",
      "description": "- name: `hkbAttachmentSetup`\n - version: `1`\n - signature: `0x774632b`\n - size: ` 40`(x86)/` 48`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "attachmentType": {
          "title": "C++ Info",
          "description": "- name: `attachmentType`(ctype: `enum AttachmentType`)\n - offset: ` 36`(x86)/` 44`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/AttachmentType"
        },
        "blendInTime": {
          "title": "C++ Info",
          "description": "- name: `blendInTime`(ctype: `hkReal`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "extrapolationTimeStep": {
          "title": "C++ Info",
          "description": "- name: `extrapolationTimeStep`(ctype: `hkReal`)\n - offset: ` 20`(x86)/` 28`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "fixUpGain": {
          "title": "C++ Info",
          "description": "- name: `fixUpGain`(ctype: `hkReal`)\n - offset: ` 24`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "gain": {
          "title": "C++ Info",
          "description": "- name: `gain`(ctype: `hkReal`)\n - offset: ` 16`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "maxAngularDistance": {
          "title": "C++ Info",
          "description": "- name: `maxAngularDistance`(ctype: `hkReal`)\n - offset: ` 32`(x86)/` 40`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "maxLinearDistance": {
          "title": "C++ Info",
          "description": "- name: `maxLinearDistance`(ctype: `hkReal`)\n - offset: ` 28`(x86)/` 36`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "moveAttacherFraction": {
          "title": "C++ Info",
          "description": "- name: `moveAttacherFraction`(ctype: `hkReal`)\n - offset: ` 12`(x86)/` 20`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "blendInTime",
        "moveAttacherFraction",
        "gain",
        "extrapolationTimeStep",
        "fixUpGain",
        "maxLinearDistance",
        "maxAngularDistance",
        "attachmentType"
      ]
    },
    "hkbAttributeModifier": {
      "title": "C++ Info",
      "description": "- name: `hkbAttributeModifier`\n - version: `0`\n - signature: `0x1245d97d`\n - size: ` 56`(x86)/` 96`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "assignments": {
          "title": "C++ Info",
          "description": "- name: `assignments`(ctype: `hkArray<struct hkbAttributeModifierAssignment>`)\n - offset: ` 44`(x86)/` 80`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkbAttributeModifierAssignment"
          }
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "cloneState": {
          "title": "C++ Info",
          "description": "- name: `cloneState`(ctype: `enum unknown`)\n - offset: ` 38`(x86)/` 66`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "enable": {
          "title": "C++ Info",
          "description": "- name: `enable`(ctype: `hkBool`)\n - offset: ` 40`(x86)/` 72`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkInt16`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "padModifier": {
          "title": "C++ Info",
          "description": "- name: `padModifier`(ctype: `hkBool[3]`)\n - offset: ` 41`(x86)/` 73`(x86_64)\n - type_size: `  3`(x86)/`  3`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 3,
          "minItems": 3
        },
        "padNode": {
          "title": "C++ Info",
          "description": "- name: `padNode`(ctype: `hkBool[1]`)\n - offset: ` 39`(x86)/` 67`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 1,
          "minItems": 1
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "userData",
        "id",
        "cloneState",
        "padNode",
        "enable",
        "padModifier",
        "assignments"
      ]
    },
    "hkbAttributeModifierAssignment": {
      "title": "C++ Info",
      "description": "- name: `hkbAttributeModifierAssignment`\n - version: `0`\n - signature: `0x48b8ad52`\n - size: `  8`(x86)/`  8`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "attributeIndex": {
          "title": "C++ Info",
          "description": "- name: `attributeIndex`(ctype: `hkInt32`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "attributeValue": {
          "title": "C++ Info",
          "description": "- name: `attributeValue`(ctype: `hkReal`)\n - offset: `  4`(x86)/`  4`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        }
      },
      "required": [
        "attributeIndex",
        "attributeValue"
      ]
    },
    "hkbAuxiliaryNodeInfo": {
      "title": "C++ Info",
      "description": "- name: `hkbAuxiliaryNodeInfo`\n - version: `1`\n - signature: `0xca0888ca`\n - size: ` 28`(x86)/` 48`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum NodeType`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/NodeType"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "depth": {
          "title": "C++ Info",
          "description": "- name: `depth`(ctype: `hkUint8`)\n - offset: `  9`(x86)/` 17`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceBehaviorName": {
          "title": "C++ Info",
          "description": "- name: `referenceBehaviorName`(ctype: `hkStringPtr`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "selfTransitionNames": {
          "title": "C++ Info",
          "description": "- name: `selfTransitionNames`(ctype: `hkArray<hkStringPtr>`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "type",
        "depth",
        "selfTransitionNames"
      ]
    },
    "hkbBehaviorEventsInfo": {
      "title": "C++ Info",
      "description": "- name: `hkbBehaviorEventsInfo`\n - version: `1`\n - signature: `0x66840004`\n - size: ` 32`(x86)/` 48`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "characterId": {
          "title": "C++ Info",
          "description": "- name: `characterId`(ctype: `hkUint64`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  8`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "externalEventIds": {
          "title": "C++ Info",
          "description": "- name: `externalEventIds`(ctype: `hkArray<hkInt16>`)\n - offset: ` 16`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int16"
          }
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "padding": {
          "title": "C++ Info",
          "description": "- name: `padding`(ctype: `hkInt32`)\n - offset: ` 28`(x86)/` 40`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "characterId",
        "externalEventIds",
        "padding"
      ]
    },
    "hkbBehaviorGraph": {
      "title": "C++ Info",
      "description": "- name: `hkbBehaviorGraph`\n - version: `1`\n - signature: `0xb1218f86`\n - size: `176`(x86)/`304`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "activeNodeTemplateToIndexMap": {
          "title": "C++ Info",
          "description": "- name: `activeNodeTemplateToIndexMap`(ctype: `void*`)\n - offset: ` 92`(x86)/`160`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "activeNodes": {
          "title": "C++ Info",
          "description": "- name: `activeNodes`(ctype: `void*`)\n - offset: ` 88`(x86)/`152`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "activeNodesChildrenIndices": {
          "title": "C++ Info",
          "description": "- name: `activeNodesChildrenIndices`(ctype: `void*`)\n - offset: ` 96`(x86)/`168`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "allPartitionMemory": {
          "title": "C++ Info",
          "description": "- name: `allPartitionMemory`(ctype: `hkArray<void*>`)\n - offset: `156`(x86)/`280`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "attributeIdMap": {
          "title": "C++ Info",
          "description": "- name: `attributeIdMap`(ctype: `void*`)\n - offset: `108`(x86)/`192`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "characterPropertyIdMap": {
          "title": "C++ Info",
          "description": "- name: `characterPropertyIdMap`(ctype: `void*`)\n - offset: `116`(x86)/`208`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "cloneState": {
          "title": "C++ Info",
          "description": "- name: `cloneState`(ctype: `enum unknown`)\n - offset: ` 38`(x86)/` 66`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "data": {
          "title": "C++ Info",
          "description": "- name: `data`(ctype: `struct hkbBehaviorGraphData*`)\n - offset: ` 80`(x86)/`136`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "eventIdMap": {
          "title": "C++ Info",
          "description": "- name: `eventIdMap`(ctype: `void*`)\n - offset: `104`(x86)/`184`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "globalTransitionData": {
          "title": "C++ Info",
          "description": "- name: `globalTransitionData`(ctype: `void*`)\n - offset: `100`(x86)/`176`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkInt16`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "idToStateMachineTemplateMap": {
          "title": "C++ Info",
          "description": "- name: `idToStateMachineTemplateMap`(ctype: `void*`)\n - offset: ` 56`(x86)/` 96`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "isActive": {
          "title": "C++ Info",
          "description": "- name: `isActive`(ctype: `hkBool`)\n - offset: `172`(x86)/`300`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "isLinked": {
          "title": "C++ Info",
          "description": "- name: `isLinked`(ctype: `hkBool`)\n - offset: `173`(x86)/`301`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "jobs": {
          "title": "C++ Info",
          "description": "- name: `jobs`(ctype: `hkArray<void*>`)\n - offset: `144`(x86)/`264`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "mirroredExternalIdMap": {
          "title": "C++ Info",
          "description": "- name: `mirroredExternalIdMap`(ctype: `hkArray<void>`)\n - offset: ` 60`(x86)/`104`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "nextUniqueId": {
          "title": "C++ Info",
          "description": "- name: `nextUniqueId`(ctype: `hkInt16`)\n - offset: `170`(x86)/`298`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "nodeCloneToTemplateMap": {
          "title": "C++ Info",
          "description": "- name: `nodeCloneToTemplateMap`(ctype: `void*`)\n - offset: `128`(x86)/`232`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "nodePartitionInfo": {
          "title": "C++ Info",
          "description": "- name: `nodePartitionInfo`(ctype: `void*`)\n - offset: `136`(x86)/`248`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "nodeTemplateToCloneMap": {
          "title": "C++ Info",
          "description": "- name: `nodeTemplateToCloneMap`(ctype: `void*`)\n - offset: `124`(x86)/`224`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "numIntermediateOutputs": {
          "title": "C++ Info",
          "description": "- name: `numIntermediateOutputs`(ctype: `hkInt32`)\n - offset: `140`(x86)/`256`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int32"
        },
        "numStaticNodes": {
          "title": "C++ Info",
          "description": "- name: `numStaticNodes`(ctype: `hkInt16`)\n - offset: `168`(x86)/`296`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "padNode": {
          "title": "C++ Info",
          "description": "- name: `padNode`(ctype: `hkBool[1]`)\n - offset: ` 39`(x86)/` 67`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 1,
          "minItems": 1
        },
        "pseudoRandomGenerator": {
          "title": "C++ Info",
          "description": "- name: `pseudoRandomGenerator`(ctype: `void*`)\n - offset: ` 72`(x86)/`120`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "rootGenerator": {
          "title": "C++ Info",
          "description": "- name: `rootGenerator`(ctype: `struct hkbGenerator*`)\n - offset: ` 76`(x86)/`128`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "rootGeneratorClone": {
          "title": "C++ Info",
          "description": "- name: `rootGeneratorClone`(ctype: `void*`)\n - offset: ` 84`(x86)/`144`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "stateListenerTemplateToCloneMap": {
          "title": "C++ Info",
          "description": "- name: `stateListenerTemplateToCloneMap`(ctype: `void*`)\n - offset: `132`(x86)/`240`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "stateOrTransitionChanged": {
          "title": "C++ Info",
          "description": "- name: `stateOrTransitionChanged`(ctype: `hkBool`)\n - offset: `175`(x86)/`303`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "uniqueIdPool": {
          "title": "C++ Info",
          "description": "- name: `uniqueIdPool`(ctype: `hkArray<void>`)\n - offset: ` 44`(x86)/` 80`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "updateActiveNodes": {
          "title": "C++ Info",
          "description": "- name: `updateActiveNodes`(ctype: `hkBool`)\n - offset: `174`(x86)/`302`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "variableIdMap": {
          "title": "C++ Info",
          "description": "- name: `variableIdMap`(ctype: `void*`)\n - offset: `112`(x86)/`200`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "variableMode": {
          "title": "C++ Info",
          "description": "- name: `variableMode`(ctype: `enum VariableMode`)\n - offset: ` 40`(x86)/` 72`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/VariableMode"
        },
        "variableValueSet": {
          "title": "C++ Info",
          "description": "- name: `variableValueSet`(ctype: `void*`)\n - offset: `120`(x86)/`216`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "userData",
        "id",
        "cloneState",
        "padNode",
        "variableMode",
        "uniqueIdPool",
        "idToStateMachineTemplateMap",
        "mirroredExternalIdMap",
        "pseudoRandomGenerator",
        "rootGenerator",
        "data",
        "rootGeneratorClone",
        "activeNodes",
        "activeNodeTemplateToIndexMap",
        "activeNodesChildrenIndices",
        "globalTransitionData",
        "eventIdMap",
        "attributeIdMap",
        "variableIdMap",
        "characterPropertyIdMap",
        "variableValueSet",
        "nodeTemplateToCloneMap",
        "nodeCloneToTemplateMap",
        "stateListenerTemplateToCloneMap",
        "nodePartitionInfo",
        "numIntermediateOutputs",
        "jobs",
        "allPartitionMemory",
        "numStaticNodes",
        "nextUniqueId",
        "isActive",
        "isLinked",
        "updateActiveNodes",
        "stateOrTransitionChanged"
      ]
    },
    "hkbBehaviorGraphData": {
      "title": "C++ Info",
      "description": "- name: `hkbBehaviorGraphData`\n - version: `2`\n - signature: `0x95aca5d`\n - size: ` 88`(x86)/`128`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "attributeDefaults": {
          "title": "C++ Info",
          "description": "- name: `attributeDefaults`(ctype: `hkArray<hkReal>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "characterPropertyInfos": {
          "title": "C++ Info",
          "description": "- name: `characterPropertyInfos`(ctype: `hkArray<struct hkbVariableInfo>`)\n - offset: ` 32`(x86)/` 48`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkbVariableInfo"
          }
        },
        "eventInfos": {
          "title": "C++ Info",
          "description": "- name: `eventInfos`(ctype: `hkArray<struct hkbEventInfo>`)\n - offset: ` 44`(x86)/` 64`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkbEventInfo"
          }
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "stringData": {
          "title": "C++ Info",
          "description": "- name: `stringData`(ctype: `struct hkbBehaviorGraphStringData*`)\n - offset: ` 84`(x86)/`120`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "variableInfos": {
          "title": "C++ Info",
          "description": "- name: `variableInfos`(ctype: `hkArray<struct hkbVariableInfo>`)\n - offset: ` 20`(x86)/` 32`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkbVariableInfo"
          }
        },
        "variableInitialValues": {
          "title": "C++ Info",
          "description": "- name: `variableInitialValues`(ctype: `struct hkbVariableValueSet*`)\n - offset: ` 80`(x86)/`112`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "wordMaxVariableValues": {
          "title": "C++ Info",
          "description": "- name: `wordMaxVariableValues`(ctype: `hkArray<struct hkbVariableValue>`)\n - offset: ` 68`(x86)/` 96`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkbVariableValue"
          }
        },
        "wordMinVariableValues": {
          "title": "C++ Info",
          "description": "- name: `wordMinVariableValues`(ctype: `hkArray<struct hkbVariableValue>`)\n - offset: ` 56`(x86)/` 80`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkbVariableValue"
          }
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "attributeDefaults",
        "variableInfos",
        "characterPropertyInfos",
        "eventInfos",
        "wordMinVariableValues",
        "wordMaxVariableValues",
        "variableInitialValues",
        "stringData"
      ]
    },
    "hkbBehaviorGraphInternalState": {
      "title": "C++ Info",
      "description": "- name: `hkbBehaviorGraphInternalState`\n - version: `0`\n - signature: `0x8699b6eb`\n - size: ` 24`(x86)/` 40`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "nodeInternalStateInfos": {
          "title": "C++ Info",
          "description": "- name: `nodeInternalStateInfos`(ctype: `hkArray<hkbNodeInternalStateInfo*>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "variableValueSet": {
          "title": "C++ Info",
          "description": "- name: `variableValueSet`(ctype: `struct hkbVariableValueSet*`)\n - offset: ` 20`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "nodeInternalStateInfos",
        "variableValueSet"
      ]
    },
    "hkbBehaviorGraphInternalStateInfo": {
      "title": "C++ Info",
      "description": "- name: `hkbBehaviorGraphInternalStateInfo`\n - version: `1`\n - signature: `0x645f898b`\n - size: ` 56`(x86)/` 80`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "activeEventIds": {
          "title": "C++ Info",
          "description": "- name: `activeEventIds`(ctype: `hkArray<hkInt16>`)\n - offset: ` 32`(x86)/` 48`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int16"
          }
        },
        "activeVariableIds": {
          "title": "C++ Info",
          "description": "- name: `activeVariableIds`(ctype: `hkArray<hkInt16>`)\n - offset: ` 44`(x86)/` 64`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int16"
          }
        },
        "auxiliaryNodeInfo": {
          "title": "C++ Info",
          "description": "- name: `auxiliaryNodeInfo`(ctype: `hkArray<hkbAuxiliaryNodeInfo*>`)\n - offset: ` 20`(x86)/` 32`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "characterId": {
          "title": "C++ Info",
          "description": "- name: `characterId`(ctype: `hkUint64`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  8`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "internalState": {
          "title": "C++ Info",
          "description": "- name: `internalState`(ctype: `struct hkbBehaviorGraphInternalState*`)\n - offset: ` 16`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "characterId",
        "internalState",
        "auxiliaryNodeInfo",
        "activeEventIds",
        "activeVariableIds"
      ]
    },
    "hkbBehaviorGraphStringData": {
      "title": "C++ Info",
      "description": "- name: `hkbBehaviorGraphStringData`\n - version: `1`\n - signature: `0xc713064e`\n - size: ` 56`(x86)/` 80`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "attributeNames": {
          "title": "C++ Info",
          "description": "- name: `attributeNames`(ctype: `hkArray<hkStringPtr>`)\n - offset: ` 20`(x86)/` 32`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "characterPropertyNames": {
          "title": "C++ Info",
          "description": "- name: `characterPropertyNames`(ctype: `hkArray<hkStringPtr>`)\n - offset: ` 44`(x86)/` 64`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "eventNames": {
          "title": "C++ Info",
          "description": "- name: `eventNames`(ctype: `hkArray<hkStringPtr>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "variableNames": {
          "title": "C++ Info",
          "description": "- name: `variableNames`(ctype: `hkArray<hkStringPtr>`)\n - offset: ` 32`(x86)/` 48`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "eventNames",
        "attributeNames",
        "variableNames",
        "characterPropertyNames"
      ]
    },
    "hkbBehaviorInfo": {
      "title": "C++ Info",
      "description": "- name: `hkbBehaviorInfo`\n - version: `1`\n - signature: `0xf7645395`\n - size: ` 32`(x86)/` 48`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "characterId": {
          "title": "C++ Info",
          "description": "- name: `characterId`(ctype: `hkUint64`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  8`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "data": {
          "title": "C++ Info",
          "description": "- name: `data`(ctype: `struct hkbBehaviorGraphData*`)\n - offset: ` 16`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "idToNamePairs": {
          "title": "C++ Info",
          "description": "- name: `idToNamePairs`(ctype: `hkArray<struct hkbBehaviorInfoIdToNamePair>`)\n - offset: ` 20`(x86)/` 32`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkbBehaviorInfoIdToNamePair"
          }
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "characterId",
        "data",
        "idToNamePairs"
      ]
    },
    "hkbBehaviorInfoIdToNamePair": {
      "title": "C++ Info",
      "description": "- name: `hkbBehaviorInfoIdToNamePair`\n - version: `0`\n - signature: `0x35a0439a`\n - size: ` 12`(x86)/` 24`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "behaviorName": {
          "title": "C++ Info",
          "description": "- name: `behaviorName`(ctype: `hkStringPtr`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkInt16`)\n - offset: ` 10`(x86)/` 18`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "int16"
        },
        "nodeName": {
          "title": "C++ Info",
          "description": "- name: `nodeName`(ctype: `hkStringPtr`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "toolType": {
          "title": "C++ Info",
          "description": "- name: `toolType`(ctype: `enum ToolNodeType`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/ToolNodeType"
        }
      },
      "required": [
        "toolType",
        "id"
      ]
    },
    "hkbBehaviorReferenceGenerator": {
      "title": "C++ Info",
      "description": "- name: `hkbBehaviorReferenceGenerator`\n - version: `0`\n - signature: `0xfcb5423`\n - size: ` 48`(x86)/` 88`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "behavior": {
          "title": "C++ Info",
          "description": "- name: `behavior`(ctype: `void*`)\n - offset: ` 44`(x86)/` 80`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "behaviorName": {
          "title": "C++ Info",
          "description": "- name: `behaviorName`(ctype: `hkStringPtr`)\n - offset: ` 40`(x86)/` 72`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "cloneState": {
          "title": "C++ Info",
          "description": "- name: `cloneState`(ctype: `enum unknown`)\n - offset: ` 38`(x86)/` 66`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkInt16`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "padNode": {
          "title": "C++ Info",
          "description": "- name: `padNode`(ctype: `hkBool[1]`)\n - offset: ` 39`(x86)/` 67`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 1,
          "minItems": 1
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "userData",
        "id",
        "cloneState",
        "padNode",
        "behavior"
      ]
    },
    "hkbBindable": {
      "title": "C++ Info",
      "description": "- name: `hkbBindable`\n - version: `0`\n - signature: `0x2c1432d7`\n - size: ` 28`(x86)/` 48`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached"
      ]
    },
    "hkbBlendCurveUtils": {
      "title": "C++ Info",
      "description": "- name: `hkbBlendCurveUtils`\n - version: `0`\n - signature: `0x23041af0`\n - size: `  1`(x86)/`  1`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        }
      }
    },
    "hkbBlenderGenerator": {
      "title": "C++ Info",
      "description": "- name: `hkbBlenderGenerator`\n - version: `1`\n - signature: `0x22df7147`\n - size: `116`(x86)/`160`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "beginIntervalIndex": {
          "title": "C++ Info",
          "description": "- name: `beginIntervalIndex`(ctype: `hkInt16`)\n - offset: `108`(x86)/`152`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "blendParameter": {
          "title": "C++ Info",
          "description": "- name: `blendParameter`(ctype: `hkReal`)\n - offset: ` 44`(x86)/` 76`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "children": {
          "title": "C++ Info",
          "description": "- name: `children`(ctype: `hkArray<hkbBlenderGeneratorChild*>`)\n - offset: ` 64`(x86)/` 96`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "childrenInternalStates": {
          "title": "C++ Info",
          "description": "- name: `childrenInternalStates`(ctype: `hkArray<void>`)\n - offset: ` 76`(x86)/`112`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "cloneState": {
          "title": "C++ Info",
          "description": "- name: `cloneState`(ctype: `enum unknown`)\n - offset: ` 38`(x86)/` 66`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "doSubtractiveBlend": {
          "title": "C++ Info",
          "description": "- name: `doSubtractiveBlend`(ctype: `hkBool`)\n - offset: `113`(x86)/`157`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "endIntervalIndex": {
          "title": "C++ Info",
          "description": "- name: `endIntervalIndex`(ctype: `hkInt16`)\n - offset: `110`(x86)/`154`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "endIntervalWeight": {
          "title": "C++ Info",
          "description": "- name: `endIntervalWeight`(ctype: `hkReal`)\n - offset: `100`(x86)/`144`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "number",
          "format": "float"
        },
        "flags": {
          "title": "C++ Info",
          "description": "- name: `flags`(ctype: `hkInt16`)\n - offset: ` 58`(x86)/` 90`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "int16"
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkInt16`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "indexOfSyncMasterChild": {
          "title": "C++ Info",
          "description": "- name: `indexOfSyncMasterChild`(ctype: `hkInt16`)\n - offset: ` 56`(x86)/` 88`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "int16"
        },
        "initSync": {
          "title": "C++ Info",
          "description": "- name: `initSync`(ctype: `hkBool`)\n - offset: `112`(x86)/`156`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "maxCyclicBlendParameter": {
          "title": "C++ Info",
          "description": "- name: `maxCyclicBlendParameter`(ctype: `hkReal`)\n - offset: ` 52`(x86)/` 84`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "minCyclicBlendParameter": {
          "title": "C++ Info",
          "description": "- name: `minCyclicBlendParameter`(ctype: `hkReal`)\n - offset: ` 48`(x86)/` 80`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "numActiveChildren": {
          "title": "C++ Info",
          "description": "- name: `numActiveChildren`(ctype: `hkInt32`)\n - offset: `104`(x86)/`148`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int32"
        },
        "padNode": {
          "title": "C++ Info",
          "description": "- name: `padNode`(ctype: `hkBool[1]`)\n - offset: ` 39`(x86)/` 67`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 1,
          "minItems": 1
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "referencePoseWeightThreshold": {
          "title": "C++ Info",
          "description": "- name: `referencePoseWeightThreshold`(ctype: `hkReal`)\n - offset: ` 40`(x86)/` 72`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "sortedChildren": {
          "title": "C++ Info",
          "description": "- name: `sortedChildren`(ctype: `hkArray<void>`)\n - offset: ` 88`(x86)/`128`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "subtractLastChild": {
          "title": "C++ Info",
          "description": "- name: `subtractLastChild`(ctype: `hkBool`)\n - offset: ` 60`(x86)/` 92`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "userData",
        "id",
        "cloneState",
        "padNode",
        "referencePoseWeightThreshold",
        "blendParameter",
        "minCyclicBlendParameter",
        "maxCyclicBlendParameter",
        "indexOfSyncMasterChild",
        "flags",
        "subtractLastChild",
        "children",
        "childrenInternalStates",
        "sortedChildren",
        "endIntervalWeight",
        "numActiveChildren",
        "beginIntervalIndex",
        "endIntervalIndex",
        "initSync",
        "doSubtractiveBlend"
      ]
    },
    "hkbBlenderGeneratorChild": {
      "title": "C++ Info",
      "description": "- name: `hkbBlenderGeneratorChild`\n - version: `2`\n - signature: `0xe2b384b0`\n - size: ` 48`(x86)/` 80`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "boneWeights": {
          "title": "C++ Info",
          "description": "- name: `boneWeights`(ctype: `struct hkbBoneWeightArray*`)\n - offset: ` 36`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "generator": {
          "title": "C++ Info",
          "description": "- name: `generator`(ctype: `struct hkbGenerator*`)\n - offset: ` 32`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `ALIGN_16`",
          "type": "string"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "weight": {
          "title": "C++ Info",
          "description": "- name: `weight`(ctype: `hkReal`)\n - offset: ` 40`(x86)/` 64`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "worldFromModelWeight": {
          "title": "C++ Info",
          "description": "- name: `worldFromModelWeight`(ctype: `hkReal`)\n - offset: ` 44`(x86)/` 68`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "generator",
        "boneWeights",
        "weight",
        "worldFromModelWeight"
      ]
    },
    "hkbBlenderGeneratorChildInternalState": {
      "title": "C++ Info",
      "description": "- name: `hkbBlenderGeneratorChildInternalState`\n - version: `0`\n - signature: `0xff7327c0`\n - size: `  2`(x86)/`  2`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "isActive": {
          "title": "C++ Info",
          "description": "- name: `isActive`(ctype: `hkBool`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "syncNextFrame": {
          "title": "C++ Info",
          "description": "- name: `syncNextFrame`(ctype: `hkBool`)\n - offset: `  1`(x86)/`  1`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        }
      },
      "required": [
        "isActive",
        "syncNextFrame"
      ]
    },
    "hkbBlenderGeneratorInternalState": {
      "title": "C++ Info",
      "description": "- name: `hkbBlenderGeneratorInternalState`\n - version: `0`\n - signature: `0x84717488`\n - size: ` 48`(x86)/` 64`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "beginIntervalIndex": {
          "title": "C++ Info",
          "description": "- name: `beginIntervalIndex`(ctype: `hkInt16`)\n - offset: ` 40`(x86)/` 56`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "int16"
        },
        "childrenInternalStates": {
          "title": "C++ Info",
          "description": "- name: `childrenInternalStates`(ctype: `hkArray<struct hkbBlenderGeneratorChildInternalState>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkbBlenderGeneratorChildInternalState"
          }
        },
        "doSubtractiveBlend": {
          "title": "C++ Info",
          "description": "- name: `doSubtractiveBlend`(ctype: `hkBool`)\n - offset: ` 45`(x86)/` 61`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "endIntervalIndex": {
          "title": "C++ Info",
          "description": "- name: `endIntervalIndex`(ctype: `hkInt16`)\n - offset: ` 42`(x86)/` 58`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "int16"
        },
        "endIntervalWeight": {
          "title": "C++ Info",
          "description": "- name: `endIntervalWeight`(ctype: `hkReal`)\n - offset: ` 32`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "initSync": {
          "title": "C++ Info",
          "description": "- name: `initSync`(ctype: `hkBool`)\n - offset: ` 44`(x86)/` 60`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "numActiveChildren": {
          "title": "C++ Info",
          "description": "- name: `numActiveChildren`(ctype: `hkInt32`)\n - offset: ` 36`(x86)/` 52`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "sortedChildren": {
          "title": "C++ Info",
          "description": "- name: `sortedChildren`(ctype: `hkArray<hkInt16>`)\n - offset: ` 20`(x86)/` 32`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int16"
          }
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "childrenInternalStates",
        "sortedChildren",
        "endIntervalWeight",
        "numActiveChildren",
        "beginIntervalIndex",
        "endIntervalIndex",
        "initSync",
        "doSubtractiveBlend"
      ]
    },
    "hkbBlendingTransitionEffect": {
      "title": "C++ Info",
      "description": "- name: `hkbBlendingTransitionEffect`\n - version: `1`\n - signature: `0xfd8584fe`\n - size: ` 88`(x86)/`144`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "applySelfTransition": {
          "title": "C++ Info",
          "description": "- name: `applySelfTransition`(ctype: `hkBool`)\n - offset: ` 84`(x86)/`136`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "blendCurve": {
          "title": "C++ Info",
          "description": "- name: `blendCurve`(ctype: `enum BlendCurve`)\n - offset: ` 55`(x86)/` 91`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/BlendCurve"
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "characterPoseAtBeginningOfTransition": {
          "title": "C++ Info",
          "description": "- name: `characterPoseAtBeginningOfTransition`(ctype: `hkArray<void>`)\n - offset: ` 64`(x86)/`112`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "cloneState": {
          "title": "C++ Info",
          "description": "- name: `cloneState`(ctype: `enum unknown`)\n - offset: ` 38`(x86)/` 66`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "defaultEventMode": {
          "title": "C++ Info",
          "description": "- name: `defaultEventMode`(ctype: `enum unknown`)\n - offset: ` 42`(x86)/` 74`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "duration": {
          "title": "C++ Info",
          "description": "- name: `duration`(ctype: `hkReal`)\n - offset: ` 44`(x86)/` 80`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "endMode": {
          "title": "C++ Info",
          "description": "- name: `endMode`(ctype: `enum EndMode`)\n - offset: ` 54`(x86)/` 90`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/EndMode"
        },
        "eventMode": {
          "title": "C++ Info",
          "description": "- name: `eventMode`(ctype: `enum EventMode`)\n - offset: ` 41`(x86)/` 73`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/EventMode"
        },
        "flags": {
          "title": "C++ Info",
          "description": "- name: `flags`(ctype: `flags FlagBits`)\n - offset: ` 52`(x86)/` 88`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "$ref": "#/$defs/FlagBits"
        },
        "fromGenerator": {
          "title": "C++ Info",
          "description": "- name: `fromGenerator`(ctype: `void*`)\n - offset: ` 56`(x86)/` 96`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkInt16`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "initializeCharacterPose": {
          "title": "C++ Info",
          "description": "- name: `initializeCharacterPose`(ctype: `hkBool`)\n - offset: ` 85`(x86)/`137`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "padNode": {
          "title": "C++ Info",
          "description": "- name: `padNode`(ctype: `hkBool[1]`)\n - offset: ` 39`(x86)/` 67`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 1,
          "minItems": 1
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "selfTransitionMode": {
          "title": "C++ Info",
          "description": "- name: `selfTransitionMode`(ctype: `enum SelfTransitionMode`)\n - offset: ` 40`(x86)/` 72`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/SelfTransitionMode"
        },
        "timeInTransition": {
          "title": "C++ Info",
          "description": "- name: `timeInTransition`(ctype: `hkReal`)\n - offset: ` 80`(x86)/`132`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "number",
          "format": "float"
        },
        "timeRemaining": {
          "title": "C++ Info",
          "description": "- name: `timeRemaining`(ctype: `hkReal`)\n - offset: ` 76`(x86)/`128`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "number",
          "format": "float"
        },
        "toGenerator": {
          "title": "C++ Info",
          "description": "- name: `toGenerator`(ctype: `void*`)\n - offset: ` 60`(x86)/`104`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "toGeneratorStartTimeFraction": {
          "title": "C++ Info",
          "description": "- name: `toGeneratorStartTimeFraction`(ctype: `hkReal`)\n - offset: ` 48`(x86)/` 84`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "userData",
        "id",
        "cloneState",
        "padNode",
        "selfTransitionMode",
        "eventMode",
        "defaultEventMode",
        "duration",
        "toGeneratorStartTimeFraction",
        "flags",
        "endMode",
        "blendCurve",
        "fromGenerator",
        "toGenerator",
        "characterPoseAtBeginningOfTransition",
        "timeRemaining",
        "timeInTransition",
        "applySelfTransition",
        "initializeCharacterPose"
      ]
    },
    "hkbBlendingTransitionEffectInternalState": {
      "title": "C++ Info",
      "description": "- name: `hkbBlendingTransitionEffectInternalState`\n - version: `0`\n - signature: `0xb18c70c2`\n - size: ` 32`(x86)/` 48`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "applySelfTransition": {
          "title": "C++ Info",
          "description": "- name: `applySelfTransition`(ctype: `hkBool`)\n - offset: ` 28`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "characterPoseAtBeginningOfTransition": {
          "title": "C++ Info",
          "description": "- name: `characterPoseAtBeginningOfTransition`(ctype: `hkArray<hkQsTransform>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/QsTransform"
          }
        },
        "initializeCharacterPose": {
          "title": "C++ Info",
          "description": "- name: `initializeCharacterPose`(ctype: `hkBool`)\n - offset: ` 29`(x86)/` 41`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "timeInTransition": {
          "title": "C++ Info",
          "description": "- name: `timeInTransition`(ctype: `hkReal`)\n - offset: ` 24`(x86)/` 36`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "timeRemaining": {
          "title": "C++ Info",
          "description": "- name: `timeRemaining`(ctype: `hkReal`)\n - offset: ` 20`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "characterPoseAtBeginningOfTransition",
        "timeRemaining",
        "timeInTransition",
        "applySelfTransition",
        "initializeCharacterPose"
      ]
    },
    "hkbBoneIndexArray": {
      "title": "C++ Info",
      "description": "- name: `hkbBoneIndexArray`\n - version: `0`\n - signature: `0xaa8619`\n - size: ` 40`(x86)/` 64`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "boneIndices": {
          "title": "C++ Info",
          "description": "- name: `boneIndices`(ctype: `hkArray<hkInt16>`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int16"
          }
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "boneIndices"
      ]
    },
    "hkbBoneWeightArray": {
      "title": "C++ Info",
      "description": "- name: `hkbBoneWeightArray`\n - version: `0`\n - signature: `0xcd902b77`\n - size: ` 40`(x86)/` 64`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "boneWeights": {
          "title": "C++ Info",
          "description": "- name: `boneWeights`(ctype: `hkArray<hkReal>`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "boneWeights"
      ]
    },
    "hkbBoolVariableSequencedData": {
      "title": "C++ Info",
      "description": "- name: `hkbBoolVariableSequencedData`\n - version: `0`\n - signature: `0x37416fce`\n - size: ` 24`(x86)/` 40`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "samples": {
          "title": "C++ Info",
          "description": "- name: `samples`(ctype: `hkArray<struct hkbBoolVariableSequencedDataSample>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkbBoolVariableSequencedDataSample"
          }
        },
        "variableIndex": {
          "title": "C++ Info",
          "description": "- name: `variableIndex`(ctype: `hkInt32`)\n - offset: ` 20`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "samples",
        "variableIndex"
      ]
    },
    "hkbBoolVariableSequencedDataSample": {
      "title": "C++ Info",
      "description": "- name: `hkbBoolVariableSequencedDataSample`\n - version: `0`\n - signature: `0x514763dc`\n - size: `  8`(x86)/`  8`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "time": {
          "title": "C++ Info",
          "description": "- name: `time`(ctype: `hkReal`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "value": {
          "title": "C++ Info",
          "description": "- name: `value`(ctype: `hkBool`)\n - offset: `  4`(x86)/`  4`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        }
      },
      "required": [
        "time",
        "value"
      ]
    },
    "hkbCameraShakeEventPayload": {
      "title": "C++ Info",
      "description": "- name: `hkbCameraShakeEventPayload`\n - version: `0`\n - signature: `0x64136982`\n - size: ` 16`(x86)/` 24`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "amplitude": {
          "title": "C++ Info",
          "description": "- name: `amplitude`(ctype: `hkReal`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "halfLife": {
          "title": "C++ Info",
          "description": "- name: `halfLife`(ctype: `hkReal`)\n - offset: ` 12`(x86)/` 20`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "amplitude",
        "halfLife"
      ]
    },
    "hkbCharacter": {
      "title": "C++ Info",
      "description": "- name: `hkbCharacter`\n - version: `2`\n - signature: `0x3088a5c5`\n - size: ` 88`(x86)/`160`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "animationBindingSet": {
          "title": "C++ Info",
          "description": "- name: `animationBindingSet`(ctype: `void*`)\n - offset: ` 56`(x86)/`104`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "behaviorGraph": {
          "title": "C++ Info",
          "description": "- name: `behaviorGraph`(ctype: `struct hkbBehaviorGraph*`)\n - offset: ` 48`(x86)/` 88`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "characterControllerDriver": {
          "title": "C++ Info",
          "description": "- name: `characterControllerDriver`(ctype: `void*`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "currentLod": {
          "title": "C++ Info",
          "description": "- name: `currentLod`(ctype: `hkInt16`)\n - offset: ` 20`(x86)/` 32`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "int16"
        },
        "deletePoseLocal": {
          "title": "C++ Info",
          "description": "- name: `deletePoseLocal`(ctype: `hkBool`)\n - offset: ` 85`(x86)/`157`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "deleteWorldFromModel": {
          "title": "C++ Info",
          "description": "- name: `deleteWorldFromModel`(ctype: `hkBool`)\n - offset: ` 84`(x86)/`156`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "eventQueue": {
          "title": "C++ Info",
          "description": "- name: `eventQueue`(ctype: `void*`)\n - offset: ` 68`(x86)/`128`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "footIkDriver": {
          "title": "C++ Info",
          "description": "- name: `footIkDriver`(ctype: `void*`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "handIkDriver": {
          "title": "C++ Info",
          "description": "- name: `handIkDriver`(ctype: `void*`)\n - offset: ` 40`(x86)/` 72`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "nearbyCharacters": {
          "title": "C++ Info",
          "description": "- name: `nearbyCharacters`(ctype: `hkArray<hkbCharacter*>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "numTracksInLod": {
          "title": "C++ Info",
          "description": "- name: `numTracksInLod`(ctype: `hkInt16`)\n - offset: ` 22`(x86)/` 34`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "poseLocal": {
          "title": "C++ Info",
          "description": "- name: `poseLocal`(ctype: `hkSimpleArray<void>`)\n - offset: ` 76`(x86)/`144`(x86_64)\n - type_size: `  8`(x86)/` 12`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "projectData": {
          "title": "C++ Info",
          "description": "- name: `projectData`(ctype: `struct hkbProjectData*`)\n - offset: ` 52`(x86)/` 96`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "ragdollDriver": {
          "title": "C++ Info",
          "description": "- name: `ragdollDriver`(ctype: `void*`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "raycastInterface": {
          "title": "C++ Info",
          "description": "- name: `raycastInterface`(ctype: `void*`)\n - offset: ` 60`(x86)/`112`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "setup": {
          "title": "C++ Info",
          "description": "- name: `setup`(ctype: `struct hkbCharacterSetup*`)\n - offset: ` 44`(x86)/` 80`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "world": {
          "title": "C++ Info",
          "description": "- name: `world`(ctype: `void*`)\n - offset: ` 64`(x86)/`120`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `NOT_OWNED|SERIALIZE_IGNORED`",
          "type": "string"
        },
        "worldFromModel": {
          "title": "C++ Info",
          "description": "- name: `worldFromModel`(ctype: `void*`)\n - offset: ` 72`(x86)/`136`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "nearbyCharacters",
        "currentLod",
        "numTracksInLod",
        "ragdollDriver",
        "characterControllerDriver",
        "footIkDriver",
        "handIkDriver",
        "setup",
        "behaviorGraph",
        "projectData",
        "animationBindingSet",
        "raycastInterface",
        "world",
        "eventQueue",
        "worldFromModel",
        "poseLocal",
        "deleteWorldFromModel",
        "deletePoseLocal"
      ]
    },
    "hkbCharacterAddedInfo": {
      "title": "C++ Info",
      "description": "- name: `hkbCharacterAddedInfo`\n - version: `0`\n - signature: `0x3544e182`\n - size: ` 96`(x86)/`128`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "characterId": {
          "title": "C++ Info",
          "description": "- name: `characterId`(ctype: `hkUint64`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  8`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "fullPathToProject": {
          "title": "C++ Info",
          "description": "- name: `fullPathToProject`(ctype: `hkStringPtr`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "instanceName": {
          "title": "C++ Info",
          "description": "- name: `instanceName`(ctype: `hkStringPtr`)\n - offset: ` 16`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "poseModelSpace": {
          "title": "C++ Info",
          "description": "- name: `poseModelSpace`(ctype: `hkArray<hkQsTransform>`)\n - offset: ` 80`(x86)/`112`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/QsTransform"
          }
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "skeleton": {
          "title": "C++ Info",
          "description": "- name: `skeleton`(ctype: `struct hkaSkeleton*`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "templateName": {
          "title": "C++ Info",
          "description": "- name: `templateName`(ctype: `hkStringPtr`)\n - offset: ` 20`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "worldFromModel": {
          "title": "C++ Info",
          "description": "- name: `worldFromModel`(ctype: `hkQsTransform`)\n - offset: ` 32`(x86)/` 64`(x86_64)\n - type_size: ` 48`(x86)/` 48`(x86_64)",
          "$ref": "#/$defs/QsTransform"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "characterId",
        "skeleton",
        "worldFromModel",
        "poseModelSpace"
      ]
    },
    "hkbCharacterControlCommand": {
      "title": "C++ Info",
      "description": "- name: `hkbCharacterControlCommand`\n - version: `1`\n - signature: `0x7a195d1d`\n - size: ` 24`(x86)/` 32`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "characterId": {
          "title": "C++ Info",
          "description": "- name: `characterId`(ctype: `hkUint64`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  8`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "command": {
          "title": "C++ Info",
          "description": "- name: `command`(ctype: `enum CharacterControlCommand`)\n - offset: ` 16`(x86)/` 24`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/CharacterControlCommand"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "padding": {
          "title": "C++ Info",
          "description": "- name: `padding`(ctype: `hkInt32`)\n - offset: ` 20`(x86)/` 28`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "characterId",
        "command",
        "padding"
      ]
    },
    "hkbCharacterControllerControlData": {
      "title": "C++ Info",
      "description": "- name: `hkbCharacterControllerControlData`\n - version: `0`\n - signature: `0x5b6c03d9`\n - size: ` 32`(x86)/` 32`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "desiredVelocity": {
          "title": "C++ Info",
          "description": "- name: `desiredVelocity`(ctype: `hkVector4`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "horizontalCatchUpGain": {
          "title": "C++ Info",
          "description": "- name: `horizontalCatchUpGain`(ctype: `hkReal`)\n - offset: ` 20`(x86)/` 20`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "maxHorizontalSeparation": {
          "title": "C++ Info",
          "description": "- name: `maxHorizontalSeparation`(ctype: `hkReal`)\n - offset: ` 28`(x86)/` 28`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "maxVerticalSeparation": {
          "title": "C++ Info",
          "description": "- name: `maxVerticalSeparation`(ctype: `hkReal`)\n - offset: ` 24`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "verticalGain": {
          "title": "C++ Info",
          "description": "- name: `verticalGain`(ctype: `hkReal`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        }
      },
      "required": [
        "desiredVelocity",
        "verticalGain",
        "horizontalCatchUpGain",
        "maxVerticalSeparation",
        "maxHorizontalSeparation"
      ]
    },
    "hkbCharacterControllerModifier": {
      "title": "C++ Info",
      "description": "- name: `hkbCharacterControllerModifier`\n - version: `0`\n - signature: `0xf675d6fb`\n - size: `144`(x86)/`176`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "applyGravity": {
          "title": "C++ Info",
          "description": "- name: `applyGravity`(ctype: `hkBool`)\n - offset: ` 99`(x86)/`131`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "cloneState": {
          "title": "C++ Info",
          "description": "- name: `cloneState`(ctype: `enum unknown`)\n - offset: ` 38`(x86)/` 66`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "controlData": {
          "title": "C++ Info",
          "description": "- name: `controlData`(ctype: `struct hkbCharacterControllerControlData`)\n - offset: ` 48`(x86)/` 80`(x86_64)\n - type_size: ` 32`(x86)/` 32`(x86_64)",
          "$ref": "#/$defs/hkbCharacterControllerControlData"
        },
        "enable": {
          "title": "C++ Info",
          "description": "- name: `enable`(ctype: `hkBool`)\n - offset: ` 40`(x86)/` 72`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "forceDownwardMomentum": {
          "title": "C++ Info",
          "description": "- name: `forceDownwardMomentum`(ctype: `hkBool`)\n - offset: ` 98`(x86)/`130`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "gravity": {
          "title": "C++ Info",
          "description": "- name: `gravity`(ctype: `hkVector4`)\n - offset: `112`(x86)/`144`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "$ref": "#/$defs/Vector4"
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkInt16`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "initialVelocity": {
          "title": "C++ Info",
          "description": "- name: `initialVelocity`(ctype: `hkVector4`)\n - offset: ` 80`(x86)/`112`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "initialVelocityCoordinates": {
          "title": "C++ Info",
          "description": "- name: `initialVelocityCoordinates`(ctype: `enum InitialVelocityCoordinates`)\n - offset: ` 96`(x86)/`128`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/InitialVelocityCoordinates"
        },
        "isInitialVelocityAdded": {
          "title": "C++ Info",
          "description": "- name: `isInitialVelocityAdded`(ctype: `hkBool`)\n - offset: `132`(x86)/`164`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "isTouchingGround": {
          "title": "C++ Info",
          "description": "- name: `isTouchingGround`(ctype: `hkBool`)\n - offset: `101`(x86)/`133`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "motionMode": {
          "title": "C++ Info",
          "description": "- name: `motionMode`(ctype: `enum MotionMode`)\n - offset: ` 97`(x86)/`129`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/MotionMode"
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "padModifier": {
          "title": "C++ Info",
          "description": "- name: `padModifier`(ctype: `hkBool[3]`)\n - offset: ` 41`(x86)/` 73`(x86_64)\n - type_size: `  3`(x86)/`  3`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 3,
          "minItems": 3
        },
        "padNode": {
          "title": "C++ Info",
          "description": "- name: `padNode`(ctype: `hkBool[1]`)\n - offset: ` 39`(x86)/` 67`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 1,
          "minItems": 1
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "setInitialVelocity": {
          "title": "C++ Info",
          "description": "- name: `setInitialVelocity`(ctype: `hkBool`)\n - offset: `100`(x86)/`132`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "timestep": {
          "title": "C++ Info",
          "description": "- name: `timestep`(ctype: `hkReal`)\n - offset: `128`(x86)/`160`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "number",
          "format": "float"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "userData",
        "id",
        "cloneState",
        "padNode",
        "enable",
        "padModifier",
        "controlData",
        "initialVelocity",
        "initialVelocityCoordinates",
        "motionMode",
        "forceDownwardMomentum",
        "applyGravity",
        "setInitialVelocity",
        "isTouchingGround",
        "gravity",
        "timestep",
        "isInitialVelocityAdded"
      ]
    },
    "hkbCharacterControllerModifierInternalState": {
      "title": "C++ Info",
      "description": "- name: `hkbCharacterControllerModifierInternalState`\n - version: `0`\n - signature: `0xf8dfec0d`\n - size: ` 48`(x86)/` 48`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "gravity": {
          "title": "C++ Info",
          "description": "- name: `gravity`(ctype: `hkVector4`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "isInitialVelocityAdded": {
          "title": "C++ Info",
          "description": "- name: `isInitialVelocityAdded`(ctype: `hkBool`)\n - offset: ` 36`(x86)/` 36`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "isTouchingGround": {
          "title": "C++ Info",
          "description": "- name: `isTouchingGround`(ctype: `hkBool`)\n - offset: ` 37`(x86)/` 37`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "timestep": {
          "title": "C++ Info",
          "description": "- name: `timestep`(ctype: `hkReal`)\n - offset: ` 32`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "gravity",
        "timestep",
        "isInitialVelocityAdded",
        "isTouchingGround"
      ]
    },
    "hkbCharacterData": {
      "title": "C++ Info",
      "description": "- name: `hkbCharacterData`\n - version: `7`\n - signature: `0x300d6808`\n - size: `144`(x86)/`176`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "characterControllerInfo": {
          "title": "C++ Info",
          "description": "- name: `characterControllerInfo`(ctype: `struct hkbCharacterDataCharacterControllerInfo`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 16`(x86)/` 24`(x86_64)",
          "$ref": "#/$defs/hkbCharacterDataCharacterControllerInfo"
        },
        "characterPropertyInfos": {
          "title": "C++ Info",
          "description": "- name: `characterPropertyInfos`(ctype: `hkArray<struct hkbVariableInfo>`)\n - offset: ` 80`(x86)/` 96`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkbVariableInfo"
          }
        },
        "characterPropertyValues": {
          "title": "C++ Info",
          "description": "- name: `characterPropertyValues`(ctype: `struct hkbVariableValueSet*`)\n - offset: `104`(x86)/`128`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "footIkDriverInfo": {
          "title": "C++ Info",
          "description": "- name: `footIkDriverInfo`(ctype: `struct hkbFootIkDriverInfo*`)\n - offset: `108`(x86)/`136`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "handIkDriverInfo": {
          "title": "C++ Info",
          "description": "- name: `handIkDriverInfo`(ctype: `struct hkbHandIkDriverInfo*`)\n - offset: `112`(x86)/`144`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "mirroredSkeletonInfo": {
          "title": "C++ Info",
          "description": "- name: `mirroredSkeletonInfo`(ctype: `struct hkbMirroredSkeletonInfo*`)\n - offset: `120`(x86)/`160`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "modelForwardMS": {
          "title": "C++ Info",
          "description": "- name: `modelForwardMS`(ctype: `hkVector4`)\n - offset: ` 48`(x86)/` 64`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "modelRightMS": {
          "title": "C++ Info",
          "description": "- name: `modelRightMS`(ctype: `hkVector4`)\n - offset: ` 64`(x86)/` 80`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "modelUpMS": {
          "title": "C++ Info",
          "description": "- name: `modelUpMS`(ctype: `hkVector4`)\n - offset: ` 32`(x86)/` 48`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "numBonesPerLod": {
          "title": "C++ Info",
          "description": "- name: `numBonesPerLod`(ctype: `hkArray<hkInt32>`)\n - offset: ` 92`(x86)/`112`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "numFloatSlots": {
          "title": "C++ Info",
          "description": "- name: `numFloatSlots`(ctype: `hkInt16`)\n - offset: `130`(x86)/`174`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "numHands": {
          "title": "C++ Info",
          "description": "- name: `numHands`(ctype: `hkInt16`)\n - offset: `128`(x86)/`172`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "scale": {
          "title": "C++ Info",
          "description": "- name: `scale`(ctype: `hkReal`)\n - offset: `124`(x86)/`168`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "stringData": {
          "title": "C++ Info",
          "description": "- name: `stringData`(ctype: `struct hkbCharacterStringData*`)\n - offset: `116`(x86)/`152`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "characterControllerInfo",
        "modelUpMS",
        "modelForwardMS",
        "modelRightMS",
        "characterPropertyInfos",
        "numBonesPerLod",
        "characterPropertyValues",
        "footIkDriverInfo",
        "handIkDriverInfo",
        "stringData",
        "mirroredSkeletonInfo",
        "scale",
        "numHands",
        "numFloatSlots"
      ]
    },
    "hkbCharacterDataCharacterControllerInfo": {
      "title": "C++ Info",
      "description": "- name: `hkbCharacterDataCharacterControllerInfo`\n - version: `0`\n - signature: `0xa0f415bf`\n - size: ` 16`(x86)/` 24`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "capsuleHeight": {
          "title": "C++ Info",
          "description": "- name: `capsuleHeight`(ctype: `hkReal`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "capsuleRadius": {
          "title": "C++ Info",
          "description": "- name: `capsuleRadius`(ctype: `hkReal`)\n - offset: `  4`(x86)/`  4`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "characterControllerCinfo": {
          "title": "C++ Info",
          "description": "- name: `characterControllerCinfo`(ctype: `struct hkpCharacterControllerCinfo*`)\n - offset: ` 12`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "collisionFilterInfo": {
          "title": "C++ Info",
          "description": "- name: `collisionFilterInfo`(ctype: `hkUint32`)\n - offset: `  8`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        }
      },
      "required": [
        "capsuleHeight",
        "capsuleRadius",
        "collisionFilterInfo",
        "characterControllerCinfo"
      ]
    },
    "hkbCharacterInfo": {
      "title": "C++ Info",
      "description": "- name: `hkbCharacterInfo`\n - version: `2`\n - signature: `0xd9709ff2`\n - size: ` 24`(x86)/` 32`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "characterId": {
          "title": "C++ Info",
          "description": "- name: `characterId`(ctype: `hkUint64`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  8`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "event": {
          "title": "C++ Info",
          "description": "- name: `event`(ctype: `enum Event`)\n - offset: ` 16`(x86)/` 24`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/Event"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "padding": {
          "title": "C++ Info",
          "description": "- name: `padding`(ctype: `hkInt32`)\n - offset: ` 20`(x86)/` 28`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "characterId",
        "event",
        "padding"
      ]
    },
    "hkbCharacterSetup": {
      "title": "C++ Info",
      "description": "- name: `hkbCharacterSetup`\n - version: `2`\n - signature: `0xe5a2a413`\n - size: ` 48`(x86)/` 88`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "animationBindingSet": {
          "title": "C++ Info",
          "description": "- name: `animationBindingSet`(ctype: `void*`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "animationSkeleton": {
          "title": "C++ Info",
          "description": "- name: `animationSkeleton`(ctype: `struct hkaSkeleton*`)\n - offset: ` 20`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "animationToRagdollSkeletonMapper": {
          "title": "C++ Info",
          "description": "- name: `animationToRagdollSkeletonMapper`(ctype: `struct hkaSkeletonMapper*`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "characterPropertyIdMap": {
          "title": "C++ Info",
          "description": "- name: `characterPropertyIdMap`(ctype: `void*`)\n - offset: ` 44`(x86)/` 80`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "data": {
          "title": "C++ Info",
          "description": "- name: `data`(ctype: `struct hkbCharacterData*`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "mirroredSkeleton": {
          "title": "C++ Info",
          "description": "- name: `mirroredSkeleton`(ctype: `void*`)\n - offset: ` 40`(x86)/` 72`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "ragdollToAnimationSkeletonMapper": {
          "title": "C++ Info",
          "description": "- name: `ragdollToAnimationSkeletonMapper`(ctype: `struct hkaSkeletonMapper*`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "retargetingSkeletonMappers": {
          "title": "C++ Info",
          "description": "- name: `retargetingSkeletonMappers`(ctype: `hkArray<hkaSkeletonMapper*>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "retargetingSkeletonMappers",
        "animationSkeleton",
        "ragdollToAnimationSkeletonMapper",
        "animationToRagdollSkeletonMapper",
        "animationBindingSet",
        "data",
        "mirroredSkeleton",
        "characterPropertyIdMap"
      ]
    },
    "hkbCharacterSkinInfo": {
      "title": "C++ Info",
      "description": "- name: `hkbCharacterSkinInfo`\n - version: `2`\n - signature: `0x180d900d`\n - size: ` 40`(x86)/` 56`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "characterId": {
          "title": "C++ Info",
          "description": "- name: `characterId`(ctype: `hkUint64`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  8`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "deformableSkins": {
          "title": "C++ Info",
          "description": "- name: `deformableSkins`(ctype: `hkArray<hkUint64>`)\n - offset: ` 16`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0
          }
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "rigidSkins": {
          "title": "C++ Info",
          "description": "- name: `rigidSkins`(ctype: `hkArray<hkUint64>`)\n - offset: ` 28`(x86)/` 40`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0
          }
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "characterId",
        "deformableSkins",
        "rigidSkins"
      ]
    },
    "hkbCharacterSteppedInfo": {
      "title": "C++ Info",
      "description": "- name: `hkbCharacterSteppedInfo`\n - version: `2`\n - signature: `0x2eda84f8`\n - size: `112`(x86)/`112`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "characterId": {
          "title": "C++ Info",
          "description": "- name: `characterId`(ctype: `hkUint64`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  8`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "deltaTime": {
          "title": "C++ Info",
          "description": "- name: `deltaTime`(ctype: `hkReal`)\n - offset: ` 16`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "poseModelSpace": {
          "title": "C++ Info",
          "description": "- name: `poseModelSpace`(ctype: `hkArray<hkQsTransform>`)\n - offset: ` 80`(x86)/` 80`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/QsTransform"
          }
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "rigidAttachmentTransforms": {
          "title": "C++ Info",
          "description": "- name: `rigidAttachmentTransforms`(ctype: `hkArray<hkQsTransform>`)\n - offset: ` 92`(x86)/` 96`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/QsTransform"
          }
        },
        "worldFromModel": {
          "title": "C++ Info",
          "description": "- name: `worldFromModel`(ctype: `hkQsTransform`)\n - offset: ` 32`(x86)/` 32`(x86_64)\n - type_size: ` 48`(x86)/` 48`(x86_64)",
          "$ref": "#/$defs/QsTransform"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "characterId",
        "deltaTime",
        "worldFromModel",
        "poseModelSpace",
        "rigidAttachmentTransforms"
      ]
    },
    "hkbCharacterStringData": {
      "title": "C++ Info",
      "description": "- name: `hkbCharacterStringData`\n - version: `5`\n - signature: `0x655b42bc`\n - size: `132`(x86)/`192`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "animationFilenames": {
          "title": "C++ Info",
          "description": "- name: `animationFilenames`(ctype: `hkArray<hkStringPtr>`)\n - offset: ` 44`(x86)/` 64`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "animationNames": {
          "title": "C++ Info",
          "description": "- name: `animationNames`(ctype: `hkArray<hkStringPtr>`)\n - offset: ` 32`(x86)/` 48`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "behaviorFilename": {
          "title": "C++ Info",
          "description": "- name: `behaviorFilename`(ctype: `hkStringPtr`)\n - offset: `128`(x86)/`184`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "characterPropertyNames": {
          "title": "C++ Info",
          "description": "- name: `characterPropertyNames`(ctype: `hkArray<hkStringPtr>`)\n - offset: ` 56`(x86)/` 80`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "deformableSkinNames": {
          "title": "C++ Info",
          "description": "- name: `deformableSkinNames`(ctype: `hkArray<hkStringPtr>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "lodNames": {
          "title": "C++ Info",
          "description": "- name: `lodNames`(ctype: `hkArray<hkStringPtr>`)\n - offset: ` 80`(x86)/`112`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "mirroredSyncPointSubstringsA": {
          "title": "C++ Info",
          "description": "- name: `mirroredSyncPointSubstringsA`(ctype: `hkArray<hkStringPtr>`)\n - offset: ` 92`(x86)/`128`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "mirroredSyncPointSubstringsB": {
          "title": "C++ Info",
          "description": "- name: `mirroredSyncPointSubstringsB`(ctype: `hkArray<hkStringPtr>`)\n - offset: `104`(x86)/`144`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: `116`(x86)/`160`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "ragdollName": {
          "title": "C++ Info",
          "description": "- name: `ragdollName`(ctype: `hkStringPtr`)\n - offset: `124`(x86)/`176`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "retargetingSkeletonMapperFilenames": {
          "title": "C++ Info",
          "description": "- name: `retargetingSkeletonMapperFilenames`(ctype: `hkArray<hkStringPtr>`)\n - offset: ` 68`(x86)/` 96`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "rigName": {
          "title": "C++ Info",
          "description": "- name: `rigName`(ctype: `hkStringPtr`)\n - offset: `120`(x86)/`168`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "rigidSkinNames": {
          "title": "C++ Info",
          "description": "- name: `rigidSkinNames`(ctype: `hkArray<hkStringPtr>`)\n - offset: ` 20`(x86)/` 32`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "deformableSkinNames",
        "rigidSkinNames",
        "animationNames",
        "animationFilenames",
        "characterPropertyNames",
        "retargetingSkeletonMapperFilenames",
        "lodNames",
        "mirroredSyncPointSubstringsA",
        "mirroredSyncPointSubstringsB"
      ]
    },
    "hkbClientCharacterState": {
      "title": "C++ Info",
      "description": "- name: `hkbClientCharacterState`\n - version: `1`\n - signature: `0xa2624c97`\n - size: `208`(x86)/`272`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "activeEventIds": {
          "title": "C++ Info",
          "description": "- name: `activeEventIds`(ctype: `hkArray<hkInt16>`)\n - offset: ` 56`(x86)/` 80`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int16"
          }
        },
        "activeVariableIds": {
          "title": "C++ Info",
          "description": "- name: `activeVariableIds`(ctype: `hkArray<hkInt16>`)\n - offset: ` 68`(x86)/` 96`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int16"
          }
        },
        "auxiliaryInfo": {
          "title": "C++ Info",
          "description": "- name: `auxiliaryInfo`(ctype: `hkArray<hkbAuxiliaryNodeInfo*>`)\n - offset: ` 44`(x86)/` 64`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "behaviorData": {
          "title": "C++ Info",
          "description": "- name: `behaviorData`(ctype: `struct hkbBehaviorGraphData*`)\n - offset: `100`(x86)/`144`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "behaviorInternalState": {
          "title": "C++ Info",
          "description": "- name: `behaviorInternalState`(ctype: `struct hkbBehaviorGraphInternalState*`)\n - offset: `104`(x86)/`152`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "characterId": {
          "title": "C++ Info",
          "description": "- name: `characterId`(ctype: `hkUint64`)\n - offset: ` 80`(x86)/`112`(x86_64)\n - type_size: `  8`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "deformableSkinIds": {
          "title": "C++ Info",
          "description": "- name: `deformableSkinIds`(ctype: `hkArray<hkUint64>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0
          }
        },
        "elapsedSimulationTime": {
          "title": "C++ Info",
          "description": "- name: `elapsedSimulationTime`(ctype: `hkReal`)\n - offset: `116`(x86)/`172`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "externalEventIds": {
          "title": "C++ Info",
          "description": "- name: `externalEventIds`(ctype: `hkArray<hkInt16>`)\n - offset: ` 32`(x86)/` 48`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int16"
          }
        },
        "fullPathToProject": {
          "title": "C++ Info",
          "description": "- name: `fullPathToProject`(ctype: `hkStringPtr`)\n - offset: ` 96`(x86)/`136`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "instanceName": {
          "title": "C++ Info",
          "description": "- name: `instanceName`(ctype: `hkStringPtr`)\n - offset: ` 88`(x86)/`120`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "nodeIdToInternalStateMap": {
          "title": "C++ Info",
          "description": "- name: `nodeIdToInternalStateMap`(ctype: `void*`)\n - offset: `108`(x86)/`160`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "poseModelSpace": {
          "title": "C++ Info",
          "description": "- name: `poseModelSpace`(ctype: `hkArray<hkQsTransform>`)\n - offset: `176`(x86)/`240`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/QsTransform"
          }
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "rigidAttachmentTransforms": {
          "title": "C++ Info",
          "description": "- name: `rigidAttachmentTransforms`(ctype: `hkArray<hkQsTransform>`)\n - offset: `188`(x86)/`256`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/QsTransform"
          }
        },
        "rigidSkinIds": {
          "title": "C++ Info",
          "description": "- name: `rigidSkinIds`(ctype: `hkArray<hkUint64>`)\n - offset: ` 20`(x86)/` 32`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0
          }
        },
        "skeleton": {
          "title": "C++ Info",
          "description": "- name: `skeleton`(ctype: `struct hkaSkeleton*`)\n - offset: `120`(x86)/`176`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "templateName": {
          "title": "C++ Info",
          "description": "- name: `templateName`(ctype: `hkStringPtr`)\n - offset: ` 92`(x86)/`128`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "visible": {
          "title": "C++ Info",
          "description": "- name: `visible`(ctype: `hkBool`)\n - offset: `112`(x86)/`168`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "worldFromModel": {
          "title": "C++ Info",
          "description": "- name: `worldFromModel`(ctype: `hkQsTransform`)\n - offset: `128`(x86)/`192`(x86_64)\n - type_size: ` 48`(x86)/` 48`(x86_64)",
          "$ref": "#/$defs/QsTransform"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "deformableSkinIds",
        "rigidSkinIds",
        "externalEventIds",
        "auxiliaryInfo",
        "activeEventIds",
        "activeVariableIds",
        "characterId",
        "behaviorData",
        "behaviorInternalState",
        "nodeIdToInternalStateMap",
        "visible",
        "elapsedSimulationTime",
        "skeleton",
        "worldFromModel",
        "poseModelSpace",
        "rigidAttachmentTransforms"
      ]
    },
    "hkbClipGenerator": {
      "title": "C++ Info",
      "description": "- name: `hkbClipGenerator`\n - version: `2`\n - signature: `0x333b85b9`\n - size: `208`(x86)/`272`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "animDatas": {
          "title": "C++ Info",
          "description": "- name: `animDatas`(ctype: `hkArray<void>`)\n - offset: ` 76`(x86)/`120`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "animationBindingIndex": {
          "title": "C++ Info",
          "description": "- name: `animationBindingIndex`(ctype: `hkInt16`)\n - offset: ` 72`(x86)/`112`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "int16"
        },
        "animationControl": {
          "title": "C++ Info",
          "description": "- name: `animationControl`(ctype: `void*`)\n - offset: ` 88`(x86)/`136`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "animationName": {
          "title": "C++ Info",
          "description": "- name: `animationName`(ctype: `hkStringPtr`)\n - offset: ` 40`(x86)/` 72`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "atEnd": {
          "title": "C++ Info",
          "description": "- name: `atEnd`(ctype: `hkBool`)\n - offset: `192`(x86)/`260`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "binding": {
          "title": "C++ Info",
          "description": "- name: `binding`(ctype: `void*`)\n - offset: `100`(x86)/`160`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "bufferSize": {
          "title": "C++ Info",
          "description": "- name: `bufferSize`(ctype: `hkInt32`)\n - offset: `184`(x86)/`252`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int32"
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "cloneState": {
          "title": "C++ Info",
          "description": "- name: `cloneState`(ctype: `enum unknown`)\n - offset: ` 38`(x86)/` 66`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "cropEndAmountLocalTime": {
          "title": "C++ Info",
          "description": "- name: `cropEndAmountLocalTime`(ctype: `hkReal`)\n - offset: ` 52`(x86)/` 92`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "cropStartAmountLocalTime": {
          "title": "C++ Info",
          "description": "- name: `cropStartAmountLocalTime`(ctype: `hkReal`)\n - offset: ` 48`(x86)/` 88`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "echoBufferSize": {
          "title": "C++ Info",
          "description": "- name: `echoBufferSize`(ctype: `hkInt32`)\n - offset: `188`(x86)/`256`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int32"
        },
        "echos": {
          "title": "C++ Info",
          "description": "- name: `echos`(ctype: `hkArray<void>`)\n - offset: `160`(x86)/`224`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "enforcedDuration": {
          "title": "C++ Info",
          "description": "- name: `enforcedDuration`(ctype: `hkReal`)\n - offset: ` 64`(x86)/`104`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "extractedMotion": {
          "title": "C++ Info",
          "description": "- name: `extractedMotion`(ctype: `hkQsTransform`)\n - offset: `112`(x86)/`176`(x86_64)\n - type_size: ` 48`(x86)/` 48`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "$ref": "#/$defs/QsTransform"
        },
        "flags": {
          "title": "C++ Info",
          "description": "- name: `flags`(ctype: `hkInt8`)\n - offset: ` 75`(x86)/`115`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "int8"
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkInt16`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "ignoreStartTime": {
          "title": "C++ Info",
          "description": "- name: `ignoreStartTime`(ctype: `hkBool`)\n - offset: `193`(x86)/`261`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "localTime": {
          "title": "C++ Info",
          "description": "- name: `localTime`(ctype: `hkReal`)\n - offset: `172`(x86)/`240`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "number",
          "format": "float"
        },
        "mapperData": {
          "title": "C++ Info",
          "description": "- name: `mapperData`(ctype: `void*`)\n - offset: ` 96`(x86)/`152`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "mirroredAnimation": {
          "title": "C++ Info",
          "description": "- name: `mirroredAnimation`(ctype: `void*`)\n - offset: `104`(x86)/`168`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "mode": {
          "title": "C++ Info",
          "description": "- name: `mode`(ctype: `enum PlaybackMode`)\n - offset: ` 74`(x86)/`114`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/PlaybackMode"
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "originalTriggers": {
          "title": "C++ Info",
          "description": "- name: `originalTriggers`(ctype: `void*`)\n - offset: ` 92`(x86)/`144`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "padNode": {
          "title": "C++ Info",
          "description": "- name: `padNode`(ctype: `hkBool[1]`)\n - offset: ` 39`(x86)/` 67`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 1,
          "minItems": 1
        },
        "pingPongBackward": {
          "title": "C++ Info",
          "description": "- name: `pingPongBackward`(ctype: `hkBool`)\n - offset: `194`(x86)/`262`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "playbackSpeed": {
          "title": "C++ Info",
          "description": "- name: `playbackSpeed`(ctype: `hkReal`)\n - offset: ` 60`(x86)/`100`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "previousUserControlledTimeFraction": {
          "title": "C++ Info",
          "description": "- name: `previousUserControlledTimeFraction`(ctype: `hkReal`)\n - offset: `180`(x86)/`248`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "number",
          "format": "float"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "startTime": {
          "title": "C++ Info",
          "description": "- name: `startTime`(ctype: `hkReal`)\n - offset: ` 56`(x86)/` 96`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "time": {
          "title": "C++ Info",
          "description": "- name: `time`(ctype: `hkReal`)\n - offset: `176`(x86)/`244`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "number",
          "format": "float"
        },
        "triggers": {
          "title": "C++ Info",
          "description": "- name: `triggers`(ctype: `struct hkbClipTriggerArray*`)\n - offset: ` 44`(x86)/` 80`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "userControlledTimeFraction": {
          "title": "C++ Info",
          "description": "- name: `userControlledTimeFraction`(ctype: `hkReal`)\n - offset: ` 68`(x86)/`108`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "userData",
        "id",
        "cloneState",
        "padNode",
        "triggers",
        "cropStartAmountLocalTime",
        "cropEndAmountLocalTime",
        "startTime",
        "playbackSpeed",
        "enforcedDuration",
        "userControlledTimeFraction",
        "animationBindingIndex",
        "mode",
        "flags",
        "animDatas",
        "animationControl",
        "originalTriggers",
        "mapperData",
        "binding",
        "mirroredAnimation",
        "extractedMotion",
        "echos",
        "localTime",
        "time",
        "previousUserControlledTimeFraction",
        "bufferSize",
        "echoBufferSize",
        "atEnd",
        "ignoreStartTime",
        "pingPongBackward"
      ]
    },
    "hkbClipGeneratorEcho": {
      "title": "C++ Info",
      "description": "- name: `hkbClipGeneratorEcho`\n - version: `0`\n - signature: `0x750edf40`\n - size: ` 16`(x86)/` 16`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "dwdt": {
          "title": "C++ Info",
          "description": "- name: `dwdt`(ctype: `hkReal`)\n - offset: `  8`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "offsetLocalTime": {
          "title": "C++ Info",
          "description": "- name: `offsetLocalTime`(ctype: `hkReal`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `ALIGN_16`",
          "type": "number",
          "format": "float"
        },
        "weight": {
          "title": "C++ Info",
          "description": "- name: `weight`(ctype: `hkReal`)\n - offset: `  4`(x86)/`  4`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        }
      },
      "required": [
        "offsetLocalTime",
        "weight",
        "dwdt"
      ]
    },
    "hkbClipGeneratorInternalState": {
      "title": "C++ Info",
      "description": "- name: `hkbClipGeneratorInternalState`\n - version: `0`\n - signature: `0x26ce5bf3`\n - size: `112`(x86)/`112`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "atEnd": {
          "title": "C++ Info",
          "description": "- name: `atEnd`(ctype: `hkBool`)\n - offset: ` 96`(x86)/`100`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "bufferSize": {
          "title": "C++ Info",
          "description": "- name: `bufferSize`(ctype: `hkInt32`)\n - offset: ` 88`(x86)/` 92`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "echoBufferSize": {
          "title": "C++ Info",
          "description": "- name: `echoBufferSize`(ctype: `hkInt32`)\n - offset: ` 92`(x86)/` 96`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "echos": {
          "title": "C++ Info",
          "description": "- name: `echos`(ctype: `hkArray<struct hkbClipGeneratorEcho>`)\n - offset: ` 64`(x86)/` 64`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkbClipGeneratorEcho"
          }
        },
        "extractedMotion": {
          "title": "C++ Info",
          "description": "- name: `extractedMotion`(ctype: `hkQsTransform`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: ` 48`(x86)/` 48`(x86_64)",
          "$ref": "#/$defs/QsTransform"
        },
        "ignoreStartTime": {
          "title": "C++ Info",
          "description": "- name: `ignoreStartTime`(ctype: `hkBool`)\n - offset: ` 97`(x86)/`101`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "localTime": {
          "title": "C++ Info",
          "description": "- name: `localTime`(ctype: `hkReal`)\n - offset: ` 76`(x86)/` 80`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "pingPongBackward": {
          "title": "C++ Info",
          "description": "- name: `pingPongBackward`(ctype: `hkBool`)\n - offset: ` 98`(x86)/`102`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "previousUserControlledTimeFraction": {
          "title": "C++ Info",
          "description": "- name: `previousUserControlledTimeFraction`(ctype: `hkReal`)\n - offset: ` 84`(x86)/` 88`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "time": {
          "title": "C++ Info",
          "description": "- name: `time`(ctype: `hkReal`)\n - offset: ` 80`(x86)/` 84`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "extractedMotion",
        "echos",
        "localTime",
        "time",
        "previousUserControlledTimeFraction",
        "bufferSize",
        "echoBufferSize",
        "atEnd",
        "ignoreStartTime",
        "pingPongBackward"
      ]
    },
    "hkbClipTrigger": {
      "title": "C++ Info",
      "description": "- name: `hkbClipTrigger`\n - version: `1`\n - signature: `0x7eb45cea`\n - size: ` 16`(x86)/` 32`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "acyclic": {
          "title": "C++ Info",
          "description": "- name: `acyclic`(ctype: `hkBool`)\n - offset: ` 13`(x86)/` 25`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "event": {
          "title": "C++ Info",
          "description": "- name: `event`(ctype: `struct hkbEventProperty`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  8`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/hkbEventProperty"
        },
        "isAnnotation": {
          "title": "C++ Info",
          "description": "- name: `isAnnotation`(ctype: `hkBool`)\n - offset: ` 14`(x86)/` 26`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "localTime": {
          "title": "C++ Info",
          "description": "- name: `localTime`(ctype: `hkReal`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "relativeToEndOfClip": {
          "title": "C++ Info",
          "description": "- name: `relativeToEndOfClip`(ctype: `hkBool`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        }
      },
      "required": [
        "localTime",
        "event",
        "relativeToEndOfClip",
        "acyclic",
        "isAnnotation"
      ]
    },
    "hkbClipTriggerArray": {
      "title": "C++ Info",
      "description": "- name: `hkbClipTriggerArray`\n - version: `0`\n - signature: `0x59c23a0f`\n - size: ` 20`(x86)/` 32`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "triggers": {
          "title": "C++ Info",
          "description": "- name: `triggers`(ctype: `hkArray<struct hkbClipTrigger>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkbClipTrigger"
          }
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "triggers"
      ]
    },
    "hkbCombineTransformsModifier": {
      "title": "C++ Info",
      "description": "- name: `hkbCombineTransformsModifier`\n - version: `0`\n - signature: `0xfd1f0b79`\n - size: `160`(x86)/`192`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "cloneState": {
          "title": "C++ Info",
          "description": "- name: `cloneState`(ctype: `enum unknown`)\n - offset: ` 38`(x86)/` 66`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "enable": {
          "title": "C++ Info",
          "description": "- name: `enable`(ctype: `hkBool`)\n - offset: ` 40`(x86)/` 72`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkInt16`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "invertLeftTransform": {
          "title": "C++ Info",
          "description": "- name: `invertLeftTransform`(ctype: `hkBool`)\n - offset: `144`(x86)/`176`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "invertResult": {
          "title": "C++ Info",
          "description": "- name: `invertResult`(ctype: `hkBool`)\n - offset: `146`(x86)/`178`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "invertRightTransform": {
          "title": "C++ Info",
          "description": "- name: `invertRightTransform`(ctype: `hkBool`)\n - offset: `145`(x86)/`177`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "leftRotation": {
          "title": "C++ Info",
          "description": "- name: `leftRotation`(ctype: `hkQuaternion`)\n - offset: ` 96`(x86)/`128`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Quaternion"
        },
        "leftTranslation": {
          "title": "C++ Info",
          "description": "- name: `leftTranslation`(ctype: `hkVector4`)\n - offset: ` 80`(x86)/`112`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "padModifier": {
          "title": "C++ Info",
          "description": "- name: `padModifier`(ctype: `hkBool[3]`)\n - offset: ` 41`(x86)/` 73`(x86_64)\n - type_size: `  3`(x86)/`  3`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 3,
          "minItems": 3
        },
        "padNode": {
          "title": "C++ Info",
          "description": "- name: `padNode`(ctype: `hkBool[1]`)\n - offset: ` 39`(x86)/` 67`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 1,
          "minItems": 1
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "rightRotation": {
          "title": "C++ Info",
          "description": "- name: `rightRotation`(ctype: `hkQuaternion`)\n - offset: `128`(x86)/`160`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Quaternion"
        },
        "rightTranslation": {
          "title": "C++ Info",
          "description": "- name: `rightTranslation`(ctype: `hkVector4`)\n - offset: `112`(x86)/`144`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "rotationOut": {
          "title": "C++ Info",
          "description": "- name: `rotationOut`(ctype: `hkQuaternion`)\n - offset: ` 64`(x86)/` 96`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Quaternion"
        },
        "translationOut": {
          "title": "C++ Info",
          "description": "- name: `translationOut`(ctype: `hkVector4`)\n - offset: ` 48`(x86)/` 80`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "userData",
        "id",
        "cloneState",
        "padNode",
        "enable",
        "padModifier",
        "translationOut",
        "rotationOut",
        "leftTranslation",
        "leftRotation",
        "rightTranslation",
        "rightRotation",
        "invertLeftTransform",
        "invertRightTransform",
        "invertResult"
      ]
    },
    "hkbCombineTransformsModifierInternalState": {
      "title": "C++ Info",
      "description": "- name: `hkbCombineTransformsModifierInternalState`\n - version: `0`\n - signature: `0xa92ed39f`\n - size: ` 48`(x86)/` 48`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "rotationOut": {
          "title": "C++ Info",
          "description": "- name: `rotationOut`(ctype: `hkQuaternion`)\n - offset: ` 32`(x86)/` 32`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Quaternion"
        },
        "translationOut": {
          "title": "C++ Info",
          "description": "- name: `translationOut`(ctype: `hkVector4`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "translationOut",
        "rotationOut"
      ]
    },
    "hkbCompiledExpressionSet": {
      "title": "C++ Info",
      "description": "- name: `hkbCompiledExpressionSet`\n - version: `1`\n - signature: `0x3a7d76cc`\n - size: ` 36`(x86)/` 56`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "expressionToRpnIndex": {
          "title": "C++ Info",
          "description": "- name: `expressionToRpnIndex`(ctype: `hkArray<hkInt32>`)\n - offset: ` 20`(x86)/` 32`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "numExpressions": {
          "title": "C++ Info",
          "description": "- name: `numExpressions`(ctype: `hkInt8`)\n - offset: ` 32`(x86)/` 48`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "int8"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "rpn": {
          "title": "C++ Info",
          "description": "- name: `rpn`(ctype: `hkArray<struct hkbCompiledExpressionSetToken>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkbCompiledExpressionSetToken"
          }
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "rpn",
        "expressionToRpnIndex",
        "numExpressions"
      ]
    },
    "hkbCompiledExpressionSetToken": {
      "title": "C++ Info",
      "description": "- name: `hkbCompiledExpressionSetToken`\n - version: `0`\n - signature: `0xc6aaccc8`\n - size: `  8`(x86)/`  8`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum TokenType`)\n - offset: `  4`(x86)/`  4`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/TokenType"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "data": {
          "title": "C++ Info",
          "description": "- name: `data`(ctype: `hkReal`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "operator": {
          "title": "C++ Info",
          "description": "- name: `operator`(ctype: `enum Operator`)\n - offset: `  5`(x86)/`  5`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/Operator"
        }
      },
      "required": [
        "data",
        "type",
        "operator"
      ]
    },
    "hkbComputeDirectionModifier": {
      "title": "C++ Info",
      "description": "- name: `hkbComputeDirectionModifier`\n - version: `0`\n - signature: `0xdf358bd3`\n - size: `112`(x86)/`144`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "cloneState": {
          "title": "C++ Info",
          "description": "- name: `cloneState`(ctype: `enum unknown`)\n - offset: ` 38`(x86)/` 66`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "computeOnlyOnce": {
          "title": "C++ Info",
          "description": "- name: `computeOnlyOnce`(ctype: `hkBool`)\n - offset: ` 96`(x86)/`128`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "computedOutput": {
          "title": "C++ Info",
          "description": "- name: `computedOutput`(ctype: `hkBool`)\n - offset: ` 97`(x86)/`129`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "enable": {
          "title": "C++ Info",
          "description": "- name: `enable`(ctype: `hkBool`)\n - offset: ` 40`(x86)/` 72`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "groundAngleOut": {
          "title": "C++ Info",
          "description": "- name: `groundAngleOut`(ctype: `hkReal`)\n - offset: ` 80`(x86)/`112`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkInt16`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "normalizePoint": {
          "title": "C++ Info",
          "description": "- name: `normalizePoint`(ctype: `hkBool`)\n - offset: ` 95`(x86)/`127`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "padModifier": {
          "title": "C++ Info",
          "description": "- name: `padModifier`(ctype: `hkBool[3]`)\n - offset: ` 41`(x86)/` 73`(x86_64)\n - type_size: `  3`(x86)/`  3`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 3,
          "minItems": 3
        },
        "padNode": {
          "title": "C++ Info",
          "description": "- name: `padNode`(ctype: `hkBool[1]`)\n - offset: ` 39`(x86)/` 67`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 1,
          "minItems": 1
        },
        "pointIn": {
          "title": "C++ Info",
          "description": "- name: `pointIn`(ctype: `hkVector4`)\n - offset: ` 48`(x86)/` 80`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "pointOut": {
          "title": "C++ Info",
          "description": "- name: `pointOut`(ctype: `hkVector4`)\n - offset: ` 64`(x86)/` 96`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "projectPoint": {
          "title": "C++ Info",
          "description": "- name: `projectPoint`(ctype: `hkBool`)\n - offset: ` 94`(x86)/`126`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "reverseGroundAngle": {
          "title": "C++ Info",
          "description": "- name: `reverseGroundAngle`(ctype: `hkBool`)\n - offset: ` 92`(x86)/`124`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "reverseUpAngle": {
          "title": "C++ Info",
          "description": "- name: `reverseUpAngle`(ctype: `hkBool`)\n - offset: ` 93`(x86)/`125`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "upAngleOut": {
          "title": "C++ Info",
          "description": "- name: `upAngleOut`(ctype: `hkReal`)\n - offset: ` 84`(x86)/`116`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "verticalOffset": {
          "title": "C++ Info",
          "description": "- name: `verticalOffset`(ctype: `hkReal`)\n - offset: ` 88`(x86)/`120`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "userData",
        "id",
        "cloneState",
        "padNode",
        "enable",
        "padModifier",
        "pointIn",
        "pointOut",
        "groundAngleOut",
        "upAngleOut",
        "verticalOffset",
        "reverseGroundAngle",
        "reverseUpAngle",
        "projectPoint",
        "normalizePoint",
        "computeOnlyOnce",
        "computedOutput"
      ]
    },
    "hkbComputeDirectionModifierInternalState": {
      "title": "C++ Info",
      "description": "- name: `hkbComputeDirectionModifierInternalState`\n - version: `0`\n - signature: `0x6ac054d7`\n - size: ` 48`(x86)/` 48`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "computedOutput": {
          "title": "C++ Info",
          "description": "- name: `computedOutput`(ctype: `hkBool`)\n - offset: ` 40`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "groundAngleOut": {
          "title": "C++ Info",
          "description": "- name: `groundAngleOut`(ctype: `hkReal`)\n - offset: ` 32`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "pointOut": {
          "title": "C++ Info",
          "description": "- name: `pointOut`(ctype: `hkVector4`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "upAngleOut": {
          "title": "C++ Info",
          "description": "- name: `upAngleOut`(ctype: `hkReal`)\n - offset: ` 36`(x86)/` 36`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "pointOut",
        "groundAngleOut",
        "upAngleOut",
        "computedOutput"
      ]
    },
    "hkbComputeRotationFromAxisAngleModifier": {
      "title": "C++ Info",
      "description": "- name: `hkbComputeRotationFromAxisAngleModifier`\n - version: `0`\n - signature: `0x9b3f6936`\n - size: ` 96`(x86)/`128`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "angleDegrees": {
          "title": "C++ Info",
          "description": "- name: `angleDegrees`(ctype: `hkReal`)\n - offset: ` 80`(x86)/`112`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "axis": {
          "title": "C++ Info",
          "description": "- name: `axis`(ctype: `hkVector4`)\n - offset: ` 64`(x86)/` 96`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "cloneState": {
          "title": "C++ Info",
          "description": "- name: `cloneState`(ctype: `enum unknown`)\n - offset: ` 38`(x86)/` 66`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "enable": {
          "title": "C++ Info",
          "description": "- name: `enable`(ctype: `hkBool`)\n - offset: ` 40`(x86)/` 72`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkInt16`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "padModifier": {
          "title": "C++ Info",
          "description": "- name: `padModifier`(ctype: `hkBool[3]`)\n - offset: ` 41`(x86)/` 73`(x86_64)\n - type_size: `  3`(x86)/`  3`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 3,
          "minItems": 3
        },
        "padNode": {
          "title": "C++ Info",
          "description": "- name: `padNode`(ctype: `hkBool[1]`)\n - offset: ` 39`(x86)/` 67`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 1,
          "minItems": 1
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "rotationOut": {
          "title": "C++ Info",
          "description": "- name: `rotationOut`(ctype: `hkQuaternion`)\n - offset: ` 48`(x86)/` 80`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Quaternion"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "userData",
        "id",
        "cloneState",
        "padNode",
        "enable",
        "padModifier",
        "rotationOut",
        "axis",
        "angleDegrees"
      ]
    },
    "hkbComputeRotationFromAxisAngleModifierInternalState": {
      "title": "C++ Info",
      "description": "- name: `hkbComputeRotationFromAxisAngleModifierInternalState`\n - version: `0`\n - signature: `0x71cd1eb0`\n - size: ` 32`(x86)/` 32`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "rotationOut": {
          "title": "C++ Info",
          "description": "- name: `rotationOut`(ctype: `hkQuaternion`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Quaternion"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "rotationOut"
      ]
    },
    "hkbComputeRotationToTargetModifier": {
      "title": "C++ Info",
      "description": "- name: `hkbComputeRotationToTargetModifier`\n - version: `0`\n - signature: `0x47665f1c`\n - size: `160`(x86)/`192`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "cloneState": {
          "title": "C++ Info",
          "description": "- name: `cloneState`(ctype: `enum unknown`)\n - offset: ` 38`(x86)/` 66`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "currentPosition": {
          "title": "C++ Info",
          "description": "- name: `currentPosition`(ctype: `hkVector4`)\n - offset: ` 80`(x86)/`112`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "currentRotation": {
          "title": "C++ Info",
          "description": "- name: `currentRotation`(ctype: `hkQuaternion`)\n - offset: ` 96`(x86)/`128`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Quaternion"
        },
        "enable": {
          "title": "C++ Info",
          "description": "- name: `enable`(ctype: `hkBool`)\n - offset: ` 40`(x86)/` 72`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkInt16`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "localAxisOfRotation": {
          "title": "C++ Info",
          "description": "- name: `localAxisOfRotation`(ctype: `hkVector4`)\n - offset: `112`(x86)/`144`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "localFacingDirection": {
          "title": "C++ Info",
          "description": "- name: `localFacingDirection`(ctype: `hkVector4`)\n - offset: `128`(x86)/`160`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "padModifier": {
          "title": "C++ Info",
          "description": "- name: `padModifier`(ctype: `hkBool[3]`)\n - offset: ` 41`(x86)/` 73`(x86_64)\n - type_size: `  3`(x86)/`  3`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 3,
          "minItems": 3
        },
        "padNode": {
          "title": "C++ Info",
          "description": "- name: `padNode`(ctype: `hkBool[1]`)\n - offset: ` 39`(x86)/` 67`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 1,
          "minItems": 1
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "resultIsDelta": {
          "title": "C++ Info",
          "description": "- name: `resultIsDelta`(ctype: `hkBool`)\n - offset: `144`(x86)/`176`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "rotationOut": {
          "title": "C++ Info",
          "description": "- name: `rotationOut`(ctype: `hkQuaternion`)\n - offset: ` 48`(x86)/` 80`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Quaternion"
        },
        "targetPosition": {
          "title": "C++ Info",
          "description": "- name: `targetPosition`(ctype: `hkVector4`)\n - offset: ` 64`(x86)/` 96`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "userData",
        "id",
        "cloneState",
        "padNode",
        "enable",
        "padModifier",
        "rotationOut",
        "targetPosition",
        "currentPosition",
        "currentRotation",
        "localAxisOfRotation",
        "localFacingDirection",
        "resultIsDelta"
      ]
    },
    "hkbComputeRotationToTargetModifierInternalState": {
      "title": "C++ Info",
      "description": "- name: `hkbComputeRotationToTargetModifierInternalState`\n - version: `0`\n - signature: `0x71cd1eb0`\n - size: ` 32`(x86)/` 32`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "rotationOut": {
          "title": "C++ Info",
          "description": "- name: `rotationOut`(ctype: `hkQuaternion`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Quaternion"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "rotationOut"
      ]
    },
    "hkbCondition": {
      "title": "C++ Info",
      "description": "- name: `hkbCondition`\n - version: `0`\n - signature: `0xda8c7d7d`\n - size: `  8`(x86)/` 16`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount"
      ]
    },
    "hkbContext": {
      "title": "C++ Info",
      "description": "- name: `hkbContext`\n - version: `1`\n - signature: `0xe0c4d4a7`\n - size: ` 40`(x86)/` 80`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "animationCache": {
          "title": "C++ Info",
          "description": "- name: `animationCache`(ctype: `void*`)\n - offset: ` 36`(x86)/` 72`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "attachmentManager": {
          "title": "C++ Info",
          "description": "- name: `attachmentManager`(ctype: `void*`)\n - offset: ` 32`(x86)/` 64`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "behavior": {
          "title": "C++ Info",
          "description": "- name: `behavior`(ctype: `void*`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "character": {
          "title": "C++ Info",
          "description": "- name: `character`(ctype: `void*`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "eventQueue": {
          "title": "C++ Info",
          "description": "- name: `eventQueue`(ctype: `void*`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "eventTriggeredTransition": {
          "title": "C++ Info",
          "description": "- name: `eventTriggeredTransition`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 48`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "generatorOutputListener": {
          "title": "C++ Info",
          "description": "- name: `generatorOutputListener`(ctype: `struct hkbGeneratorOutputListener*`)\n - offset: ` 20`(x86)/` 40`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "nodeToIndexMap": {
          "title": "C++ Info",
          "description": "- name: `nodeToIndexMap`(ctype: `void*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "sharedEventQueue": {
          "title": "C++ Info",
          "description": "- name: `sharedEventQueue`(ctype: `void*`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "world": {
          "title": "C++ Info",
          "description": "- name: `world`(ctype: `void*`)\n - offset: ` 28`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        }
      },
      "required": [
        "character",
        "behavior",
        "nodeToIndexMap",
        "eventQueue",
        "sharedEventQueue",
        "generatorOutputListener",
        "eventTriggeredTransition",
        "world",
        "attachmentManager",
        "animationCache"
      ]
    },
    "hkbDampingModifier": {
      "title": "C++ Info",
      "description": "- name: `hkbDampingModifier`\n - version: `1`\n - signature: `0x9a040f03`\n - size: `160`(x86)/`192`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "cloneState": {
          "title": "C++ Info",
          "description": "- name: `cloneState`(ctype: `enum unknown`)\n - offset: ` 38`(x86)/` 66`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "dampedValue": {
          "title": "C++ Info",
          "description": "- name: `dampedValue`(ctype: `hkReal`)\n - offset: ` 64`(x86)/`100`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "dampedVector": {
          "title": "C++ Info",
          "description": "- name: `dampedVector`(ctype: `hkVector4`)\n - offset: ` 96`(x86)/`128`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "enable": {
          "title": "C++ Info",
          "description": "- name: `enable`(ctype: `hkBool`)\n - offset: ` 40`(x86)/` 72`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "enableScalarDamping": {
          "title": "C++ Info",
          "description": "- name: `enableScalarDamping`(ctype: `hkBool`)\n - offset: ` 56`(x86)/` 92`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "enableVectorDamping": {
          "title": "C++ Info",
          "description": "- name: `enableVectorDamping`(ctype: `hkBool`)\n - offset: ` 57`(x86)/` 93`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "errorSum": {
          "title": "C++ Info",
          "description": "- name: `errorSum`(ctype: `hkReal`)\n - offset: `144`(x86)/`176`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkInt16`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "kD": {
          "title": "C++ Info",
          "description": "- name: `kD`(ctype: `hkReal`)\n - offset: ` 52`(x86)/` 88`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "kI": {
          "title": "C++ Info",
          "description": "- name: `kI`(ctype: `hkReal`)\n - offset: ` 48`(x86)/` 84`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "kP": {
          "title": "C++ Info",
          "description": "- name: `kP`(ctype: `hkReal`)\n - offset: ` 44`(x86)/` 80`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "padModifier": {
          "title": "C++ Info",
          "description": "- name: `padModifier`(ctype: `hkBool[3]`)\n - offset: ` 41`(x86)/` 73`(x86_64)\n - type_size: `  3`(x86)/`  3`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 3,
          "minItems": 3
        },
        "padNode": {
          "title": "C++ Info",
          "description": "- name: `padNode`(ctype: `hkBool[1]`)\n - offset: ` 39`(x86)/` 67`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 1,
          "minItems": 1
        },
        "previousError": {
          "title": "C++ Info",
          "description": "- name: `previousError`(ctype: `hkReal`)\n - offset: `148`(x86)/`180`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "rawValue": {
          "title": "C++ Info",
          "description": "- name: `rawValue`(ctype: `hkReal`)\n - offset: ` 60`(x86)/` 96`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "rawVector": {
          "title": "C++ Info",
          "description": "- name: `rawVector`(ctype: `hkVector4`)\n - offset: ` 80`(x86)/`112`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "vecErrorSum": {
          "title": "C++ Info",
          "description": "- name: `vecErrorSum`(ctype: `hkVector4`)\n - offset: `112`(x86)/`144`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "vecPreviousError": {
          "title": "C++ Info",
          "description": "- name: `vecPreviousError`(ctype: `hkVector4`)\n - offset: `128`(x86)/`160`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "userData",
        "id",
        "cloneState",
        "padNode",
        "enable",
        "padModifier",
        "kP",
        "kI",
        "kD",
        "enableScalarDamping",
        "enableVectorDamping",
        "rawValue",
        "dampedValue",
        "rawVector",
        "dampedVector",
        "vecErrorSum",
        "vecPreviousError",
        "errorSum",
        "previousError"
      ]
    },
    "hkbDampingModifierInternalState": {
      "title": "C++ Info",
      "description": "- name: `hkbDampingModifierInternalState`\n - version: `0`\n - signature: `0x508d3b36`\n - size: ` 80`(x86)/` 80`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "dampedValue": {
          "title": "C++ Info",
          "description": "- name: `dampedValue`(ctype: `hkReal`)\n - offset: ` 64`(x86)/` 64`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "dampedVector": {
          "title": "C++ Info",
          "description": "- name: `dampedVector`(ctype: `hkVector4`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "errorSum": {
          "title": "C++ Info",
          "description": "- name: `errorSum`(ctype: `hkReal`)\n - offset: ` 68`(x86)/` 68`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "previousError": {
          "title": "C++ Info",
          "description": "- name: `previousError`(ctype: `hkReal`)\n - offset: ` 72`(x86)/` 72`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "vecErrorSum": {
          "title": "C++ Info",
          "description": "- name: `vecErrorSum`(ctype: `hkVector4`)\n - offset: ` 32`(x86)/` 32`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "vecPreviousError": {
          "title": "C++ Info",
          "description": "- name: `vecPreviousError`(ctype: `hkVector4`)\n - offset: ` 48`(x86)/` 48`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "dampedVector",
        "vecErrorSum",
        "vecPreviousError",
        "dampedValue",
        "errorSum",
        "previousError"
      ]
    },
    "hkbDefaultMessageLog": {
      "title": "C++ Info",
      "description": "- name: `hkbDefaultMessageLog`\n - version: `0`\n - signature: `0x7bd5c66f`\n - size: `  1`(x86)/`  1`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        }
      }
    },
    "hkbDelayedModifier": {
      "title": "C++ Info",
      "description": "- name: `hkbDelayedModifier`\n - version: `0`\n - signature: `0x8e101a7a`\n - size: ` 64`(x86)/`104`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "cloneState": {
          "title": "C++ Info",
          "description": "- name: `cloneState`(ctype: `enum unknown`)\n - offset: ` 38`(x86)/` 66`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "delaySeconds": {
          "title": "C++ Info",
          "description": "- name: `delaySeconds`(ctype: `hkReal`)\n - offset: ` 48`(x86)/` 88`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "durationSeconds": {
          "title": "C++ Info",
          "description": "- name: `durationSeconds`(ctype: `hkReal`)\n - offset: ` 52`(x86)/` 92`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "enable": {
          "title": "C++ Info",
          "description": "- name: `enable`(ctype: `hkBool`)\n - offset: ` 40`(x86)/` 72`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkInt16`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "isActive": {
          "title": "C++ Info",
          "description": "- name: `isActive`(ctype: `hkBool`)\n - offset: ` 60`(x86)/`100`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "modifier": {
          "title": "C++ Info",
          "description": "- name: `modifier`(ctype: `struct hkbModifier*`)\n - offset: ` 44`(x86)/` 80`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "padModifier": {
          "title": "C++ Info",
          "description": "- name: `padModifier`(ctype: `hkBool[3]`)\n - offset: ` 41`(x86)/` 73`(x86_64)\n - type_size: `  3`(x86)/`  3`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 3,
          "minItems": 3
        },
        "padNode": {
          "title": "C++ Info",
          "description": "- name: `padNode`(ctype: `hkBool[1]`)\n - offset: ` 39`(x86)/` 67`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 1,
          "minItems": 1
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "secondsElapsed": {
          "title": "C++ Info",
          "description": "- name: `secondsElapsed`(ctype: `hkReal`)\n - offset: ` 56`(x86)/` 96`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "number",
          "format": "float"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "userData",
        "id",
        "cloneState",
        "padNode",
        "enable",
        "padModifier",
        "modifier",
        "delaySeconds",
        "durationSeconds",
        "secondsElapsed",
        "isActive"
      ]
    },
    "hkbDelayedModifierInternalState": {
      "title": "C++ Info",
      "description": "- name: `hkbDelayedModifierInternalState`\n - version: `0`\n - signature: `0x85fb0b80`\n - size: ` 16`(x86)/` 24`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "isActive": {
          "title": "C++ Info",
          "description": "- name: `isActive`(ctype: `hkBool`)\n - offset: ` 12`(x86)/` 20`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "secondsElapsed": {
          "title": "C++ Info",
          "description": "- name: `secondsElapsed`(ctype: `hkReal`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "secondsElapsed",
        "isActive"
      ]
    },
    "hkbDetectCloseToGroundModifier": {
      "title": "C++ Info",
      "description": "- name: `hkbDetectCloseToGroundModifier`\n - version: `2`\n - signature: `0x981687b2`\n - size: ` 72`(x86)/`120`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "animBoneIndex": {
          "title": "C++ Info",
          "description": "- name: `animBoneIndex`(ctype: `hkInt16`)\n - offset: ` 66`(x86)/`110`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "int16"
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "boneIndex": {
          "title": "C++ Info",
          "description": "- name: `boneIndex`(ctype: `hkInt16`)\n - offset: ` 64`(x86)/`108`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "int16"
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "cloneState": {
          "title": "C++ Info",
          "description": "- name: `cloneState`(ctype: `enum unknown`)\n - offset: ` 38`(x86)/` 66`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "closeToGroundEvent": {
          "title": "C++ Info",
          "description": "- name: `closeToGroundEvent`(ctype: `struct hkbEventProperty`)\n - offset: ` 44`(x86)/` 80`(x86_64)\n - type_size: `  8`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/hkbEventProperty"
        },
        "closeToGroundHeight": {
          "title": "C++ Info",
          "description": "- name: `closeToGroundHeight`(ctype: `hkReal`)\n - offset: ` 52`(x86)/` 96`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "collisionFilterInfo": {
          "title": "C++ Info",
          "description": "- name: `collisionFilterInfo`(ctype: `hkUint32`)\n - offset: ` 60`(x86)/`104`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "enable": {
          "title": "C++ Info",
          "description": "- name: `enable`(ctype: `hkBool`)\n - offset: ` 40`(x86)/` 72`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkInt16`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "isCloseToGround": {
          "title": "C++ Info",
          "description": "- name: `isCloseToGround`(ctype: `hkBool`)\n - offset: ` 68`(x86)/`112`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "padModifier": {
          "title": "C++ Info",
          "description": "- name: `padModifier`(ctype: `hkBool[3]`)\n - offset: ` 41`(x86)/` 73`(x86_64)\n - type_size: `  3`(x86)/`  3`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 3,
          "minItems": 3
        },
        "padNode": {
          "title": "C++ Info",
          "description": "- name: `padNode`(ctype: `hkBool[1]`)\n - offset: ` 39`(x86)/` 67`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 1,
          "minItems": 1
        },
        "raycastDistanceDown": {
          "title": "C++ Info",
          "description": "- name: `raycastDistanceDown`(ctype: `hkReal`)\n - offset: ` 56`(x86)/`100`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "userData",
        "id",
        "cloneState",
        "padNode",
        "enable",
        "padModifier",
        "closeToGroundEvent",
        "closeToGroundHeight",
        "raycastDistanceDown",
        "collisionFilterInfo",
        "boneIndex",
        "animBoneIndex",
        "isCloseToGround"
      ]
    },
    "hkbDetectCloseToGroundModifierInternalState": {
      "title": "C++ Info",
      "description": "- name: `hkbDetectCloseToGroundModifierInternalState`\n - version: `0`\n - signature: `0x7b32d942`\n - size: ` 12`(x86)/` 24`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "isCloseToGround": {
          "title": "C++ Info",
          "description": "- name: `isCloseToGround`(ctype: `hkBool`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "isCloseToGround"
      ]
    },
    "hkbEvaluateExpressionModifier": {
      "title": "C++ Info",
      "description": "- name: `hkbEvaluateExpressionModifier`\n - version: `1`\n - signature: `0xf900f6be`\n - size: ` 64`(x86)/`112`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "cloneState": {
          "title": "C++ Info",
          "description": "- name: `cloneState`(ctype: `enum unknown`)\n - offset: ` 38`(x86)/` 66`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "compiledExpressionSet": {
          "title": "C++ Info",
          "description": "- name: `compiledExpressionSet`(ctype: `void*`)\n - offset: ` 48`(x86)/` 88`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "enable": {
          "title": "C++ Info",
          "description": "- name: `enable`(ctype: `hkBool`)\n - offset: ` 40`(x86)/` 72`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "expressions": {
          "title": "C++ Info",
          "description": "- name: `expressions`(ctype: `struct hkbExpressionDataArray*`)\n - offset: ` 44`(x86)/` 80`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkInt16`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "internalExpressionsData": {
          "title": "C++ Info",
          "description": "- name: `internalExpressionsData`(ctype: `hkArray<void>`)\n - offset: ` 52`(x86)/` 96`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "padModifier": {
          "title": "C++ Info",
          "description": "- name: `padModifier`(ctype: `hkBool[3]`)\n - offset: ` 41`(x86)/` 73`(x86_64)\n - type_size: `  3`(x86)/`  3`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 3,
          "minItems": 3
        },
        "padNode": {
          "title": "C++ Info",
          "description": "- name: `padNode`(ctype: `hkBool[1]`)\n - offset: ` 39`(x86)/` 67`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 1,
          "minItems": 1
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "userData",
        "id",
        "cloneState",
        "padNode",
        "enable",
        "padModifier",
        "expressions",
        "compiledExpressionSet",
        "internalExpressionsData"
      ]
    },
    "hkbEvaluateExpressionModifierInternalExpressionData": {
      "title": "C++ Info",
      "description": "- name: `hkbEvaluateExpressionModifierInternalExpressionData`\n - version: `0`\n - signature: `0xb8686f6b`\n - size: `  2`(x86)/`  2`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "raisedEvent": {
          "title": "C++ Info",
          "description": "- name: `raisedEvent`(ctype: `hkBool`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "wasTrueInPreviousFrame": {
          "title": "C++ Info",
          "description": "- name: `wasTrueInPreviousFrame`(ctype: `hkBool`)\n - offset: `  1`(x86)/`  1`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        }
      },
      "required": [
        "raisedEvent",
        "wasTrueInPreviousFrame"
      ]
    },
    "hkbEvaluateExpressionModifierInternalState": {
      "title": "C++ Info",
      "description": "- name: `hkbEvaluateExpressionModifierInternalState`\n - version: `0`\n - signature: `0xb414d58e`\n - size: ` 20`(x86)/` 32`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "internalExpressionsData": {
          "title": "C++ Info",
          "description": "- name: `internalExpressionsData`(ctype: `hkArray<struct hkbEvaluateExpressionModifierInternalExpressionData>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkbEvaluateExpressionModifierInternalExpressionData"
          }
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "internalExpressionsData"
      ]
    },
    "hkbEvaluateHandleModifier": {
      "title": "C++ Info",
      "description": "- name: `hkbEvaluateHandleModifier`\n - version: `2`\n - signature: `0x79757102`\n - size: `176`(x86)/`240`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "cloneState": {
          "title": "C++ Info",
          "description": "- name: `cloneState`(ctype: `enum unknown`)\n - offset: ` 38`(x86)/` 66`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "enable": {
          "title": "C++ Info",
          "description": "- name: `enable`(ctype: `hkBool`)\n - offset: ` 40`(x86)/` 72`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "extrapolationTimeStep": {
          "title": "C++ Info",
          "description": "- name: `extrapolationTimeStep`(ctype: `hkReal`)\n - offset: ` 84`(x86)/`132`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "handle": {
          "title": "C++ Info",
          "description": "- name: `handle`(ctype: `struct hkbHandle*`)\n - offset: ` 44`(x86)/` 80`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "handleChangeMode": {
          "title": "C++ Info",
          "description": "- name: `handleChangeMode`(ctype: `enum HandleChangeMode`)\n - offset: ` 92`(x86)/`140`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/HandleChangeMode"
        },
        "handleChangeSpeed": {
          "title": "C++ Info",
          "description": "- name: `handleChangeSpeed`(ctype: `hkReal`)\n - offset: ` 88`(x86)/`136`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "handlePositionOut": {
          "title": "C++ Info",
          "description": "- name: `handlePositionOut`(ctype: `hkVector4`)\n - offset: ` 48`(x86)/` 96`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "handleRotationOut": {
          "title": "C++ Info",
          "description": "- name: `handleRotationOut`(ctype: `hkQuaternion`)\n - offset: ` 64`(x86)/`112`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Quaternion"
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkInt16`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "isValidOut": {
          "title": "C++ Info",
          "description": "- name: `isValidOut`(ctype: `hkBool`)\n - offset: ` 80`(x86)/`128`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "oldHandle": {
          "title": "C++ Info",
          "description": "- name: `oldHandle`(ctype: `struct hkbHandle`)\n - offset: ` 96`(x86)/`144`(x86_64)\n - type_size: ` 24`(x86)/` 48`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "$ref": "#/$defs/hkbHandle"
        },
        "oldHandlePosition": {
          "title": "C++ Info",
          "description": "- name: `oldHandlePosition`(ctype: `hkVector4`)\n - offset: `128`(x86)/`192`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "$ref": "#/$defs/Vector4"
        },
        "oldHandleRotation": {
          "title": "C++ Info",
          "description": "- name: `oldHandleRotation`(ctype: `hkQuaternion`)\n - offset: `144`(x86)/`208`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "$ref": "#/$defs/Quaternion"
        },
        "padModifier": {
          "title": "C++ Info",
          "description": "- name: `padModifier`(ctype: `hkBool[3]`)\n - offset: ` 41`(x86)/` 73`(x86_64)\n - type_size: `  3`(x86)/`  3`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 3,
          "minItems": 3
        },
        "padNode": {
          "title": "C++ Info",
          "description": "- name: `padNode`(ctype: `hkBool[1]`)\n - offset: ` 39`(x86)/` 67`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 1,
          "minItems": 1
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "smoothlyChangingHandles": {
          "title": "C++ Info",
          "description": "- name: `smoothlyChangingHandles`(ctype: `hkBool`)\n - offset: `164`(x86)/`228`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "timeSinceLastModify": {
          "title": "C++ Info",
          "description": "- name: `timeSinceLastModify`(ctype: `hkReal`)\n - offset: `160`(x86)/`224`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "number",
          "format": "float"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "userData",
        "id",
        "cloneState",
        "padNode",
        "enable",
        "padModifier",
        "handle",
        "handlePositionOut",
        "handleRotationOut",
        "isValidOut",
        "extrapolationTimeStep",
        "handleChangeSpeed",
        "handleChangeMode",
        "oldHandle",
        "oldHandlePosition",
        "oldHandleRotation",
        "timeSinceLastModify",
        "smoothlyChangingHandles"
      ]
    },
    "hkbEvent": {
      "title": "C++ Info",
      "description": "- name: `hkbEvent`\n - version: `1`\n - signature: `0x3e0fd810`\n - size: ` 12`(x86)/` 24`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkInt32`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "payload": {
          "title": "C++ Info",
          "description": "- name: `payload`(ctype: `struct hkbEventPayload*`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "sender": {
          "title": "C++ Info",
          "description": "- name: `sender`(ctype: `void*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        }
      },
      "required": [
        "id",
        "payload",
        "sender"
      ]
    },
    "hkbEventBase": {
      "title": "C++ Info",
      "description": "- name: `hkbEventBase`\n - version: `0`\n - signature: `0x76bddb31`\n - size: `  8`(x86)/` 16`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkInt32`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "payload": {
          "title": "C++ Info",
          "description": "- name: `payload`(ctype: `struct hkbEventPayload*`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "id",
        "payload"
      ]
    },
    "hkbEventDrivenModifier": {
      "title": "C++ Info",
      "description": "- name: `hkbEventDrivenModifier`\n - version: `0`\n - signature: `0x7ed3f44e`\n - size: ` 60`(x86)/`104`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "activateEventId": {
          "title": "C++ Info",
          "description": "- name: `activateEventId`(ctype: `hkInt32`)\n - offset: ` 48`(x86)/` 88`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "activeByDefault": {
          "title": "C++ Info",
          "description": "- name: `activeByDefault`(ctype: `hkBool`)\n - offset: ` 56`(x86)/` 96`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "cloneState": {
          "title": "C++ Info",
          "description": "- name: `cloneState`(ctype: `enum unknown`)\n - offset: ` 38`(x86)/` 66`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "deactivateEventId": {
          "title": "C++ Info",
          "description": "- name: `deactivateEventId`(ctype: `hkInt32`)\n - offset: ` 52`(x86)/` 92`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "enable": {
          "title": "C++ Info",
          "description": "- name: `enable`(ctype: `hkBool`)\n - offset: ` 40`(x86)/` 72`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkInt16`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "isActive": {
          "title": "C++ Info",
          "description": "- name: `isActive`(ctype: `hkBool`)\n - offset: ` 57`(x86)/` 97`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "modifier": {
          "title": "C++ Info",
          "description": "- name: `modifier`(ctype: `struct hkbModifier*`)\n - offset: ` 44`(x86)/` 80`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "padModifier": {
          "title": "C++ Info",
          "description": "- name: `padModifier`(ctype: `hkBool[3]`)\n - offset: ` 41`(x86)/` 73`(x86_64)\n - type_size: `  3`(x86)/`  3`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 3,
          "minItems": 3
        },
        "padNode": {
          "title": "C++ Info",
          "description": "- name: `padNode`(ctype: `hkBool[1]`)\n - offset: ` 39`(x86)/` 67`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 1,
          "minItems": 1
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "userData",
        "id",
        "cloneState",
        "padNode",
        "enable",
        "padModifier",
        "modifier",
        "activateEventId",
        "deactivateEventId",
        "activeByDefault",
        "isActive"
      ]
    },
    "hkbEventDrivenModifierInternalState": {
      "title": "C++ Info",
      "description": "- name: `hkbEventDrivenModifierInternalState`\n - version: `0`\n - signature: `0xd14bf000`\n - size: ` 12`(x86)/` 24`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "isActive": {
          "title": "C++ Info",
          "description": "- name: `isActive`(ctype: `hkBool`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "isActive"
      ]
    },
    "hkbEventInfo": {
      "title": "C++ Info",
      "description": "- name: `hkbEventInfo`\n - version: `0`\n - signature: `0x5874eed4`\n - size: `  4`(x86)/`  4`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "flags": {
          "title": "C++ Info",
          "description": "- name: `flags`(ctype: `flags Flags`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "$ref": "#/$defs/Flags"
        }
      },
      "required": [
        "flags"
      ]
    },
    "hkbEventPayload": {
      "title": "C++ Info",
      "description": "- name: `hkbEventPayload`\n - version: `0`\n - signature: `0xda8c7d7d`\n - size: `  8`(x86)/` 16`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount"
      ]
    },
    "hkbEventPayloadList": {
      "title": "C++ Info",
      "description": "- name: `hkbEventPayloadList`\n - version: `0`\n - signature: `0x3d2dbd34`\n - size: ` 20`(x86)/` 32`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "payloads": {
          "title": "C++ Info",
          "description": "- name: `payloads`(ctype: `hkArray<hkbEventPayload*>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "payloads"
      ]
    },
    "hkbEventProperty": {
      "title": "C++ Info",
      "description": "- name: `hkbEventProperty`\n - version: `1`\n - signature: `0xdb38a15`\n - size: `  8`(x86)/` 16`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkInt32`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "payload": {
          "title": "C++ Info",
          "description": "- name: `payload`(ctype: `struct hkbEventPayload*`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "id",
        "payload"
      ]
    },
    "hkbEventRaisedInfo": {
      "title": "C++ Info",
      "description": "- name: `hkbEventRaisedInfo`\n - version: `2`\n - signature: `0xc02da3`\n - size: ` 32`(x86)/` 48`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "characterId": {
          "title": "C++ Info",
          "description": "- name: `characterId`(ctype: `hkUint64`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  8`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "eventName": {
          "title": "C++ Info",
          "description": "- name: `eventName`(ctype: `hkStringPtr`)\n - offset: ` 16`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "padding": {
          "title": "C++ Info",
          "description": "- name: `padding`(ctype: `hkInt32`)\n - offset: ` 28`(x86)/` 40`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "raisedBySdk": {
          "title": "C++ Info",
          "description": "- name: `raisedBySdk`(ctype: `hkBool`)\n - offset: ` 20`(x86)/` 32`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "senderId": {
          "title": "C++ Info",
          "description": "- name: `senderId`(ctype: `hkInt32`)\n - offset: ` 24`(x86)/` 36`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "characterId",
        "raisedBySdk",
        "senderId",
        "padding"
      ]
    },
    "hkbEventRangeData": {
      "title": "C++ Info",
      "description": "- name: `hkbEventRangeData`\n - version: `0`\n - signature: `0x6cb92c76`\n - size: ` 16`(x86)/` 32`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "event": {
          "title": "C++ Info",
          "description": "- name: `event`(ctype: `struct hkbEventProperty`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  8`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/hkbEventProperty"
        },
        "eventMode": {
          "title": "C++ Info",
          "description": "- name: `eventMode`(ctype: `enum EventRangeMode`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/EventRangeMode"
        },
        "upperBound": {
          "title": "C++ Info",
          "description": "- name: `upperBound`(ctype: `hkReal`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        }
      },
      "required": [
        "upperBound",
        "event",
        "eventMode"
      ]
    },
    "hkbEventRangeDataArray": {
      "title": "C++ Info",
      "description": "- name: `hkbEventRangeDataArray`\n - version: `0`\n - signature: `0x330a56ee`\n - size: ` 20`(x86)/` 32`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "eventData": {
          "title": "C++ Info",
          "description": "- name: `eventData`(ctype: `hkArray<struct hkbEventRangeData>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkbEventRangeData"
          }
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "eventData"
      ]
    },
    "hkbEventSequencedData": {
      "title": "C++ Info",
      "description": "- name: `hkbEventSequencedData`\n - version: `0`\n - signature: `0x76798eb8`\n - size: ` 20`(x86)/` 32`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "events": {
          "title": "C++ Info",
          "description": "- name: `events`(ctype: `hkArray<struct hkbEventSequencedDataSequencedEvent>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkbEventSequencedDataSequencedEvent"
          }
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "events"
      ]
    },
    "hkbEventSequencedDataSequencedEvent": {
      "title": "C++ Info",
      "description": "- name: `hkbEventSequencedDataSequencedEvent`\n - version: `0`\n - signature: `0x9139b821`\n - size: ` 16`(x86)/` 32`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "event": {
          "title": "C++ Info",
          "description": "- name: `event`(ctype: `struct hkbEvent`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: ` 12`(x86)/` 24`(x86_64)",
          "$ref": "#/$defs/hkbEvent"
        },
        "time": {
          "title": "C++ Info",
          "description": "- name: `time`(ctype: `hkReal`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        }
      },
      "required": [
        "event",
        "time"
      ]
    },
    "hkbEventsFromRangeModifier": {
      "title": "C++ Info",
      "description": "- name: `hkbEventsFromRangeModifier`\n - version: `0`\n - signature: `0xbc561b6e`\n - size: ` 68`(x86)/`112`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "cloneState": {
          "title": "C++ Info",
          "description": "- name: `cloneState`(ctype: `enum unknown`)\n - offset: ` 38`(x86)/` 66`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "enable": {
          "title": "C++ Info",
          "description": "- name: `enable`(ctype: `hkBool`)\n - offset: ` 40`(x86)/` 72`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "eventRanges": {
          "title": "C++ Info",
          "description": "- name: `eventRanges`(ctype: `struct hkbEventRangeDataArray*`)\n - offset: ` 52`(x86)/` 88`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkInt16`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "inputValue": {
          "title": "C++ Info",
          "description": "- name: `inputValue`(ctype: `hkReal`)\n - offset: ` 44`(x86)/` 80`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "lowerBound": {
          "title": "C++ Info",
          "description": "- name: `lowerBound`(ctype: `hkReal`)\n - offset: ` 48`(x86)/` 84`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "padModifier": {
          "title": "C++ Info",
          "description": "- name: `padModifier`(ctype: `hkBool[3]`)\n - offset: ` 41`(x86)/` 73`(x86_64)\n - type_size: `  3`(x86)/`  3`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 3,
          "minItems": 3
        },
        "padNode": {
          "title": "C++ Info",
          "description": "- name: `padNode`(ctype: `hkBool[1]`)\n - offset: ` 39`(x86)/` 67`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 1,
          "minItems": 1
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "wasActiveInPreviousFrame": {
          "title": "C++ Info",
          "description": "- name: `wasActiveInPreviousFrame`(ctype: `hkArray<void>`)\n - offset: ` 56`(x86)/` 96`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "userData",
        "id",
        "cloneState",
        "padNode",
        "enable",
        "padModifier",
        "inputValue",
        "lowerBound",
        "eventRanges",
        "wasActiveInPreviousFrame"
      ]
    },
    "hkbEventsFromRangeModifierInternalState": {
      "title": "C++ Info",
      "description": "- name: `hkbEventsFromRangeModifierInternalState`\n - version: `0`\n - signature: `0xcc47b48d`\n - size: ` 20`(x86)/` 32`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "wasActiveInPreviousFrame": {
          "title": "C++ Info",
          "description": "- name: `wasActiveInPreviousFrame`(ctype: `hkArray<hkBool>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "boolean"
          }
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "wasActiveInPreviousFrame"
      ]
    },
    "hkbExpressionCondition": {
      "title": "C++ Info",
      "description": "- name: `hkbExpressionCondition`\n - version: `1`\n - signature: `0x1c3c1045`\n - size: ` 16`(x86)/` 32`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "compiledExpressionSet": {
          "title": "C++ Info",
          "description": "- name: `compiledExpressionSet`(ctype: `void*`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "expression": {
          "title": "C++ Info",
          "description": "- name: `expression`(ctype: `hkStringPtr`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "compiledExpressionSet"
      ]
    },
    "hkbExpressionData": {
      "title": "C++ Info",
      "description": "- name: `hkbExpressionData`\n - version: `0`\n - signature: `0x6740042a`\n - size: ` 16`(x86)/` 24`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "assignmentEventIndex": {
          "title": "C++ Info",
          "description": "- name: `assignmentEventIndex`(ctype: `hkInt32`)\n - offset: `  8`(x86)/` 12`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "assignmentVariableIndex": {
          "title": "C++ Info",
          "description": "- name: `assignmentVariableIndex`(ctype: `hkInt32`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "eventMode": {
          "title": "C++ Info",
          "description": "- name: `eventMode`(ctype: `enum ExpressionEventMode`)\n - offset: ` 12`(x86)/` 16`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/ExpressionEventMode"
        },
        "expression": {
          "title": "C++ Info",
          "description": "- name: `expression`(ctype: `hkStringPtr`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "raisedEvent": {
          "title": "C++ Info",
          "description": "- name: `raisedEvent`(ctype: `hkBool`)\n - offset: ` 13`(x86)/` 17`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "wasTrueInPreviousFrame": {
          "title": "C++ Info",
          "description": "- name: `wasTrueInPreviousFrame`(ctype: `hkBool`)\n - offset: ` 14`(x86)/` 18`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        }
      },
      "required": [
        "assignmentVariableIndex",
        "assignmentEventIndex",
        "eventMode",
        "raisedEvent",
        "wasTrueInPreviousFrame"
      ]
    },
    "hkbExpressionDataArray": {
      "title": "C++ Info",
      "description": "- name: `hkbExpressionDataArray`\n - version: `0`\n - signature: `0x4b9ee1a2`\n - size: ` 20`(x86)/` 32`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "expressionsData": {
          "title": "C++ Info",
          "description": "- name: `expressionsData`(ctype: `hkArray<struct hkbExpressionData>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkbExpressionData"
          }
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "expressionsData"
      ]
    },
    "hkbExtractRagdollPoseModifier": {
      "title": "C++ Info",
      "description": "- name: `hkbExtractRagdollPoseModifier`\n - version: `1`\n - signature: `0x804dcbab`\n - size: ` 52`(x86)/` 88`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "cloneState": {
          "title": "C++ Info",
          "description": "- name: `cloneState`(ctype: `enum unknown`)\n - offset: ` 38`(x86)/` 66`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "enable": {
          "title": "C++ Info",
          "description": "- name: `enable`(ctype: `hkBool`)\n - offset: ` 40`(x86)/` 72`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "enableComputeWorldFromModel": {
          "title": "C++ Info",
          "description": "- name: `enableComputeWorldFromModel`(ctype: `hkBool`)\n - offset: ` 50`(x86)/` 86`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkInt16`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "padModifier": {
          "title": "C++ Info",
          "description": "- name: `padModifier`(ctype: `hkBool[3]`)\n - offset: ` 41`(x86)/` 73`(x86_64)\n - type_size: `  3`(x86)/`  3`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 3,
          "minItems": 3
        },
        "padNode": {
          "title": "C++ Info",
          "description": "- name: `padNode`(ctype: `hkBool[1]`)\n - offset: ` 39`(x86)/` 67`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 1,
          "minItems": 1
        },
        "poseMatchingBone0": {
          "title": "C++ Info",
          "description": "- name: `poseMatchingBone0`(ctype: `hkInt16`)\n - offset: ` 44`(x86)/` 80`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "int16"
        },
        "poseMatchingBone1": {
          "title": "C++ Info",
          "description": "- name: `poseMatchingBone1`(ctype: `hkInt16`)\n - offset: ` 46`(x86)/` 82`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "int16"
        },
        "poseMatchingBone2": {
          "title": "C++ Info",
          "description": "- name: `poseMatchingBone2`(ctype: `hkInt16`)\n - offset: ` 48`(x86)/` 84`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "int16"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "userData",
        "id",
        "cloneState",
        "padNode",
        "enable",
        "padModifier",
        "poseMatchingBone0",
        "poseMatchingBone1",
        "poseMatchingBone2",
        "enableComputeWorldFromModel"
      ]
    },
    "hkbFootIkControlData": {
      "title": "C++ Info",
      "description": "- name: `hkbFootIkControlData`\n - version: `0`\n - signature: `0xa111b704`\n - size: ` 48`(x86)/` 48`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "gains": {
          "title": "C++ Info",
          "description": "- name: `gains`(ctype: `struct hkbFootIkGains`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: ` 48`(x86)/` 48`(x86_64)\n - flags: `ALIGN_16`",
          "$ref": "#/$defs/hkbFootIkGains"
        }
      },
      "required": [
        "gains"
      ]
    },
    "hkbFootIkControlsModifier": {
      "title": "C++ Info",
      "description": "- name: `hkbFootIkControlsModifier`\n - version: `1`\n - signature: `0xe5b6f544`\n - size: `144`(x86)/`176`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "alignWithGroundRotation": {
          "title": "C++ Info",
          "description": "- name: `alignWithGroundRotation`(ctype: `hkQuaternion`)\n - offset: `128`(x86)/`160`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Quaternion"
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "cloneState": {
          "title": "C++ Info",
          "description": "- name: `cloneState`(ctype: `enum unknown`)\n - offset: ` 38`(x86)/` 66`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "controlData": {
          "title": "C++ Info",
          "description": "- name: `controlData`(ctype: `struct hkbFootIkControlData`)\n - offset: ` 48`(x86)/` 80`(x86_64)\n - type_size: ` 48`(x86)/` 48`(x86_64)",
          "$ref": "#/$defs/hkbFootIkControlData"
        },
        "enable": {
          "title": "C++ Info",
          "description": "- name: `enable`(ctype: `hkBool`)\n - offset: ` 40`(x86)/` 72`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "errorOutTranslation": {
          "title": "C++ Info",
          "description": "- name: `errorOutTranslation`(ctype: `hkVector4`)\n - offset: `112`(x86)/`144`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkInt16`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "legs": {
          "title": "C++ Info",
          "description": "- name: `legs`(ctype: `hkArray<struct hkbFootIkControlsModifierLeg>`)\n - offset: ` 96`(x86)/`128`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkbFootIkControlsModifierLeg"
          }
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "padModifier": {
          "title": "C++ Info",
          "description": "- name: `padModifier`(ctype: `hkBool[3]`)\n - offset: ` 41`(x86)/` 73`(x86_64)\n - type_size: `  3`(x86)/`  3`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 3,
          "minItems": 3
        },
        "padNode": {
          "title": "C++ Info",
          "description": "- name: `padNode`(ctype: `hkBool[1]`)\n - offset: ` 39`(x86)/` 67`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 1,
          "minItems": 1
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "userData",
        "id",
        "cloneState",
        "padNode",
        "enable",
        "padModifier",
        "controlData",
        "legs",
        "errorOutTranslation",
        "alignWithGroundRotation"
      ]
    },
    "hkbFootIkControlsModifierLeg": {
      "title": "C++ Info",
      "description": "- name: `hkbFootIkControlsModifierLeg`\n - version: `0`\n - signature: `0x9e17091a`\n - size: ` 32`(x86)/` 48`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "groundPosition": {
          "title": "C++ Info",
          "description": "- name: `groundPosition`(ctype: `hkVector4`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "hitSomething": {
          "title": "C++ Info",
          "description": "- name: `hitSomething`(ctype: `hkBool`)\n - offset: ` 28`(x86)/` 36`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "isPlantedMS": {
          "title": "C++ Info",
          "description": "- name: `isPlantedMS`(ctype: `hkBool`)\n - offset: ` 29`(x86)/` 37`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "ungroundedEvent": {
          "title": "C++ Info",
          "description": "- name: `ungroundedEvent`(ctype: `struct hkbEventProperty`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: `  8`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/hkbEventProperty"
        },
        "verticalError": {
          "title": "C++ Info",
          "description": "- name: `verticalError`(ctype: `hkReal`)\n - offset: ` 24`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        }
      },
      "required": [
        "groundPosition",
        "ungroundedEvent",
        "verticalError",
        "hitSomething",
        "isPlantedMS"
      ]
    },
    "hkbFootIkDriverInfo": {
      "title": "C++ Info",
      "description": "- name: `hkbFootIkDriverInfo`\n - version: `0`\n - signature: `0xc6a09dbf`\n - size: ` 56`(x86)/` 72`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "collisionFilterInfo": {
          "title": "C++ Info",
          "description": "- name: `collisionFilterInfo`(ctype: `hkUint32`)\n - offset: ` 36`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "forwardAlignFraction": {
          "title": "C++ Info",
          "description": "- name: `forwardAlignFraction`(ctype: `hkReal`)\n - offset: ` 40`(x86)/` 52`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "isQuadrupedNarrow": {
          "title": "C++ Info",
          "description": "- name: `isQuadrupedNarrow`(ctype: `hkBool`)\n - offset: ` 54`(x86)/` 66`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "legs": {
          "title": "C++ Info",
          "description": "- name: `legs`(ctype: `hkArray<struct hkbFootIkDriverInfoLeg>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkbFootIkDriverInfoLeg"
          }
        },
        "lockFeetWhenPlanted": {
          "title": "C++ Info",
          "description": "- name: `lockFeetWhenPlanted`(ctype: `hkBool`)\n - offset: ` 52`(x86)/` 64`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "originalGroundHeightMS": {
          "title": "C++ Info",
          "description": "- name: `originalGroundHeightMS`(ctype: `hkReal`)\n - offset: ` 28`(x86)/` 40`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "raycastDistanceDown": {
          "title": "C++ Info",
          "description": "- name: `raycastDistanceDown`(ctype: `hkReal`)\n - offset: ` 24`(x86)/` 36`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "raycastDistanceUp": {
          "title": "C++ Info",
          "description": "- name: `raycastDistanceUp`(ctype: `hkReal`)\n - offset: ` 20`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "sidewaysAlignFraction": {
          "title": "C++ Info",
          "description": "- name: `sidewaysAlignFraction`(ctype: `hkReal`)\n - offset: ` 44`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "sidewaysSampleWidth": {
          "title": "C++ Info",
          "description": "- name: `sidewaysSampleWidth`(ctype: `hkReal`)\n - offset: ` 48`(x86)/` 60`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "useCharacterUpVector": {
          "title": "C++ Info",
          "description": "- name: `useCharacterUpVector`(ctype: `hkBool`)\n - offset: ` 53`(x86)/` 65`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "verticalOffset": {
          "title": "C++ Info",
          "description": "- name: `verticalOffset`(ctype: `hkReal`)\n - offset: ` 32`(x86)/` 44`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "legs",
        "raycastDistanceUp",
        "raycastDistanceDown",
        "originalGroundHeightMS",
        "verticalOffset",
        "collisionFilterInfo",
        "forwardAlignFraction",
        "sidewaysAlignFraction",
        "sidewaysSampleWidth",
        "lockFeetWhenPlanted",
        "useCharacterUpVector",
        "isQuadrupedNarrow"
      ]
    },
    "hkbFootIkDriverInfoLeg": {
      "title": "C++ Info",
      "description": "- name: `hkbFootIkDriverInfoLeg`\n - version: `0`\n - signature: `0x224b18d1`\n - size: ` 96`(x86)/` 96`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "ankleIndex": {
          "title": "C++ Info",
          "description": "- name: `ankleIndex`(ctype: `hkInt16`)\n - offset: ` 80`(x86)/` 80`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "int16"
        },
        "footEndLS": {
          "title": "C++ Info",
          "description": "- name: `footEndLS`(ctype: `hkVector4`)\n - offset: ` 32`(x86)/` 32`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "footPlantedAnkleHeightMS": {
          "title": "C++ Info",
          "description": "- name: `footPlantedAnkleHeightMS`(ctype: `hkReal`)\n - offset: ` 48`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "footRaisedAnkleHeightMS": {
          "title": "C++ Info",
          "description": "- name: `footRaisedAnkleHeightMS`(ctype: `hkReal`)\n - offset: ` 52`(x86)/` 52`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "hipIndex": {
          "title": "C++ Info",
          "description": "- name: `hipIndex`(ctype: `hkInt16`)\n - offset: ` 76`(x86)/` 76`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "int16"
        },
        "kneeAxisLS": {
          "title": "C++ Info",
          "description": "- name: `kneeAxisLS`(ctype: `hkVector4`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "kneeIndex": {
          "title": "C++ Info",
          "description": "- name: `kneeIndex`(ctype: `hkInt16`)\n - offset: ` 78`(x86)/` 78`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "int16"
        },
        "maxAnkleAngleDegrees": {
          "title": "C++ Info",
          "description": "- name: `maxAnkleAngleDegrees`(ctype: `hkReal`)\n - offset: ` 72`(x86)/` 72`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "maxAnkleHeightMS": {
          "title": "C++ Info",
          "description": "- name: `maxAnkleHeightMS`(ctype: `hkReal`)\n - offset: ` 56`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "maxKneeAngleDegrees": {
          "title": "C++ Info",
          "description": "- name: `maxKneeAngleDegrees`(ctype: `hkReal`)\n - offset: ` 64`(x86)/` 64`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "minAnkleHeightMS": {
          "title": "C++ Info",
          "description": "- name: `minAnkleHeightMS`(ctype: `hkReal`)\n - offset: ` 60`(x86)/` 60`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "minKneeAngleDegrees": {
          "title": "C++ Info",
          "description": "- name: `minKneeAngleDegrees`(ctype: `hkReal`)\n - offset: ` 68`(x86)/` 68`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "prevAnkleRotLS": {
          "title": "C++ Info",
          "description": "- name: `prevAnkleRotLS`(ctype: `hkQuaternion`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "$ref": "#/$defs/Quaternion"
        }
      },
      "required": [
        "prevAnkleRotLS",
        "kneeAxisLS",
        "footEndLS",
        "footPlantedAnkleHeightMS",
        "footRaisedAnkleHeightMS",
        "maxAnkleHeightMS",
        "minAnkleHeightMS",
        "maxKneeAngleDegrees",
        "minKneeAngleDegrees",
        "maxAnkleAngleDegrees",
        "hipIndex",
        "kneeIndex",
        "ankleIndex"
      ]
    },
    "hkbFootIkGains": {
      "title": "C++ Info",
      "description": "- name: `hkbFootIkGains`\n - version: `0`\n - signature: `0xa681b7f0`\n - size: ` 48`(x86)/` 48`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "alignWorldFromModelGain": {
          "title": "C++ Info",
          "description": "- name: `alignWorldFromModelGain`(ctype: `hkReal`)\n - offset: ` 32`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "ankleOrientationGain": {
          "title": "C++ Info",
          "description": "- name: `ankleOrientationGain`(ctype: `hkReal`)\n - offset: ` 44`(x86)/` 44`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "errorUpDownBias": {
          "title": "C++ Info",
          "description": "- name: `errorUpDownBias`(ctype: `hkReal`)\n - offset: ` 28`(x86)/` 28`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "footPlantedGain": {
          "title": "C++ Info",
          "description": "- name: `footPlantedGain`(ctype: `hkReal`)\n - offset: ` 12`(x86)/` 12`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "footRaisedGain": {
          "title": "C++ Info",
          "description": "- name: `footRaisedGain`(ctype: `hkReal`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "footUnlockGain": {
          "title": "C++ Info",
          "description": "- name: `footUnlockGain`(ctype: `hkReal`)\n - offset: ` 20`(x86)/` 20`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "groundAscendingGain": {
          "title": "C++ Info",
          "description": "- name: `groundAscendingGain`(ctype: `hkReal`)\n - offset: `  4`(x86)/`  4`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "groundDescendingGain": {
          "title": "C++ Info",
          "description": "- name: `groundDescendingGain`(ctype: `hkReal`)\n - offset: `  8`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "hipOrientationGain": {
          "title": "C++ Info",
          "description": "- name: `hipOrientationGain`(ctype: `hkReal`)\n - offset: ` 36`(x86)/` 36`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "maxKneeAngleDifference": {
          "title": "C++ Info",
          "description": "- name: `maxKneeAngleDifference`(ctype: `hkReal`)\n - offset: ` 40`(x86)/` 40`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "onOffGain": {
          "title": "C++ Info",
          "description": "- name: `onOffGain`(ctype: `hkReal`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "worldFromModelFeedbackGain": {
          "title": "C++ Info",
          "description": "- name: `worldFromModelFeedbackGain`(ctype: `hkReal`)\n - offset: ` 24`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        }
      },
      "required": [
        "onOffGain",
        "groundAscendingGain",
        "groundDescendingGain",
        "footPlantedGain",
        "footRaisedGain",
        "footUnlockGain",
        "worldFromModelFeedbackGain",
        "errorUpDownBias",
        "alignWorldFromModelGain",
        "hipOrientationGain",
        "maxKneeAngleDifference",
        "ankleOrientationGain"
      ]
    },
    "hkbFootIkModifier": {
      "title": "C++ Info",
      "description": "- name: `hkbFootIkModifier`\n - version: `3`\n - signature: `0xed8966c0`\n - size: `208`(x86)/`256`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "alignMode": {
          "title": "C++ Info",
          "description": "- name: `alignMode`(ctype: `enum AlignMode`)\n - offset: `183`(x86)/`215`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/AlignMode"
        },
        "alignWithGroundRotation": {
          "title": "C++ Info",
          "description": "- name: `alignWithGroundRotation`(ctype: `hkQuaternion`)\n - offset: `144`(x86)/`176`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Quaternion"
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "cloneState": {
          "title": "C++ Info",
          "description": "- name: `cloneState`(ctype: `enum unknown`)\n - offset: ` 38`(x86)/` 66`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "collisionFilterInfo": {
          "title": "C++ Info",
          "description": "- name: `collisionFilterInfo`(ctype: `hkUint32`)\n - offset: `164`(x86)/`196`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "enable": {
          "title": "C++ Info",
          "description": "- name: `enable`(ctype: `hkBool`)\n - offset: ` 40`(x86)/` 72`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "errorOut": {
          "title": "C++ Info",
          "description": "- name: `errorOut`(ctype: `hkReal`)\n - offset: `116`(x86)/`156`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "errorOutTranslation": {
          "title": "C++ Info",
          "description": "- name: `errorOutTranslation`(ctype: `hkVector4`)\n - offset: `128`(x86)/`160`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "forwardAlignFraction": {
          "title": "C++ Info",
          "description": "- name: `forwardAlignFraction`(ctype: `hkReal`)\n - offset: `168`(x86)/`200`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "gains": {
          "title": "C++ Info",
          "description": "- name: `gains`(ctype: `struct hkbFootIkGains`)\n - offset: ` 44`(x86)/` 80`(x86_64)\n - type_size: ` 48`(x86)/` 48`(x86_64)",
          "$ref": "#/$defs/hkbFootIkGains"
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkInt16`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "internalLegData": {
          "title": "C++ Info",
          "description": "- name: `internalLegData`(ctype: `hkArray<struct hkbFootIkModifierInternalLegData>`)\n - offset: `184`(x86)/`216`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkbFootIkModifierInternalLegData"
          }
        },
        "isGroundPositionValid": {
          "title": "C++ Info",
          "description": "- name: `isGroundPositionValid`(ctype: `hkBool`)\n - offset: `201`(x86)/`237`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "isSetUp": {
          "title": "C++ Info",
          "description": "- name: `isSetUp`(ctype: `hkBool`)\n - offset: `200`(x86)/`236`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "legs": {
          "title": "C++ Info",
          "description": "- name: `legs`(ctype: `hkArray<struct hkbFootIkModifierLeg>`)\n - offset: ` 92`(x86)/`128`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkbFootIkModifierLeg"
          }
        },
        "lockFeetWhenPlanted": {
          "title": "C++ Info",
          "description": "- name: `lockFeetWhenPlanted`(ctype: `hkBool`)\n - offset: `181`(x86)/`213`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "originalGroundHeightMS": {
          "title": "C++ Info",
          "description": "- name: `originalGroundHeightMS`(ctype: `hkReal`)\n - offset: `112`(x86)/`152`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "padModifier": {
          "title": "C++ Info",
          "description": "- name: `padModifier`(ctype: `hkBool[3]`)\n - offset: ` 41`(x86)/` 73`(x86_64)\n - type_size: `  3`(x86)/`  3`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 3,
          "minItems": 3
        },
        "padNode": {
          "title": "C++ Info",
          "description": "- name: `padNode`(ctype: `hkBool[1]`)\n - offset: ` 39`(x86)/` 67`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 1,
          "minItems": 1
        },
        "prevIsFootIkEnabled": {
          "title": "C++ Info",
          "description": "- name: `prevIsFootIkEnabled`(ctype: `hkReal`)\n - offset: `196`(x86)/`232`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "number",
          "format": "float"
        },
        "raycastDistanceDown": {
          "title": "C++ Info",
          "description": "- name: `raycastDistanceDown`(ctype: `hkReal`)\n - offset: `108`(x86)/`148`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "raycastDistanceUp": {
          "title": "C++ Info",
          "description": "- name: `raycastDistanceUp`(ctype: `hkReal`)\n - offset: `104`(x86)/`144`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "sidewaysAlignFraction": {
          "title": "C++ Info",
          "description": "- name: `sidewaysAlignFraction`(ctype: `hkReal`)\n - offset: `172`(x86)/`204`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "sidewaysSampleWidth": {
          "title": "C++ Info",
          "description": "- name: `sidewaysSampleWidth`(ctype: `hkReal`)\n - offset: `176`(x86)/`208`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "timeStep": {
          "title": "C++ Info",
          "description": "- name: `timeStep`(ctype: `hkReal`)\n - offset: `204`(x86)/`240`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "number",
          "format": "float"
        },
        "useCharacterUpVector": {
          "title": "C++ Info",
          "description": "- name: `useCharacterUpVector`(ctype: `hkBool`)\n - offset: `182`(x86)/`214`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "useTrackData": {
          "title": "C++ Info",
          "description": "- name: `useTrackData`(ctype: `hkBool`)\n - offset: `180`(x86)/`212`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "verticalOffset": {
          "title": "C++ Info",
          "description": "- name: `verticalOffset`(ctype: `hkReal`)\n - offset: `160`(x86)/`192`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "userData",
        "id",
        "cloneState",
        "padNode",
        "enable",
        "padModifier",
        "gains",
        "legs",
        "raycastDistanceUp",
        "raycastDistanceDown",
        "originalGroundHeightMS",
        "errorOut",
        "errorOutTranslation",
        "alignWithGroundRotation",
        "verticalOffset",
        "collisionFilterInfo",
        "forwardAlignFraction",
        "sidewaysAlignFraction",
        "sidewaysSampleWidth",
        "useTrackData",
        "lockFeetWhenPlanted",
        "useCharacterUpVector",
        "alignMode",
        "internalLegData",
        "prevIsFootIkEnabled",
        "isSetUp",
        "isGroundPositionValid",
        "timeStep"
      ]
    },
    "hkbFootIkModifierInternalLegData": {
      "title": "C++ Info",
      "description": "- name: `hkbFootIkModifierInternalLegData`\n - version: `1`\n - signature: `0xe5ca3677`\n - size: ` 32`(x86)/` 32`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "footIkSolver": {
          "title": "C++ Info",
          "description": "- name: `footIkSolver`(ctype: `void*`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "groundPosition": {
          "title": "C++ Info",
          "description": "- name: `groundPosition`(ctype: `hkVector4`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        }
      },
      "required": [
        "groundPosition",
        "footIkSolver"
      ]
    },
    "hkbFootIkModifierLeg": {
      "title": "C++ Info",
      "description": "- name: `hkbFootIkModifierLeg`\n - version: `2`\n - signature: `0x9f3e3a04`\n - size: `160`(x86)/`160`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "ankleIndex": {
          "title": "C++ Info",
          "description": "- name: `ankleIndex`(ctype: `hkInt16`)\n - offset: `140`(x86)/`148`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "int16"
        },
        "footEndLS": {
          "title": "C++ Info",
          "description": "- name: `footEndLS`(ctype: `hkVector4`)\n - offset: ` 80`(x86)/` 80`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "footPlantedAnkleHeightMS": {
          "title": "C++ Info",
          "description": "- name: `footPlantedAnkleHeightMS`(ctype: `hkReal`)\n - offset: `104`(x86)/`112`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "footRaisedAnkleHeightMS": {
          "title": "C++ Info",
          "description": "- name: `footRaisedAnkleHeightMS`(ctype: `hkReal`)\n - offset: `108`(x86)/`116`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "hipIndex": {
          "title": "C++ Info",
          "description": "- name: `hipIndex`(ctype: `hkInt16`)\n - offset: `136`(x86)/`144`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "int16"
        },
        "hitSomething": {
          "title": "C++ Info",
          "description": "- name: `hitSomething`(ctype: `hkBool`)\n - offset: `142`(x86)/`150`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "isOriginalAnkleTransformMSSet": {
          "title": "C++ Info",
          "description": "- name: `isOriginalAnkleTransformMSSet`(ctype: `hkBool`)\n - offset: `144`(x86)/`152`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "isPlantedMS": {
          "title": "C++ Info",
          "description": "- name: `isPlantedMS`(ctype: `hkBool`)\n - offset: `143`(x86)/`151`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "kneeAxisLS": {
          "title": "C++ Info",
          "description": "- name: `kneeAxisLS`(ctype: `hkVector4`)\n - offset: ` 64`(x86)/` 64`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "kneeIndex": {
          "title": "C++ Info",
          "description": "- name: `kneeIndex`(ctype: `hkInt16`)\n - offset: `138`(x86)/`146`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "int16"
        },
        "maxAnkleAngleDegrees": {
          "title": "C++ Info",
          "description": "- name: `maxAnkleAngleDegrees`(ctype: `hkReal`)\n - offset: `132`(x86)/`140`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "maxAnkleHeightMS": {
          "title": "C++ Info",
          "description": "- name: `maxAnkleHeightMS`(ctype: `hkReal`)\n - offset: `112`(x86)/`120`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "maxKneeAngleDegrees": {
          "title": "C++ Info",
          "description": "- name: `maxKneeAngleDegrees`(ctype: `hkReal`)\n - offset: `120`(x86)/`128`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "minAnkleHeightMS": {
          "title": "C++ Info",
          "description": "- name: `minAnkleHeightMS`(ctype: `hkReal`)\n - offset: `116`(x86)/`124`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "minKneeAngleDegrees": {
          "title": "C++ Info",
          "description": "- name: `minKneeAngleDegrees`(ctype: `hkReal`)\n - offset: `124`(x86)/`132`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "originalAnkleTransformMS": {
          "title": "C++ Info",
          "description": "- name: `originalAnkleTransformMS`(ctype: `hkQsTransform`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: ` 48`(x86)/` 48`(x86_64)",
          "$ref": "#/$defs/QsTransform"
        },
        "prevAnkleRotLS": {
          "title": "C++ Info",
          "description": "- name: `prevAnkleRotLS`(ctype: `hkQuaternion`)\n - offset: ` 48`(x86)/` 48`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "$ref": "#/$defs/Quaternion"
        },
        "ungroundedEvent": {
          "title": "C++ Info",
          "description": "- name: `ungroundedEvent`(ctype: `struct hkbEventProperty`)\n - offset: ` 96`(x86)/` 96`(x86_64)\n - type_size: `  8`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/hkbEventProperty"
        },
        "verticalError": {
          "title": "C++ Info",
          "description": "- name: `verticalError`(ctype: `hkReal`)\n - offset: `128`(x86)/`136`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        }
      },
      "required": [
        "originalAnkleTransformMS",
        "prevAnkleRotLS",
        "kneeAxisLS",
        "footEndLS",
        "ungroundedEvent",
        "footPlantedAnkleHeightMS",
        "footRaisedAnkleHeightMS",
        "maxAnkleHeightMS",
        "minAnkleHeightMS",
        "maxKneeAngleDegrees",
        "minKneeAngleDegrees",
        "verticalError",
        "maxAnkleAngleDegrees",
        "hipIndex",
        "kneeIndex",
        "ankleIndex",
        "hitSomething",
        "isPlantedMS",
        "isOriginalAnkleTransformMSSet"
      ]
    },
    "hkbGenerator": {
      "title": "C++ Info",
      "description": "- name: `hkbGenerator`\n - version: `0`\n - signature: `0xd68aefc`\n - size: ` 40`(x86)/` 72`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "cloneState": {
          "title": "C++ Info",
          "description": "- name: `cloneState`(ctype: `enum unknown`)\n - offset: ` 38`(x86)/` 66`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkInt16`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "padNode": {
          "title": "C++ Info",
          "description": "- name: `padNode`(ctype: `hkBool[1]`)\n - offset: ` 39`(x86)/` 67`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 1,
          "minItems": 1
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "userData",
        "id",
        "cloneState",
        "padNode"
      ]
    },
    "hkbGeneratorOutputListener": {
      "title": "C++ Info",
      "description": "- name: `hkbGeneratorOutputListener`\n - version: `0`\n - signature: `0xda8c7d7d`\n - size: `  8`(x86)/` 16`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount"
      ]
    },
    "hkbGeneratorSyncInfo": {
      "title": "C++ Info",
      "description": "- name: `hkbGeneratorSyncInfo`\n - version: `0`\n - signature: `0xa3c341f8`\n - size: ` 80`(x86)/` 80`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "baseFrequency": {
          "title": "C++ Info",
          "description": "- name: `baseFrequency`(ctype: `hkReal`)\n - offset: ` 64`(x86)/` 64`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "isAdditive": {
          "title": "C++ Info",
          "description": "- name: `isAdditive`(ctype: `hkBool`)\n - offset: ` 79`(x86)/` 79`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "isCyclic": {
          "title": "C++ Info",
          "description": "- name: `isCyclic`(ctype: `hkBool`)\n - offset: ` 77`(x86)/` 77`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "isMirrored": {
          "title": "C++ Info",
          "description": "- name: `isMirrored`(ctype: `hkBool`)\n - offset: ` 78`(x86)/` 78`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "localTime": {
          "title": "C++ Info",
          "description": "- name: `localTime`(ctype: `hkReal`)\n - offset: ` 68`(x86)/` 68`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "numSyncPoints": {
          "title": "C++ Info",
          "description": "- name: `numSyncPoints`(ctype: `hkInt8`)\n - offset: ` 76`(x86)/` 76`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "int8"
        },
        "playbackSpeed": {
          "title": "C++ Info",
          "description": "- name: `playbackSpeed`(ctype: `hkReal`)\n - offset: ` 72`(x86)/` 72`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "syncPoints": {
          "title": "C++ Info",
          "description": "- name: `syncPoints`(ctype: `struct hkbGeneratorSyncInfoSyncPoint[8]`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: ` 64`(x86)/` 64`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkbGeneratorSyncInfoSyncPoint"
          },
          "maxItems": 8,
          "minItems": 8
        }
      },
      "required": [
        "syncPoints",
        "baseFrequency",
        "localTime",
        "playbackSpeed",
        "numSyncPoints",
        "isCyclic",
        "isMirrored",
        "isAdditive"
      ]
    },
    "hkbGeneratorSyncInfoSyncPoint": {
      "title": "C++ Info",
      "description": "- name: `hkbGeneratorSyncInfoSyncPoint`\n - version: `0`\n - signature: `0xb597cf92`\n - size: `  8`(x86)/`  8`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkInt32`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "time": {
          "title": "C++ Info",
          "description": "- name: `time`(ctype: `hkReal`)\n - offset: `  4`(x86)/`  4`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        }
      },
      "required": [
        "id",
        "time"
      ]
    },
    "hkbGeneratorTransitionEffect": {
      "title": "C++ Info",
      "description": "- name: `hkbGeneratorTransitionEffect`\n - version: `1`\n - signature: `0x5f771b12`\n - size: ` 92`(x86)/`144`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "blendInDuration": {
          "title": "C++ Info",
          "description": "- name: `blendInDuration`(ctype: `hkReal`)\n - offset: ` 48`(x86)/` 88`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "blendOutDuration": {
          "title": "C++ Info",
          "description": "- name: `blendOutDuration`(ctype: `hkReal`)\n - offset: ` 52`(x86)/` 92`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "cloneState": {
          "title": "C++ Info",
          "description": "- name: `cloneState`(ctype: `enum unknown`)\n - offset: ` 38`(x86)/` 66`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "defaultEventMode": {
          "title": "C++ Info",
          "description": "- name: `defaultEventMode`(ctype: `enum unknown`)\n - offset: ` 42`(x86)/` 74`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "duration": {
          "title": "C++ Info",
          "description": "- name: `duration`(ctype: `hkReal`)\n - offset: ` 72`(x86)/`124`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "number",
          "format": "float"
        },
        "echoToGenerator": {
          "title": "C++ Info",
          "description": "- name: `echoToGenerator`(ctype: `hkBool`)\n - offset: ` 86`(x86)/`138`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "echoTransitionGenerator": {
          "title": "C++ Info",
          "description": "- name: `echoTransitionGenerator`(ctype: `hkBool`)\n - offset: ` 85`(x86)/`137`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "effectiveBlendInDuration": {
          "title": "C++ Info",
          "description": "- name: `effectiveBlendInDuration`(ctype: `hkReal`)\n - offset: ` 76`(x86)/`128`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "number",
          "format": "float"
        },
        "effectiveBlendOutDuration": {
          "title": "C++ Info",
          "description": "- name: `effectiveBlendOutDuration`(ctype: `hkReal`)\n - offset: ` 80`(x86)/`132`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "number",
          "format": "float"
        },
        "eventMode": {
          "title": "C++ Info",
          "description": "- name: `eventMode`(ctype: `enum EventMode`)\n - offset: ` 41`(x86)/` 73`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/EventMode"
        },
        "fromGenerator": {
          "title": "C++ Info",
          "description": "- name: `fromGenerator`(ctype: `void*`)\n - offset: ` 60`(x86)/`104`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkInt16`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "justActivated": {
          "title": "C++ Info",
          "description": "- name: `justActivated`(ctype: `hkBool`)\n - offset: ` 87`(x86)/`139`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "padNode": {
          "title": "C++ Info",
          "description": "- name: `padNode`(ctype: `hkBool[1]`)\n - offset: ` 39`(x86)/` 67`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 1,
          "minItems": 1
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "selfTransitionMode": {
          "title": "C++ Info",
          "description": "- name: `selfTransitionMode`(ctype: `enum SelfTransitionMode`)\n - offset: ` 40`(x86)/` 72`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/SelfTransitionMode"
        },
        "stage": {
          "title": "C++ Info",
          "description": "- name: `stage`(ctype: `enum unknown`)\n - offset: ` 89`(x86)/`141`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "syncToGeneratorStartTime": {
          "title": "C++ Info",
          "description": "- name: `syncToGeneratorStartTime`(ctype: `hkBool`)\n - offset: ` 56`(x86)/` 96`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "timeInTransition": {
          "title": "C++ Info",
          "description": "- name: `timeInTransition`(ctype: `hkReal`)\n - offset: ` 68`(x86)/`120`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "number",
          "format": "float"
        },
        "toGenerator": {
          "title": "C++ Info",
          "description": "- name: `toGenerator`(ctype: `void*`)\n - offset: ` 64`(x86)/`112`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "toGeneratorState": {
          "title": "C++ Info",
          "description": "- name: `toGeneratorState`(ctype: `enum unknown`)\n - offset: ` 84`(x86)/`136`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "transitionGenerator": {
          "title": "C++ Info",
          "description": "- name: `transitionGenerator`(ctype: `struct hkbGenerator*`)\n - offset: ` 44`(x86)/` 80`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "updateActiveNodes": {
          "title": "C++ Info",
          "description": "- name: `updateActiveNodes`(ctype: `hkBool`)\n - offset: ` 88`(x86)/`140`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "userData",
        "id",
        "cloneState",
        "padNode",
        "selfTransitionMode",
        "eventMode",
        "defaultEventMode",
        "transitionGenerator",
        "blendInDuration",
        "blendOutDuration",
        "syncToGeneratorStartTime",
        "fromGenerator",
        "toGenerator",
        "timeInTransition",
        "duration",
        "effectiveBlendInDuration",
        "effectiveBlendOutDuration",
        "toGeneratorState",
        "echoTransitionGenerator",
        "echoToGenerator",
        "justActivated",
        "updateActiveNodes",
        "stage"
      ]
    },
    "hkbGeneratorTransitionEffectInternalState": {
      "title": "C++ Info",
      "description": "- name: `hkbGeneratorTransitionEffectInternalState`\n - version: `0`\n - signature: `0xd6692b5d`\n - size: ` 32`(x86)/` 40`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "duration": {
          "title": "C++ Info",
          "description": "- name: `duration`(ctype: `hkReal`)\n - offset: ` 12`(x86)/` 20`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "echoToGenerator": {
          "title": "C++ Info",
          "description": "- name: `echoToGenerator`(ctype: `hkBool`)\n - offset: ` 26`(x86)/` 34`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "echoTransitionGenerator": {
          "title": "C++ Info",
          "description": "- name: `echoTransitionGenerator`(ctype: `hkBool`)\n - offset: ` 25`(x86)/` 33`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "effectiveBlendInDuration": {
          "title": "C++ Info",
          "description": "- name: `effectiveBlendInDuration`(ctype: `hkReal`)\n - offset: ` 16`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "effectiveBlendOutDuration": {
          "title": "C++ Info",
          "description": "- name: `effectiveBlendOutDuration`(ctype: `hkReal`)\n - offset: ` 20`(x86)/` 28`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "justActivated": {
          "title": "C++ Info",
          "description": "- name: `justActivated`(ctype: `hkBool`)\n - offset: ` 27`(x86)/` 35`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "stage": {
          "title": "C++ Info",
          "description": "- name: `stage`(ctype: `enum Stage`)\n - offset: ` 29`(x86)/` 37`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/Stage"
        },
        "timeInTransition": {
          "title": "C++ Info",
          "description": "- name: `timeInTransition`(ctype: `hkReal`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "toGeneratorState": {
          "title": "C++ Info",
          "description": "- name: `toGeneratorState`(ctype: `enum ToGeneratorState`)\n - offset: ` 24`(x86)/` 32`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/ToGeneratorState"
        },
        "updateActiveNodes": {
          "title": "C++ Info",
          "description": "- name: `updateActiveNodes`(ctype: `hkBool`)\n - offset: ` 28`(x86)/` 36`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "timeInTransition",
        "duration",
        "effectiveBlendInDuration",
        "effectiveBlendOutDuration",
        "toGeneratorState",
        "echoTransitionGenerator",
        "echoToGenerator",
        "justActivated",
        "updateActiveNodes",
        "stage"
      ]
    },
    "hkbGetHandleOnBoneModifier": {
      "title": "C++ Info",
      "description": "- name: `hkbGetHandleOnBoneModifier`\n - version: `0`\n - signature: `0x50c34a17`\n - size: ` 56`(x86)/`104`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "animationBoneIndex": {
          "title": "C++ Info",
          "description": "- name: `animationBoneIndex`(ctype: `hkInt16`)\n - offset: ` 54`(x86)/` 98`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "int16"
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "cloneState": {
          "title": "C++ Info",
          "description": "- name: `cloneState`(ctype: `enum unknown`)\n - offset: ` 38`(x86)/` 66`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "enable": {
          "title": "C++ Info",
          "description": "- name: `enable`(ctype: `hkBool`)\n - offset: ` 40`(x86)/` 72`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "handleOut": {
          "title": "C++ Info",
          "description": "- name: `handleOut`(ctype: `struct hkbHandle*`)\n - offset: ` 44`(x86)/` 80`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkInt16`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "localFrameName": {
          "title": "C++ Info",
          "description": "- name: `localFrameName`(ctype: `hkStringPtr`)\n - offset: ` 48`(x86)/` 88`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "padModifier": {
          "title": "C++ Info",
          "description": "- name: `padModifier`(ctype: `hkBool[3]`)\n - offset: ` 41`(x86)/` 73`(x86_64)\n - type_size: `  3`(x86)/`  3`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 3,
          "minItems": 3
        },
        "padNode": {
          "title": "C++ Info",
          "description": "- name: `padNode`(ctype: `hkBool[1]`)\n - offset: ` 39`(x86)/` 67`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 1,
          "minItems": 1
        },
        "ragdollBoneIndex": {
          "title": "C++ Info",
          "description": "- name: `ragdollBoneIndex`(ctype: `hkInt16`)\n - offset: ` 52`(x86)/` 96`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "int16"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "userData",
        "id",
        "cloneState",
        "padNode",
        "enable",
        "padModifier",
        "handleOut",
        "ragdollBoneIndex",
        "animationBoneIndex"
      ]
    },
    "hkbGetUpModifier": {
      "title": "C++ Info",
      "description": "- name: `hkbGetUpModifier`\n - version: `2`\n - signature: `0x61cb7ac0`\n - size: ` 96`(x86)/`128`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "alignWithGroundDuration": {
          "title": "C++ Info",
          "description": "- name: `alignWithGroundDuration`(ctype: `hkReal`)\n - offset: ` 68`(x86)/`100`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "anotherBoneIndex": {
          "title": "C++ Info",
          "description": "- name: `anotherBoneIndex`(ctype: `hkInt16`)\n - offset: ` 76`(x86)/`108`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "int16"
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "cloneState": {
          "title": "C++ Info",
          "description": "- name: `cloneState`(ctype: `enum unknown`)\n - offset: ` 38`(x86)/` 66`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "duration": {
          "title": "C++ Info",
          "description": "- name: `duration`(ctype: `hkReal`)\n - offset: ` 64`(x86)/` 96`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "enable": {
          "title": "C++ Info",
          "description": "- name: `enable`(ctype: `hkBool`)\n - offset: ` 40`(x86)/` 72`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "groundNormal": {
          "title": "C++ Info",
          "description": "- name: `groundNormal`(ctype: `hkVector4`)\n - offset: ` 48`(x86)/` 80`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkInt16`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "initNextModify": {
          "title": "C++ Info",
          "description": "- name: `initNextModify`(ctype: `hkBool`)\n - offset: ` 88`(x86)/`120`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "otherBoneIndex": {
          "title": "C++ Info",
          "description": "- name: `otherBoneIndex`(ctype: `hkInt16`)\n - offset: ` 74`(x86)/`106`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "int16"
        },
        "padModifier": {
          "title": "C++ Info",
          "description": "- name: `padModifier`(ctype: `hkBool[3]`)\n - offset: ` 41`(x86)/` 73`(x86_64)\n - type_size: `  3`(x86)/`  3`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 3,
          "minItems": 3
        },
        "padNode": {
          "title": "C++ Info",
          "description": "- name: `padNode`(ctype: `hkBool[1]`)\n - offset: ` 39`(x86)/` 67`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 1,
          "minItems": 1
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "rootBoneIndex": {
          "title": "C++ Info",
          "description": "- name: `rootBoneIndex`(ctype: `hkInt16`)\n - offset: ` 72`(x86)/`104`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "int16"
        },
        "timeSinceBegin": {
          "title": "C++ Info",
          "description": "- name: `timeSinceBegin`(ctype: `hkReal`)\n - offset: ` 80`(x86)/`112`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "number",
          "format": "float"
        },
        "timeStep": {
          "title": "C++ Info",
          "description": "- name: `timeStep`(ctype: `hkReal`)\n - offset: ` 84`(x86)/`116`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "number",
          "format": "float"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "userData",
        "id",
        "cloneState",
        "padNode",
        "enable",
        "padModifier",
        "groundNormal",
        "duration",
        "alignWithGroundDuration",
        "rootBoneIndex",
        "otherBoneIndex",
        "anotherBoneIndex",
        "timeSinceBegin",
        "timeStep",
        "initNextModify"
      ]
    },
    "hkbGetUpModifierInternalState": {
      "title": "C++ Info",
      "description": "- name: `hkbGetUpModifierInternalState`\n - version: `0`\n - signature: `0xd84cad4a`\n - size: ` 20`(x86)/` 32`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "initNextModify": {
          "title": "C++ Info",
          "description": "- name: `initNextModify`(ctype: `hkBool`)\n - offset: ` 16`(x86)/` 24`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "timeSinceBegin": {
          "title": "C++ Info",
          "description": "- name: `timeSinceBegin`(ctype: `hkReal`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "timeStep": {
          "title": "C++ Info",
          "description": "- name: `timeStep`(ctype: `hkReal`)\n - offset: ` 12`(x86)/` 20`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "timeSinceBegin",
        "timeStep",
        "initNextModify"
      ]
    },
    "hkbGetWorldFromModelModifier": {
      "title": "C++ Info",
      "description": "- name: `hkbGetWorldFromModelModifier`\n - version: `0`\n - signature: `0x873fc6f7`\n - size: ` 80`(x86)/`112`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "cloneState": {
          "title": "C++ Info",
          "description": "- name: `cloneState`(ctype: `enum unknown`)\n - offset: ` 38`(x86)/` 66`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "enable": {
          "title": "C++ Info",
          "description": "- name: `enable`(ctype: `hkBool`)\n - offset: ` 40`(x86)/` 72`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkInt16`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "padModifier": {
          "title": "C++ Info",
          "description": "- name: `padModifier`(ctype: `hkBool[3]`)\n - offset: ` 41`(x86)/` 73`(x86_64)\n - type_size: `  3`(x86)/`  3`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 3,
          "minItems": 3
        },
        "padNode": {
          "title": "C++ Info",
          "description": "- name: `padNode`(ctype: `hkBool[1]`)\n - offset: ` 39`(x86)/` 67`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 1,
          "minItems": 1
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "rotationOut": {
          "title": "C++ Info",
          "description": "- name: `rotationOut`(ctype: `hkQuaternion`)\n - offset: ` 64`(x86)/` 96`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Quaternion"
        },
        "translationOut": {
          "title": "C++ Info",
          "description": "- name: `translationOut`(ctype: `hkVector4`)\n - offset: ` 48`(x86)/` 80`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "userData",
        "id",
        "cloneState",
        "padNode",
        "enable",
        "padModifier",
        "translationOut",
        "rotationOut"
      ]
    },
    "hkbGetWorldFromModelModifierInternalState": {
      "title": "C++ Info",
      "description": "- name: `hkbGetWorldFromModelModifierInternalState`\n - version: `0`\n - signature: `0xa92ed39f`\n - size: ` 48`(x86)/` 48`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "rotationOut": {
          "title": "C++ Info",
          "description": "- name: `rotationOut`(ctype: `hkQuaternion`)\n - offset: ` 32`(x86)/` 32`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Quaternion"
        },
        "translationOut": {
          "title": "C++ Info",
          "description": "- name: `translationOut`(ctype: `hkVector4`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "translationOut",
        "rotationOut"
      ]
    },
    "hkbHandIkControlData": {
      "title": "C++ Info",
      "description": "- name: `hkbHandIkControlData`\n - version: `2`\n - signature: `0xd72b8d17`\n - size: ` 80`(x86)/` 96`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "extrapolationTimeStep": {
          "title": "C++ Info",
          "description": "- name: `extrapolationTimeStep`(ctype: `hkReal`)\n - offset: ` 68`(x86)/` 72`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "fadeInDuration": {
          "title": "C++ Info",
          "description": "- name: `fadeInDuration`(ctype: `hkReal`)\n - offset: ` 60`(x86)/` 64`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "fadeOutDuration": {
          "title": "C++ Info",
          "description": "- name: `fadeOutDuration`(ctype: `hkReal`)\n - offset: ` 64`(x86)/` 68`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "fixUp": {
          "title": "C++ Info",
          "description": "- name: `fixUp`(ctype: `hkBool`)\n - offset: ` 77`(x86)/` 81`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "handleChangeMode": {
          "title": "C++ Info",
          "description": "- name: `handleChangeMode`(ctype: `enum HandleChangeMode`)\n - offset: ` 76`(x86)/` 80`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/HandleChangeMode2"
        },
        "handleChangeSpeed": {
          "title": "C++ Info",
          "description": "- name: `handleChangeSpeed`(ctype: `hkReal`)\n - offset: ` 72`(x86)/` 76`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "normalOnFraction": {
          "title": "C++ Info",
          "description": "- name: `normalOnFraction`(ctype: `hkReal`)\n - offset: ` 56`(x86)/` 60`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "targetHandle": {
          "title": "C++ Info",
          "description": "- name: `targetHandle`(ctype: `struct hkbHandle*`)\n - offset: ` 48`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "targetNormal": {
          "title": "C++ Info",
          "description": "- name: `targetNormal`(ctype: `hkVector4`)\n - offset: ` 32`(x86)/` 32`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "targetPosition": {
          "title": "C++ Info",
          "description": "- name: `targetPosition`(ctype: `hkVector4`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "targetRotation": {
          "title": "C++ Info",
          "description": "- name: `targetRotation`(ctype: `hkQuaternion`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Quaternion"
        },
        "transformOnFraction": {
          "title": "C++ Info",
          "description": "- name: `transformOnFraction`(ctype: `hkReal`)\n - offset: ` 52`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        }
      },
      "required": [
        "targetPosition",
        "targetRotation",
        "targetNormal",
        "targetHandle",
        "transformOnFraction",
        "normalOnFraction",
        "fadeInDuration",
        "fadeOutDuration",
        "extrapolationTimeStep",
        "handleChangeSpeed",
        "handleChangeMode",
        "fixUp"
      ]
    },
    "hkbHandIkControlsModifier": {
      "title": "C++ Info",
      "description": "- name: `hkbHandIkControlsModifier`\n - version: `0`\n - signature: `0x9f0488bb`\n - size: ` 56`(x86)/` 96`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "cloneState": {
          "title": "C++ Info",
          "description": "- name: `cloneState`(ctype: `enum unknown`)\n - offset: ` 38`(x86)/` 66`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "enable": {
          "title": "C++ Info",
          "description": "- name: `enable`(ctype: `hkBool`)\n - offset: ` 40`(x86)/` 72`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "hands": {
          "title": "C++ Info",
          "description": "- name: `hands`(ctype: `hkArray<struct hkbHandIkControlsModifierHand>`)\n - offset: ` 44`(x86)/` 80`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkbHandIkControlsModifierHand"
          }
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkInt16`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "padModifier": {
          "title": "C++ Info",
          "description": "- name: `padModifier`(ctype: `hkBool[3]`)\n - offset: ` 41`(x86)/` 73`(x86_64)\n - type_size: `  3`(x86)/`  3`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 3,
          "minItems": 3
        },
        "padNode": {
          "title": "C++ Info",
          "description": "- name: `padNode`(ctype: `hkBool[1]`)\n - offset: ` 39`(x86)/` 67`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 1,
          "minItems": 1
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "userData",
        "id",
        "cloneState",
        "padNode",
        "enable",
        "padModifier",
        "hands"
      ]
    },
    "hkbHandIkControlsModifierHand": {
      "title": "C++ Info",
      "description": "- name: `hkbHandIkControlsModifierHand`\n - version: `0`\n - signature: `0x9c72e9e3`\n - size: ` 96`(x86)/`112`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "controlData": {
          "title": "C++ Info",
          "description": "- name: `controlData`(ctype: `struct hkbHandIkControlData`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: ` 80`(x86)/` 96`(x86_64)",
          "$ref": "#/$defs/hkbHandIkControlData"
        },
        "enable": {
          "title": "C++ Info",
          "description": "- name: `enable`(ctype: `hkBool`)\n - offset: ` 84`(x86)/`100`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "handIndex": {
          "title": "C++ Info",
          "description": "- name: `handIndex`(ctype: `hkInt32`)\n - offset: ` 80`(x86)/` 96`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "controlData",
        "handIndex",
        "enable"
      ]
    },
    "hkbHandIkDriverInfo": {
      "title": "C++ Info",
      "description": "- name: `hkbHandIkDriverInfo`\n - version: `0`\n - signature: `0xc299090a`\n - size: ` 24`(x86)/` 40`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "fadeInOutCurve": {
          "title": "C++ Info",
          "description": "- name: `fadeInOutCurve`(ctype: `enum BlendCurve`)\n - offset: ` 20`(x86)/` 32`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/BlendCurve"
        },
        "hands": {
          "title": "C++ Info",
          "description": "- name: `hands`(ctype: `hkArray<struct hkbHandIkDriverInfoHand>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkbHandIkDriverInfoHand"
          }
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "hands",
        "fadeInOutCurve"
      ]
    },
    "hkbHandIkDriverInfoHand": {
      "title": "C++ Info",
      "description": "- name: `hkbHandIkDriverInfoHand`\n - version: `1`\n - signature: `0x14dfe1dd`\n - size: ` 96`(x86)/` 96`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "backHandNormalLS": {
          "title": "C++ Info",
          "description": "- name: `backHandNormalLS`(ctype: `hkVector4`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "elbowAxisLS": {
          "title": "C++ Info",
          "description": "- name: `elbowAxisLS`(ctype: `hkVector4`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "elbowIndex": {
          "title": "C++ Info",
          "description": "- name: `elbowIndex`(ctype: `hkInt16`)\n - offset: ` 76`(x86)/` 76`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "int16"
        },
        "elbowSiblingIndex": {
          "title": "C++ Info",
          "description": "- name: `elbowSiblingIndex`(ctype: `hkInt16`)\n - offset: ` 78`(x86)/` 78`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "int16"
        },
        "enforceEndPosition": {
          "title": "C++ Info",
          "description": "- name: `enforceEndPosition`(ctype: `hkBool`)\n - offset: ` 82`(x86)/` 82`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "enforceEndRotation": {
          "title": "C++ Info",
          "description": "- name: `enforceEndRotation`(ctype: `hkBool`)\n - offset: ` 83`(x86)/` 83`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "handOffsetLS": {
          "title": "C++ Info",
          "description": "- name: `handOffsetLS`(ctype: `hkVector4`)\n - offset: ` 32`(x86)/` 32`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "handOrienationOffsetLS": {
          "title": "C++ Info",
          "description": "- name: `handOrienationOffsetLS`(ctype: `hkQuaternion`)\n - offset: ` 48`(x86)/` 48`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Quaternion"
        },
        "localFrameName": {
          "title": "C++ Info",
          "description": "- name: `localFrameName`(ctype: `hkStringPtr`)\n - offset: ` 84`(x86)/` 88`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "maxElbowAngleDegrees": {
          "title": "C++ Info",
          "description": "- name: `maxElbowAngleDegrees`(ctype: `hkReal`)\n - offset: ` 64`(x86)/` 64`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "minElbowAngleDegrees": {
          "title": "C++ Info",
          "description": "- name: `minElbowAngleDegrees`(ctype: `hkReal`)\n - offset: ` 68`(x86)/` 68`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "shoulderIndex": {
          "title": "C++ Info",
          "description": "- name: `shoulderIndex`(ctype: `hkInt16`)\n - offset: ` 72`(x86)/` 72`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "int16"
        },
        "shoulderSiblingIndex": {
          "title": "C++ Info",
          "description": "- name: `shoulderSiblingIndex`(ctype: `hkInt16`)\n - offset: ` 74`(x86)/` 74`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "int16"
        },
        "wristIndex": {
          "title": "C++ Info",
          "description": "- name: `wristIndex`(ctype: `hkInt16`)\n - offset: ` 80`(x86)/` 80`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "elbowAxisLS",
        "backHandNormalLS",
        "handOffsetLS",
        "handOrienationOffsetLS",
        "maxElbowAngleDegrees",
        "minElbowAngleDegrees",
        "shoulderIndex",
        "shoulderSiblingIndex",
        "elbowIndex",
        "elbowSiblingIndex",
        "wristIndex",
        "enforceEndPosition",
        "enforceEndRotation"
      ]
    },
    "hkbHandIkModifier": {
      "title": "C++ Info",
      "description": "- name: `hkbHandIkModifier`\n - version: `0`\n - signature: `0xef8bc2f7`\n - size: ` 72`(x86)/`120`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "cloneState": {
          "title": "C++ Info",
          "description": "- name: `cloneState`(ctype: `enum unknown`)\n - offset: ` 38`(x86)/` 66`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "enable": {
          "title": "C++ Info",
          "description": "- name: `enable`(ctype: `hkBool`)\n - offset: ` 40`(x86)/` 72`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "fadeInOutCurve": {
          "title": "C++ Info",
          "description": "- name: `fadeInOutCurve`(ctype: `enum BlendCurve`)\n - offset: ` 56`(x86)/` 96`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/BlendCurve"
        },
        "hands": {
          "title": "C++ Info",
          "description": "- name: `hands`(ctype: `hkArray<struct hkbHandIkModifierHand>`)\n - offset: ` 44`(x86)/` 80`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkbHandIkModifierHand"
          }
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkInt16`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "internalHandData": {
          "title": "C++ Info",
          "description": "- name: `internalHandData`(ctype: `hkArray<void>`)\n - offset: ` 60`(x86)/`104`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "padModifier": {
          "title": "C++ Info",
          "description": "- name: `padModifier`(ctype: `hkBool[3]`)\n - offset: ` 41`(x86)/` 73`(x86_64)\n - type_size: `  3`(x86)/`  3`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 3,
          "minItems": 3
        },
        "padNode": {
          "title": "C++ Info",
          "description": "- name: `padNode`(ctype: `hkBool[1]`)\n - offset: ` 39`(x86)/` 67`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 1,
          "minItems": 1
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "userData",
        "id",
        "cloneState",
        "padNode",
        "enable",
        "padModifier",
        "hands",
        "fadeInOutCurve",
        "internalHandData"
      ]
    },
    "hkbHandIkModifierHand": {
      "title": "C++ Info",
      "description": "- name: `hkbHandIkModifierHand`\n - version: `3`\n - signature: `0x14dfe1dd`\n - size: ` 96`(x86)/` 96`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "backHandNormalLS": {
          "title": "C++ Info",
          "description": "- name: `backHandNormalLS`(ctype: `hkVector4`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "elbowAxisLS": {
          "title": "C++ Info",
          "description": "- name: `elbowAxisLS`(ctype: `hkVector4`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "elbowIndex": {
          "title": "C++ Info",
          "description": "- name: `elbowIndex`(ctype: `hkInt16`)\n - offset: ` 76`(x86)/` 76`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "int16"
        },
        "elbowSiblingIndex": {
          "title": "C++ Info",
          "description": "- name: `elbowSiblingIndex`(ctype: `hkInt16`)\n - offset: ` 78`(x86)/` 78`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "int16"
        },
        "enforceEndPosition": {
          "title": "C++ Info",
          "description": "- name: `enforceEndPosition`(ctype: `hkBool`)\n - offset: ` 82`(x86)/` 82`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "enforceEndRotation": {
          "title": "C++ Info",
          "description": "- name: `enforceEndRotation`(ctype: `hkBool`)\n - offset: ` 83`(x86)/` 83`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "handOffsetLS": {
          "title": "C++ Info",
          "description": "- name: `handOffsetLS`(ctype: `hkVector4`)\n - offset: ` 32`(x86)/` 32`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "handOrienationOffsetLS": {
          "title": "C++ Info",
          "description": "- name: `handOrienationOffsetLS`(ctype: `hkQuaternion`)\n - offset: ` 48`(x86)/` 48`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Quaternion"
        },
        "localFrameName": {
          "title": "C++ Info",
          "description": "- name: `localFrameName`(ctype: `hkStringPtr`)\n - offset: ` 84`(x86)/` 88`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "maxElbowAngleDegrees": {
          "title": "C++ Info",
          "description": "- name: `maxElbowAngleDegrees`(ctype: `hkReal`)\n - offset: ` 64`(x86)/` 64`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "minElbowAngleDegrees": {
          "title": "C++ Info",
          "description": "- name: `minElbowAngleDegrees`(ctype: `hkReal`)\n - offset: ` 68`(x86)/` 68`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "shoulderIndex": {
          "title": "C++ Info",
          "description": "- name: `shoulderIndex`(ctype: `hkInt16`)\n - offset: ` 72`(x86)/` 72`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "int16"
        },
        "shoulderSiblingIndex": {
          "title": "C++ Info",
          "description": "- name: `shoulderSiblingIndex`(ctype: `hkInt16`)\n - offset: ` 74`(x86)/` 74`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "int16"
        },
        "wristIndex": {
          "title": "C++ Info",
          "description": "- name: `wristIndex`(ctype: `hkInt16`)\n - offset: ` 80`(x86)/` 80`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "elbowAxisLS",
        "backHandNormalLS",
        "handOffsetLS",
        "handOrienationOffsetLS",
        "maxElbowAngleDegrees",
        "minElbowAngleDegrees",
        "shoulderIndex",
        "shoulderSiblingIndex",
        "elbowIndex",
        "elbowSiblingIndex",
        "wristIndex",
        "enforceEndPosition",
        "enforceEndRotation"
      ]
    },
    "hkbHandle": {
      "title": "C++ Info",
      "description": "- name: `hkbHandle`\n - version: `1`\n - signature: `0xd8b6401c`\n - size: ` 24`(x86)/` 48`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "animationBoneIndex": {
          "title": "C++ Info",
          "description": "- name: `animationBoneIndex`(ctype: `hkInt16`)\n - offset: ` 20`(x86)/` 40`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "int16"
        },
        "character": {
          "title": "C++ Info",
          "description": "- name: `character`(ctype: `struct hkbCharacter*`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "frame": {
          "title": "C++ Info",
          "description": "- name: `frame`(ctype: `struct hkLocalFrame*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "rigidBody": {
          "title": "C++ Info",
          "description": "- name: `rigidBody`(ctype: `struct hkpRigidBody*`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "frame",
        "rigidBody",
        "character",
        "animationBoneIndex"
      ]
    },
    "hkbIntEventPayload": {
      "title": "C++ Info",
      "description": "- name: `hkbIntEventPayload`\n - version: `0`\n - signature: `0xebbc1bd3`\n - size: ` 12`(x86)/` 24`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "data": {
          "title": "C++ Info",
          "description": "- name: `data`(ctype: `hkInt32`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "data"
      ]
    },
    "hkbIntVariableSequencedData": {
      "title": "C++ Info",
      "description": "- name: `hkbIntVariableSequencedData`\n - version: `0`\n - signature: `0x7bfc518a`\n - size: ` 24`(x86)/` 40`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "samples": {
          "title": "C++ Info",
          "description": "- name: `samples`(ctype: `hkArray<struct hkbIntVariableSequencedDataSample>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkbIntVariableSequencedDataSample"
          }
        },
        "variableIndex": {
          "title": "C++ Info",
          "description": "- name: `variableIndex`(ctype: `hkInt32`)\n - offset: ` 20`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "samples",
        "variableIndex"
      ]
    },
    "hkbIntVariableSequencedDataSample": {
      "title": "C++ Info",
      "description": "- name: `hkbIntVariableSequencedDataSample`\n - version: `0`\n - signature: `0xbe7ac63c`\n - size: `  8`(x86)/`  8`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "time": {
          "title": "C++ Info",
          "description": "- name: `time`(ctype: `hkReal`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "value": {
          "title": "C++ Info",
          "description": "- name: `value`(ctype: `hkInt32`)\n - offset: `  4`(x86)/`  4`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "time",
        "value"
      ]
    },
    "hkbKeyframeBonesModifier": {
      "title": "C++ Info",
      "description": "- name: `hkbKeyframeBonesModifier`\n - version: `3`\n - signature: `0x95f66629`\n - size: ` 60`(x86)/`104`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "cloneState": {
          "title": "C++ Info",
          "description": "- name: `cloneState`(ctype: `enum unknown`)\n - offset: ` 38`(x86)/` 66`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "enable": {
          "title": "C++ Info",
          "description": "- name: `enable`(ctype: `hkBool`)\n - offset: ` 40`(x86)/` 72`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkInt16`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "keyframeInfo": {
          "title": "C++ Info",
          "description": "- name: `keyframeInfo`(ctype: `hkArray<struct hkbKeyframeBonesModifierKeyframeInfo>`)\n - offset: ` 44`(x86)/` 80`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkbKeyframeBonesModifierKeyframeInfo"
          }
        },
        "keyframedBonesList": {
          "title": "C++ Info",
          "description": "- name: `keyframedBonesList`(ctype: `struct hkbBoneIndexArray*`)\n - offset: ` 56`(x86)/` 96`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "padModifier": {
          "title": "C++ Info",
          "description": "- name: `padModifier`(ctype: `hkBool[3]`)\n - offset: ` 41`(x86)/` 73`(x86_64)\n - type_size: `  3`(x86)/`  3`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 3,
          "minItems": 3
        },
        "padNode": {
          "title": "C++ Info",
          "description": "- name: `padNode`(ctype: `hkBool[1]`)\n - offset: ` 39`(x86)/` 67`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 1,
          "minItems": 1
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "userData",
        "id",
        "cloneState",
        "padNode",
        "enable",
        "padModifier",
        "keyframeInfo",
        "keyframedBonesList"
      ]
    },
    "hkbKeyframeBonesModifierKeyframeInfo": {
      "title": "C++ Info",
      "description": "- name: `hkbKeyframeBonesModifierKeyframeInfo`\n - version: `0`\n - signature: `0x72deb7a6`\n - size: ` 48`(x86)/` 48`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "boneIndex": {
          "title": "C++ Info",
          "description": "- name: `boneIndex`(ctype: `hkInt16`)\n - offset: ` 32`(x86)/` 32`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "int16"
        },
        "isValid": {
          "title": "C++ Info",
          "description": "- name: `isValid`(ctype: `hkBool`)\n - offset: ` 34`(x86)/` 34`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "keyframedPosition": {
          "title": "C++ Info",
          "description": "- name: `keyframedPosition`(ctype: `hkVector4`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "keyframedRotation": {
          "title": "C++ Info",
          "description": "- name: `keyframedRotation`(ctype: `hkQuaternion`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Quaternion"
        }
      },
      "required": [
        "keyframedPosition",
        "keyframedRotation",
        "boneIndex",
        "isValid"
      ]
    },
    "hkbLinkedSymbolInfo": {
      "title": "C++ Info",
      "description": "- name: `hkbLinkedSymbolInfo`\n - version: `0`\n - signature: `0x6a5094e3`\n - size: ` 32`(x86)/` 48`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "eventNames": {
          "title": "C++ Info",
          "description": "- name: `eventNames`(ctype: `hkArray<hkStringPtr>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "variableNames": {
          "title": "C++ Info",
          "description": "- name: `variableNames`(ctype: `hkArray<hkStringPtr>`)\n - offset: ` 20`(x86)/` 32`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "eventNames",
        "variableNames"
      ]
    },
    "hkbLookAtModifier": {
      "title": "C++ Info",
      "description": "- name: `hkbLookAtModifier`\n - version: `3`\n - signature: `0x3d28e066`\n - size: `208`(x86)/`240`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "cloneState": {
          "title": "C++ Info",
          "description": "- name: `cloneState`(ctype: `enum unknown`)\n - offset: ` 38`(x86)/` 66`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "enable": {
          "title": "C++ Info",
          "description": "- name: `enable`(ctype: `hkBool`)\n - offset: ` 40`(x86)/` 72`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "eyePositionHS": {
          "title": "C++ Info",
          "description": "- name: `eyePositionHS`(ctype: `hkVector4`)\n - offset: `112`(x86)/`144`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "headForwardLS": {
          "title": "C++ Info",
          "description": "- name: `headForwardLS`(ctype: `hkVector4`)\n - offset: ` 64`(x86)/` 96`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "headIndex": {
          "title": "C++ Info",
          "description": "- name: `headIndex`(ctype: `hkInt16`)\n - offset: `160`(x86)/`192`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "int16"
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkInt16`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "individualLimitsOn": {
          "title": "C++ Info",
          "description": "- name: `individualLimitsOn`(ctype: `hkBool`)\n - offset: `165`(x86)/`197`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "isOn": {
          "title": "C++ Info",
          "description": "- name: `isOn`(ctype: `hkBool`)\n - offset: `164`(x86)/`196`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "isTargetInsideLimitCone": {
          "title": "C++ Info",
          "description": "- name: `isTargetInsideLimitCone`(ctype: `hkBool`)\n - offset: `166`(x86)/`198`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "limitAngleDegrees": {
          "title": "C++ Info",
          "description": "- name: `limitAngleDegrees`(ctype: `hkReal`)\n - offset: `140`(x86)/`172`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "limitAngleDown": {
          "title": "C++ Info",
          "description": "- name: `limitAngleDown`(ctype: `hkReal`)\n - offset: `156`(x86)/`188`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "limitAngleLeft": {
          "title": "C++ Info",
          "description": "- name: `limitAngleLeft`(ctype: `hkReal`)\n - offset: `144`(x86)/`176`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "limitAngleRight": {
          "title": "C++ Info",
          "description": "- name: `limitAngleRight`(ctype: `hkReal`)\n - offset: `148`(x86)/`180`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "limitAngleUp": {
          "title": "C++ Info",
          "description": "- name: `limitAngleUp`(ctype: `hkReal`)\n - offset: `152`(x86)/`184`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "lookAtLastTargetWS": {
          "title": "C++ Info",
          "description": "- name: `lookAtLastTargetWS`(ctype: `hkVector4`)\n - offset: `176`(x86)/`208`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "$ref": "#/$defs/Vector4"
        },
        "lookAtWeight": {
          "title": "C++ Info",
          "description": "- name: `lookAtWeight`(ctype: `hkReal`)\n - offset: `192`(x86)/`224`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "number",
          "format": "float"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "neckForwardLS": {
          "title": "C++ Info",
          "description": "- name: `neckForwardLS`(ctype: `hkVector4`)\n - offset: ` 80`(x86)/`112`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "neckIndex": {
          "title": "C++ Info",
          "description": "- name: `neckIndex`(ctype: `hkInt16`)\n - offset: `162`(x86)/`194`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "int16"
        },
        "neckRightLS": {
          "title": "C++ Info",
          "description": "- name: `neckRightLS`(ctype: `hkVector4`)\n - offset: ` 96`(x86)/`128`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "newTargetGain": {
          "title": "C++ Info",
          "description": "- name: `newTargetGain`(ctype: `hkReal`)\n - offset: `128`(x86)/`160`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "offGain": {
          "title": "C++ Info",
          "description": "- name: `offGain`(ctype: `hkReal`)\n - offset: `136`(x86)/`168`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "onGain": {
          "title": "C++ Info",
          "description": "- name: `onGain`(ctype: `hkReal`)\n - offset: `132`(x86)/`164`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "padModifier": {
          "title": "C++ Info",
          "description": "- name: `padModifier`(ctype: `hkBool[3]`)\n - offset: ` 41`(x86)/` 73`(x86_64)\n - type_size: `  3`(x86)/`  3`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 3,
          "minItems": 3
        },
        "padNode": {
          "title": "C++ Info",
          "description": "- name: `padNode`(ctype: `hkBool[1]`)\n - offset: ` 39`(x86)/` 67`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 1,
          "minItems": 1
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "targetWS": {
          "title": "C++ Info",
          "description": "- name: `targetWS`(ctype: `hkVector4`)\n - offset: ` 48`(x86)/` 80`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "userData",
        "id",
        "cloneState",
        "padNode",
        "enable",
        "padModifier",
        "targetWS",
        "headForwardLS",
        "neckForwardLS",
        "neckRightLS",
        "eyePositionHS",
        "newTargetGain",
        "onGain",
        "offGain",
        "limitAngleDegrees",
        "limitAngleLeft",
        "limitAngleRight",
        "limitAngleUp",
        "limitAngleDown",
        "headIndex",
        "neckIndex",
        "isOn",
        "individualLimitsOn",
        "isTargetInsideLimitCone",
        "lookAtLastTargetWS",
        "lookAtWeight"
      ]
    },
    "hkbLookAtModifierInternalState": {
      "title": "C++ Info",
      "description": "- name: `hkbLookAtModifierInternalState`\n - version: `0`\n - signature: `0xa14caba6`\n - size: ` 48`(x86)/` 48`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "isTargetInsideLimitCone": {
          "title": "C++ Info",
          "description": "- name: `isTargetInsideLimitCone`(ctype: `hkBool`)\n - offset: ` 36`(x86)/` 36`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "lookAtLastTargetWS": {
          "title": "C++ Info",
          "description": "- name: `lookAtLastTargetWS`(ctype: `hkVector4`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "lookAtWeight": {
          "title": "C++ Info",
          "description": "- name: `lookAtWeight`(ctype: `hkReal`)\n - offset: ` 32`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "lookAtLastTargetWS",
        "lookAtWeight",
        "isTargetInsideLimitCone"
      ]
    },
    "hkbManualSelectorGenerator": {
      "title": "C++ Info",
      "description": "- name: `hkbManualSelectorGenerator`\n - version: `0`\n - signature: `0xd932fab8`\n - size: ` 56`(x86)/` 96`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "cloneState": {
          "title": "C++ Info",
          "description": "- name: `cloneState`(ctype: `enum unknown`)\n - offset: ` 38`(x86)/` 66`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "currentGeneratorIndex": {
          "title": "C++ Info",
          "description": "- name: `currentGeneratorIndex`(ctype: `hkInt8`)\n - offset: ` 53`(x86)/` 89`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "int8"
        },
        "generators": {
          "title": "C++ Info",
          "description": "- name: `generators`(ctype: `hkArray<hkbGenerator*>`)\n - offset: ` 40`(x86)/` 72`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkInt16`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "padNode": {
          "title": "C++ Info",
          "description": "- name: `padNode`(ctype: `hkBool[1]`)\n - offset: ` 39`(x86)/` 67`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 1,
          "minItems": 1
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "selectedGeneratorIndex": {
          "title": "C++ Info",
          "description": "- name: `selectedGeneratorIndex`(ctype: `hkInt8`)\n - offset: ` 52`(x86)/` 88`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "int8"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "userData",
        "id",
        "cloneState",
        "padNode",
        "generators",
        "selectedGeneratorIndex",
        "currentGeneratorIndex"
      ]
    },
    "hkbManualSelectorGeneratorInternalState": {
      "title": "C++ Info",
      "description": "- name: `hkbManualSelectorGeneratorInternalState`\n - version: `0`\n - signature: `0x492c6137`\n - size: ` 12`(x86)/` 24`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "currentGeneratorIndex": {
          "title": "C++ Info",
          "description": "- name: `currentGeneratorIndex`(ctype: `hkInt8`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "int8"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "currentGeneratorIndex"
      ]
    },
    "hkbMessageLog": {
      "title": "C++ Info",
      "description": "- name: `hkbMessageLog`\n - version: `0`\n - signature: `0x26a196c5`\n - size: `  8`(x86)/` 16`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "maxMessages": {
          "title": "C++ Info",
          "description": "- name: `maxMessages`(ctype: `hkInt32`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int32"
        },
        "messages": {
          "title": "C++ Info",
          "description": "- name: `messages`(ctype: `void*`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        }
      },
      "required": [
        "messages",
        "maxMessages"
      ]
    },
    "hkbMirrorModifier": {
      "title": "C++ Info",
      "description": "- name: `hkbMirrorModifier`\n - version: `0`\n - signature: `0xa9a271ea`\n - size: ` 48`(x86)/` 88`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "cloneState": {
          "title": "C++ Info",
          "description": "- name: `cloneState`(ctype: `enum unknown`)\n - offset: ` 38`(x86)/` 66`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "enable": {
          "title": "C++ Info",
          "description": "- name: `enable`(ctype: `hkBool`)\n - offset: ` 40`(x86)/` 72`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkInt16`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "isAdditive": {
          "title": "C++ Info",
          "description": "- name: `isAdditive`(ctype: `hkBool`)\n - offset: ` 44`(x86)/` 80`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "padModifier": {
          "title": "C++ Info",
          "description": "- name: `padModifier`(ctype: `hkBool[3]`)\n - offset: ` 41`(x86)/` 73`(x86_64)\n - type_size: `  3`(x86)/`  3`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 3,
          "minItems": 3
        },
        "padNode": {
          "title": "C++ Info",
          "description": "- name: `padNode`(ctype: `hkBool[1]`)\n - offset: ` 39`(x86)/` 67`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 1,
          "minItems": 1
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "userData",
        "id",
        "cloneState",
        "padNode",
        "enable",
        "padModifier",
        "isAdditive"
      ]
    },
    "hkbMirroredSkeletonInfo": {
      "title": "C++ Info",
      "description": "- name: `hkbMirroredSkeletonInfo`\n - version: `0`\n - signature: `0xc6c2da4f`\n - size: ` 48`(x86)/` 48`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "bonePairMap": {
          "title": "C++ Info",
          "description": "- name: `bonePairMap`(ctype: `hkArray<hkInt16>`)\n - offset: ` 32`(x86)/` 32`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int16"
          }
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "mirrorAxis": {
          "title": "C++ Info",
          "description": "- name: `mirrorAxis`(ctype: `hkVector4`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "mirrorAxis",
        "bonePairMap"
      ]
    },
    "hkbModifier": {
      "title": "C++ Info",
      "description": "- name: `hkbModifier`\n - version: `0`\n - signature: `0x96ec5ced`\n - size: ` 44`(x86)/` 80`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "cloneState": {
          "title": "C++ Info",
          "description": "- name: `cloneState`(ctype: `enum unknown`)\n - offset: ` 38`(x86)/` 66`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "enable": {
          "title": "C++ Info",
          "description": "- name: `enable`(ctype: `hkBool`)\n - offset: ` 40`(x86)/` 72`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkInt16`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "padModifier": {
          "title": "C++ Info",
          "description": "- name: `padModifier`(ctype: `hkBool[3]`)\n - offset: ` 41`(x86)/` 73`(x86_64)\n - type_size: `  3`(x86)/`  3`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 3,
          "minItems": 3
        },
        "padNode": {
          "title": "C++ Info",
          "description": "- name: `padNode`(ctype: `hkBool[1]`)\n - offset: ` 39`(x86)/` 67`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 1,
          "minItems": 1
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "userData",
        "id",
        "cloneState",
        "padNode",
        "enable",
        "padModifier"
      ]
    },
    "hkbModifierGenerator": {
      "title": "C++ Info",
      "description": "- name: `hkbModifierGenerator`\n - version: `0`\n - signature: `0x1f81fae6`\n - size: ` 48`(x86)/` 88`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "cloneState": {
          "title": "C++ Info",
          "description": "- name: `cloneState`(ctype: `enum unknown`)\n - offset: ` 38`(x86)/` 66`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "generator": {
          "title": "C++ Info",
          "description": "- name: `generator`(ctype: `struct hkbGenerator*`)\n - offset: ` 44`(x86)/` 80`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkInt16`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "modifier": {
          "title": "C++ Info",
          "description": "- name: `modifier`(ctype: `struct hkbModifier*`)\n - offset: ` 40`(x86)/` 72`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "padNode": {
          "title": "C++ Info",
          "description": "- name: `padNode`(ctype: `hkBool[1]`)\n - offset: ` 39`(x86)/` 67`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 1,
          "minItems": 1
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "userData",
        "id",
        "cloneState",
        "padNode",
        "modifier",
        "generator"
      ]
    },
    "hkbModifierList": {
      "title": "C++ Info",
      "description": "- name: `hkbModifierList`\n - version: `0`\n - signature: `0xa4180ca1`\n - size: ` 56`(x86)/` 96`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "cloneState": {
          "title": "C++ Info",
          "description": "- name: `cloneState`(ctype: `enum unknown`)\n - offset: ` 38`(x86)/` 66`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "enable": {
          "title": "C++ Info",
          "description": "- name: `enable`(ctype: `hkBool`)\n - offset: ` 40`(x86)/` 72`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkInt16`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "modifiers": {
          "title": "C++ Info",
          "description": "- name: `modifiers`(ctype: `hkArray<hkbModifier*>`)\n - offset: ` 44`(x86)/` 80`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "padModifier": {
          "title": "C++ Info",
          "description": "- name: `padModifier`(ctype: `hkBool[3]`)\n - offset: ` 41`(x86)/` 73`(x86_64)\n - type_size: `  3`(x86)/`  3`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 3,
          "minItems": 3
        },
        "padNode": {
          "title": "C++ Info",
          "description": "- name: `padNode`(ctype: `hkBool[1]`)\n - offset: ` 39`(x86)/` 67`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 1,
          "minItems": 1
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "userData",
        "id",
        "cloneState",
        "padNode",
        "enable",
        "padModifier",
        "modifiers"
      ]
    },
    "hkbModifierWrapper": {
      "title": "C++ Info",
      "description": "- name: `hkbModifierWrapper`\n - version: `0`\n - signature: `0x3697e044`\n - size: ` 48`(x86)/` 88`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "cloneState": {
          "title": "C++ Info",
          "description": "- name: `cloneState`(ctype: `enum unknown`)\n - offset: ` 38`(x86)/` 66`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "enable": {
          "title": "C++ Info",
          "description": "- name: `enable`(ctype: `hkBool`)\n - offset: ` 40`(x86)/` 72`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkInt16`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "modifier": {
          "title": "C++ Info",
          "description": "- name: `modifier`(ctype: `struct hkbModifier*`)\n - offset: ` 44`(x86)/` 80`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "padModifier": {
          "title": "C++ Info",
          "description": "- name: `padModifier`(ctype: `hkBool[3]`)\n - offset: ` 41`(x86)/` 73`(x86_64)\n - type_size: `  3`(x86)/`  3`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 3,
          "minItems": 3
        },
        "padNode": {
          "title": "C++ Info",
          "description": "- name: `padNode`(ctype: `hkBool[1]`)\n - offset: ` 39`(x86)/` 67`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 1,
          "minItems": 1
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "userData",
        "id",
        "cloneState",
        "padNode",
        "enable",
        "padModifier",
        "modifier"
      ]
    },
    "hkbMoveCharacterModifier": {
      "title": "C++ Info",
      "description": "- name: `hkbMoveCharacterModifier`\n - version: `0`\n - signature: `0x8f7492a0`\n - size: ` 80`(x86)/`112`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "cloneState": {
          "title": "C++ Info",
          "description": "- name: `cloneState`(ctype: `enum unknown`)\n - offset: ` 38`(x86)/` 66`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "enable": {
          "title": "C++ Info",
          "description": "- name: `enable`(ctype: `hkBool`)\n - offset: ` 40`(x86)/` 72`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkInt16`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "offsetPerSecondMS": {
          "title": "C++ Info",
          "description": "- name: `offsetPerSecondMS`(ctype: `hkVector4`)\n - offset: ` 48`(x86)/` 80`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "padModifier": {
          "title": "C++ Info",
          "description": "- name: `padModifier`(ctype: `hkBool[3]`)\n - offset: ` 41`(x86)/` 73`(x86_64)\n - type_size: `  3`(x86)/`  3`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 3,
          "minItems": 3
        },
        "padNode": {
          "title": "C++ Info",
          "description": "- name: `padNode`(ctype: `hkBool[1]`)\n - offset: ` 39`(x86)/` 67`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 1,
          "minItems": 1
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "timeSinceLastModify": {
          "title": "C++ Info",
          "description": "- name: `timeSinceLastModify`(ctype: `hkReal`)\n - offset: ` 64`(x86)/` 96`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "number",
          "format": "float"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "userData",
        "id",
        "cloneState",
        "padNode",
        "enable",
        "padModifier",
        "offsetPerSecondMS",
        "timeSinceLastModify"
      ]
    },
    "hkbMoveCharacterModifierInternalState": {
      "title": "C++ Info",
      "description": "- name: `hkbMoveCharacterModifierInternalState`\n - version: `0`\n - signature: `0x28f67ba0`\n - size: ` 12`(x86)/` 24`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "timeSinceLastModify": {
          "title": "C++ Info",
          "description": "- name: `timeSinceLastModify`(ctype: `hkReal`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "timeSinceLastModify"
      ]
    },
    "hkbNamedEventPayload": {
      "title": "C++ Info",
      "description": "- name: `hkbNamedEventPayload`\n - version: `0`\n - signature: `0x65bdd3a0`\n - size: ` 12`(x86)/` 24`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount"
      ]
    },
    "hkbNamedIntEventPayload": {
      "title": "C++ Info",
      "description": "- name: `hkbNamedIntEventPayload`\n - version: `0`\n - signature: `0x3c99bda4`\n - size: ` 16`(x86)/` 32`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "data": {
          "title": "C++ Info",
          "description": "- name: `data`(ctype: `hkInt32`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "data"
      ]
    },
    "hkbNamedRealEventPayload": {
      "title": "C++ Info",
      "description": "- name: `hkbNamedRealEventPayload`\n - version: `0`\n - signature: `0x9c99fd70`\n - size: ` 16`(x86)/` 32`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "data": {
          "title": "C++ Info",
          "description": "- name: `data`(ctype: `hkReal`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "data"
      ]
    },
    "hkbNamedStringEventPayload": {
      "title": "C++ Info",
      "description": "- name: `hkbNamedStringEventPayload`\n - version: `0`\n - signature: `0x6caa9113`\n - size: ` 16`(x86)/` 32`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "data": {
          "title": "C++ Info",
          "description": "- name: `data`(ctype: `hkStringPtr`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount"
      ]
    },
    "hkbNode": {
      "title": "C++ Info",
      "description": "- name: `hkbNode`\n - version: `1`\n - signature: `0x6d26f61d`\n - size: ` 40`(x86)/` 72`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "cloneState": {
          "title": "C++ Info",
          "description": "- name: `cloneState`(ctype: `enum unknown`)\n - offset: ` 38`(x86)/` 66`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkInt16`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "padNode": {
          "title": "C++ Info",
          "description": "- name: `padNode`(ctype: `hkBool[1]`)\n - offset: ` 39`(x86)/` 67`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 1,
          "minItems": 1
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "userData",
        "id",
        "cloneState",
        "padNode"
      ]
    },
    "hkbNodeInternalStateInfo": {
      "title": "C++ Info",
      "description": "- name: `hkbNodeInternalStateInfo`\n - version: `0`\n - signature: `0x7db9971d`\n - size: `100`(x86)/`120`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "hasActivateBeenCalled": {
          "title": "C++ Info",
          "description": "- name: `hasActivateBeenCalled`(ctype: `hkBool`)\n - offset: ` 98`(x86)/`114`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "internalState": {
          "title": "C++ Info",
          "description": "- name: `internalState`(ctype: `struct hkReferencedObject*`)\n - offset: ` 92`(x86)/`104`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 88`(x86)/` 96`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "nodeId": {
          "title": "C++ Info",
          "description": "- name: `nodeId`(ctype: `hkInt16`)\n - offset: ` 96`(x86)/`112`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "int16"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "syncInfo": {
          "title": "C++ Info",
          "description": "- name: `syncInfo`(ctype: `struct hkbGeneratorSyncInfo`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 80`(x86)/` 80`(x86_64)",
          "$ref": "#/$defs/hkbGeneratorSyncInfo"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "syncInfo",
        "internalState",
        "nodeId",
        "hasActivateBeenCalled"
      ]
    },
    "hkbParticleSystemEventPayload": {
      "title": "C++ Info",
      "description": "- name: `hkbParticleSystemEventPayload`\n - version: `0`\n - signature: `0x9df46cd6`\n - size: ` 64`(x86)/` 80`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum SystemType`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/SystemType"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "direction": {
          "title": "C++ Info",
          "description": "- name: `direction`(ctype: `hkVector4`)\n - offset: ` 32`(x86)/` 48`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "emitBoneIndex": {
          "title": "C++ Info",
          "description": "- name: `emitBoneIndex`(ctype: `hkInt16`)\n - offset: ` 10`(x86)/` 18`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "int16"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "numParticles": {
          "title": "C++ Info",
          "description": "- name: `numParticles`(ctype: `hkInt32`)\n - offset: ` 48`(x86)/` 64`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "offset": {
          "title": "C++ Info",
          "description": "- name: `offset`(ctype: `hkVector4`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "speed": {
          "title": "C++ Info",
          "description": "- name: `speed`(ctype: `hkReal`)\n - offset: ` 52`(x86)/` 68`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "type",
        "emitBoneIndex",
        "offset",
        "direction",
        "numParticles",
        "speed"
      ]
    },
    "hkbPoseMatchingGenerator": {
      "title": "C++ Info",
      "description": "- name: `hkbPoseMatchingGenerator`\n - version: `2`\n - signature: `0x29e271b4`\n - size: `208`(x86)/`240`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "anotherBoneIndex": {
          "title": "C++ Info",
          "description": "- name: `anotherBoneIndex`(ctype: `hkInt16`)\n - offset: `172`(x86)/`204`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "int16"
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "beginIntervalIndex": {
          "title": "C++ Info",
          "description": "- name: `beginIntervalIndex`(ctype: `hkInt16`)\n - offset: `108`(x86)/`152`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "bestMatch": {
          "title": "C++ Info",
          "description": "- name: `bestMatch`(ctype: `hkInt32`)\n - offset: `184`(x86)/`216`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int32"
        },
        "blendParameter": {
          "title": "C++ Info",
          "description": "- name: `blendParameter`(ctype: `hkReal`)\n - offset: ` 44`(x86)/` 76`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "blendSpeed": {
          "title": "C++ Info",
          "description": "- name: `blendSpeed`(ctype: `hkReal`)\n - offset: `144`(x86)/`176`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "children": {
          "title": "C++ Info",
          "description": "- name: `children`(ctype: `hkArray<hkbBlenderGeneratorChild*>`)\n - offset: ` 64`(x86)/` 96`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "childrenInternalStates": {
          "title": "C++ Info",
          "description": "- name: `childrenInternalStates`(ctype: `hkArray<void>`)\n - offset: ` 76`(x86)/`112`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "cloneState": {
          "title": "C++ Info",
          "description": "- name: `cloneState`(ctype: `enum unknown`)\n - offset: ` 38`(x86)/` 66`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "currentMatch": {
          "title": "C++ Info",
          "description": "- name: `currentMatch`(ctype: `hkInt32`)\n - offset: `180`(x86)/`212`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int32"
        },
        "doSubtractiveBlend": {
          "title": "C++ Info",
          "description": "- name: `doSubtractiveBlend`(ctype: `hkBool`)\n - offset: `113`(x86)/`157`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "endIntervalIndex": {
          "title": "C++ Info",
          "description": "- name: `endIntervalIndex`(ctype: `hkInt16`)\n - offset: `110`(x86)/`154`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "endIntervalWeight": {
          "title": "C++ Info",
          "description": "- name: `endIntervalWeight`(ctype: `hkReal`)\n - offset: `100`(x86)/`144`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "number",
          "format": "float"
        },
        "error": {
          "title": "C++ Info",
          "description": "- name: `error`(ctype: `hkReal`)\n - offset: `192`(x86)/`224`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "number",
          "format": "float"
        },
        "flags": {
          "title": "C++ Info",
          "description": "- name: `flags`(ctype: `hkInt16`)\n - offset: ` 58`(x86)/` 90`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "int16"
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkInt16`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "indexOfSyncMasterChild": {
          "title": "C++ Info",
          "description": "- name: `indexOfSyncMasterChild`(ctype: `hkInt16`)\n - offset: ` 56`(x86)/` 88`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "int16"
        },
        "initSync": {
          "title": "C++ Info",
          "description": "- name: `initSync`(ctype: `hkBool`)\n - offset: `112`(x86)/`156`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "maxCyclicBlendParameter": {
          "title": "C++ Info",
          "description": "- name: `maxCyclicBlendParameter`(ctype: `hkReal`)\n - offset: ` 52`(x86)/` 84`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "minCyclicBlendParameter": {
          "title": "C++ Info",
          "description": "- name: `minCyclicBlendParameter`(ctype: `hkReal`)\n - offset: ` 48`(x86)/` 80`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "minSpeedToSwitch": {
          "title": "C++ Info",
          "description": "- name: `minSpeedToSwitch`(ctype: `hkReal`)\n - offset: `148`(x86)/`180`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "minSwitchTimeFullError": {
          "title": "C++ Info",
          "description": "- name: `minSwitchTimeFullError`(ctype: `hkReal`)\n - offset: `156`(x86)/`188`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "minSwitchTimeNoError": {
          "title": "C++ Info",
          "description": "- name: `minSwitchTimeNoError`(ctype: `hkReal`)\n - offset: `152`(x86)/`184`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "mode": {
          "title": "C++ Info",
          "description": "- name: `mode`(ctype: `enum Mode`)\n - offset: `176`(x86)/`208`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/Mode"
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "numActiveChildren": {
          "title": "C++ Info",
          "description": "- name: `numActiveChildren`(ctype: `hkInt32`)\n - offset: `104`(x86)/`148`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int32"
        },
        "otherBoneIndex": {
          "title": "C++ Info",
          "description": "- name: `otherBoneIndex`(ctype: `hkInt16`)\n - offset: `170`(x86)/`202`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "int16"
        },
        "padNode": {
          "title": "C++ Info",
          "description": "- name: `padNode`(ctype: `hkBool[1]`)\n - offset: ` 39`(x86)/` 67`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 1,
          "minItems": 1
        },
        "pelvisIndex": {
          "title": "C++ Info",
          "description": "- name: `pelvisIndex`(ctype: `hkInt16`)\n - offset: `174`(x86)/`206`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "int16"
        },
        "poseMatchingUtility": {
          "title": "C++ Info",
          "description": "- name: `poseMatchingUtility`(ctype: `void*`)\n - offset: `200`(x86)/`232`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "referencePoseWeightThreshold": {
          "title": "C++ Info",
          "description": "- name: `referencePoseWeightThreshold`(ctype: `hkReal`)\n - offset: ` 40`(x86)/` 72`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "resetCurrentMatchLocalTime": {
          "title": "C++ Info",
          "description": "- name: `resetCurrentMatchLocalTime`(ctype: `hkBool`)\n - offset: `196`(x86)/`228`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "rootBoneIndex": {
          "title": "C++ Info",
          "description": "- name: `rootBoneIndex`(ctype: `hkInt16`)\n - offset: `168`(x86)/`200`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "int16"
        },
        "sortedChildren": {
          "title": "C++ Info",
          "description": "- name: `sortedChildren`(ctype: `hkArray<void>`)\n - offset: ` 88`(x86)/`128`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "startMatchingEventId": {
          "title": "C++ Info",
          "description": "- name: `startMatchingEventId`(ctype: `hkInt32`)\n - offset: `164`(x86)/`196`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "startPlayingEventId": {
          "title": "C++ Info",
          "description": "- name: `startPlayingEventId`(ctype: `hkInt32`)\n - offset: `160`(x86)/`192`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "subtractLastChild": {
          "title": "C++ Info",
          "description": "- name: `subtractLastChild`(ctype: `hkBool`)\n - offset: ` 60`(x86)/` 92`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "timeSinceBetterMatch": {
          "title": "C++ Info",
          "description": "- name: `timeSinceBetterMatch`(ctype: `hkReal`)\n - offset: `188`(x86)/`220`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "number",
          "format": "float"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "worldFromModelRotation": {
          "title": "C++ Info",
          "description": "- name: `worldFromModelRotation`(ctype: `hkQuaternion`)\n - offset: `128`(x86)/`160`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Quaternion"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "userData",
        "id",
        "cloneState",
        "padNode",
        "referencePoseWeightThreshold",
        "blendParameter",
        "minCyclicBlendParameter",
        "maxCyclicBlendParameter",
        "indexOfSyncMasterChild",
        "flags",
        "subtractLastChild",
        "children",
        "childrenInternalStates",
        "sortedChildren",
        "endIntervalWeight",
        "numActiveChildren",
        "beginIntervalIndex",
        "endIntervalIndex",
        "initSync",
        "doSubtractiveBlend",
        "worldFromModelRotation",
        "blendSpeed",
        "minSpeedToSwitch",
        "minSwitchTimeNoError",
        "minSwitchTimeFullError",
        "startPlayingEventId",
        "startMatchingEventId",
        "rootBoneIndex",
        "otherBoneIndex",
        "anotherBoneIndex",
        "pelvisIndex",
        "mode",
        "currentMatch",
        "bestMatch",
        "timeSinceBetterMatch",
        "error",
        "resetCurrentMatchLocalTime",
        "poseMatchingUtility"
      ]
    },
    "hkbPoseMatchingGeneratorInternalState": {
      "title": "C++ Info",
      "description": "- name: `hkbPoseMatchingGeneratorInternalState`\n - version: `0`\n - signature: `0x552d9dd4`\n - size: ` 28`(x86)/` 40`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "bestMatch": {
          "title": "C++ Info",
          "description": "- name: `bestMatch`(ctype: `hkInt32`)\n - offset: ` 12`(x86)/` 20`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "currentMatch": {
          "title": "C++ Info",
          "description": "- name: `currentMatch`(ctype: `hkInt32`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "error": {
          "title": "C++ Info",
          "description": "- name: `error`(ctype: `hkReal`)\n - offset: ` 20`(x86)/` 28`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "resetCurrentMatchLocalTime": {
          "title": "C++ Info",
          "description": "- name: `resetCurrentMatchLocalTime`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 32`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "timeSinceBetterMatch": {
          "title": "C++ Info",
          "description": "- name: `timeSinceBetterMatch`(ctype: `hkReal`)\n - offset: ` 16`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "currentMatch",
        "bestMatch",
        "timeSinceBetterMatch",
        "error",
        "resetCurrentMatchLocalTime"
      ]
    },
    "hkbPoweredRagdollControlData": {
      "title": "C++ Info",
      "description": "- name: `hkbPoweredRagdollControlData`\n - version: `3`\n - signature: `0xf5ba21b`\n - size: ` 32`(x86)/` 32`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "constantRecoveryVelocity": {
          "title": "C++ Info",
          "description": "- name: `constantRecoveryVelocity`(ctype: `hkReal`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "damping": {
          "title": "C++ Info",
          "description": "- name: `damping`(ctype: `hkReal`)\n - offset: `  8`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "maxForce": {
          "title": "C++ Info",
          "description": "- name: `maxForce`(ctype: `hkReal`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `ALIGN_16`",
          "type": "number",
          "format": "float"
        },
        "proportionalRecoveryVelocity": {
          "title": "C++ Info",
          "description": "- name: `proportionalRecoveryVelocity`(ctype: `hkReal`)\n - offset: ` 12`(x86)/` 12`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "tau": {
          "title": "C++ Info",
          "description": "- name: `tau`(ctype: `hkReal`)\n - offset: `  4`(x86)/`  4`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        }
      },
      "required": [
        "maxForce",
        "tau",
        "damping",
        "proportionalRecoveryVelocity",
        "constantRecoveryVelocity"
      ]
    },
    "hkbPoweredRagdollControlsModifier": {
      "title": "C++ Info",
      "description": "- name: `hkbPoweredRagdollControlsModifier`\n - version: `5`\n - signature: `0x7cb54065`\n - size: ` 96`(x86)/`144`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "boneWeights": {
          "title": "C++ Info",
          "description": "- name: `boneWeights`(ctype: `struct hkbBoneWeightArray*`)\n - offset: ` 92`(x86)/`128`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "bones": {
          "title": "C++ Info",
          "description": "- name: `bones`(ctype: `struct hkbBoneIndexArray*`)\n - offset: ` 80`(x86)/`112`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "cloneState": {
          "title": "C++ Info",
          "description": "- name: `cloneState`(ctype: `enum unknown`)\n - offset: ` 38`(x86)/` 66`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "controlData": {
          "title": "C++ Info",
          "description": "- name: `controlData`(ctype: `struct hkbPoweredRagdollControlData`)\n - offset: ` 48`(x86)/` 80`(x86_64)\n - type_size: ` 32`(x86)/` 32`(x86_64)",
          "$ref": "#/$defs/hkbPoweredRagdollControlData"
        },
        "enable": {
          "title": "C++ Info",
          "description": "- name: `enable`(ctype: `hkBool`)\n - offset: ` 40`(x86)/` 72`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkInt16`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "padModifier": {
          "title": "C++ Info",
          "description": "- name: `padModifier`(ctype: `hkBool[3]`)\n - offset: ` 41`(x86)/` 73`(x86_64)\n - type_size: `  3`(x86)/`  3`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 3,
          "minItems": 3
        },
        "padNode": {
          "title": "C++ Info",
          "description": "- name: `padNode`(ctype: `hkBool[1]`)\n - offset: ` 39`(x86)/` 67`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 1,
          "minItems": 1
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "worldFromModelModeData": {
          "title": "C++ Info",
          "description": "- name: `worldFromModelModeData`(ctype: `struct hkbWorldFromModelModeData`)\n - offset: ` 84`(x86)/`120`(x86_64)\n - type_size: `  8`(x86)/`  8`(x86_64)",
          "$ref": "#/$defs/hkbWorldFromModelModeData"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "userData",
        "id",
        "cloneState",
        "padNode",
        "enable",
        "padModifier",
        "controlData",
        "bones",
        "worldFromModelModeData",
        "boneWeights"
      ]
    },
    "hkbProjectData": {
      "title": "C++ Info",
      "description": "- name: `hkbProjectData`\n - version: `2`\n - signature: `0x13a39ba7`\n - size: ` 48`(x86)/` 48`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "defaultEventMode": {
          "title": "C++ Info",
          "description": "- name: `defaultEventMode`(ctype: `enum EventMode`)\n - offset: ` 36`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/EventMode"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "stringData": {
          "title": "C++ Info",
          "description": "- name: `stringData`(ctype: `struct hkbProjectStringData*`)\n - offset: ` 32`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "worldUpWS": {
          "title": "C++ Info",
          "description": "- name: `worldUpWS`(ctype: `hkVector4`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "worldUpWS",
        "stringData",
        "defaultEventMode"
      ]
    },
    "hkbProjectStringData": {
      "title": "C++ Info",
      "description": "- name: `hkbProjectStringData`\n - version: `1`\n - signature: `0x76ad60a`\n - size: ` 76`(x86)/`120`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "animationFilenames": {
          "title": "C++ Info",
          "description": "- name: `animationFilenames`(ctype: `hkArray<hkStringPtr>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "animationPath": {
          "title": "C++ Info",
          "description": "- name: `animationPath`(ctype: `hkStringPtr`)\n - offset: ` 56`(x86)/` 80`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "behaviorFilenames": {
          "title": "C++ Info",
          "description": "- name: `behaviorFilenames`(ctype: `hkArray<hkStringPtr>`)\n - offset: ` 20`(x86)/` 32`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "behaviorPath": {
          "title": "C++ Info",
          "description": "- name: `behaviorPath`(ctype: `hkStringPtr`)\n - offset: ` 60`(x86)/` 88`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "characterFilenames": {
          "title": "C++ Info",
          "description": "- name: `characterFilenames`(ctype: `hkArray<hkStringPtr>`)\n - offset: ` 32`(x86)/` 48`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "characterPath": {
          "title": "C++ Info",
          "description": "- name: `characterPath`(ctype: `hkStringPtr`)\n - offset: ` 64`(x86)/` 96`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "eventNames": {
          "title": "C++ Info",
          "description": "- name: `eventNames`(ctype: `hkArray<hkStringPtr>`)\n - offset: ` 44`(x86)/` 64`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "fullPathToSource": {
          "title": "C++ Info",
          "description": "- name: `fullPathToSource`(ctype: `hkStringPtr`)\n - offset: ` 68`(x86)/`104`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "rootPath": {
          "title": "C++ Info",
          "description": "- name: `rootPath`(ctype: `hkStringPtr`)\n - offset: ` 72`(x86)/`112`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "animationFilenames",
        "behaviorFilenames",
        "characterFilenames",
        "eventNames"
      ]
    },
    "hkbProxyModifier": {
      "title": "C++ Info",
      "description": "- name: `hkbProxyModifier`\n - version: `1`\n - signature: `0x8a41554f`\n - size: `256`(x86)/`288`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "capsuleHeight": {
          "title": "C++ Info",
          "description": "- name: `capsuleHeight`(ctype: `hkReal`)\n - offset: `176`(x86)/`208`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "capsuleRadius": {
          "title": "C++ Info",
          "description": "- name: `capsuleRadius`(ctype: `hkReal`)\n - offset: `180`(x86)/`212`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "characterProxy": {
          "title": "C++ Info",
          "description": "- name: `characterProxy`(ctype: `void*`)\n - offset: `200`(x86)/`232`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "cloneState": {
          "title": "C++ Info",
          "description": "- name: `cloneState`(ctype: `enum unknown`)\n - offset: ` 38`(x86)/` 66`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "collisionFilterInfo": {
          "title": "C++ Info",
          "description": "- name: `collisionFilterInfo`(ctype: `hkUint32`)\n - offset: `188`(x86)/`220`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "enable": {
          "title": "C++ Info",
          "description": "- name: `enable`(ctype: `hkBool`)\n - offset: ` 40`(x86)/` 72`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "followWorldFromModel": {
          "title": "C++ Info",
          "description": "- name: `followWorldFromModel`(ctype: `hkBool`)\n - offset: `198`(x86)/`230`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "horizontalDisplacement": {
          "title": "C++ Info",
          "description": "- name: `horizontalDisplacement`(ctype: `hkVector4`)\n - offset: `224`(x86)/`256`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "$ref": "#/$defs/Vector4"
        },
        "horizontalGain": {
          "title": "C++ Info",
          "description": "- name: `horizontalGain`(ctype: `hkReal`)\n - offset: `144`(x86)/`176`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkInt16`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "ignoreCollisionDuringRotation": {
          "title": "C++ Info",
          "description": "- name: `ignoreCollisionDuringRotation`(ctype: `hkBool`)\n - offset: `195`(x86)/`227`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "ignoreIncomingRotation": {
          "title": "C++ Info",
          "description": "- name: `ignoreIncomingRotation`(ctype: `hkBool`)\n - offset: `194`(x86)/`226`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "ignoreIncomingTranslation": {
          "title": "C++ Info",
          "description": "- name: `ignoreIncomingTranslation`(ctype: `hkBool`)\n - offset: `196`(x86)/`228`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "includeDownwardMomentum": {
          "title": "C++ Info",
          "description": "- name: `includeDownwardMomentum`(ctype: `hkBool`)\n - offset: `197`(x86)/`229`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "isTouchingGround": {
          "title": "C++ Info",
          "description": "- name: `isTouchingGround`(ctype: `hkBool`)\n - offset: `199`(x86)/`231`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "linearVelocity": {
          "title": "C++ Info",
          "description": "- name: `linearVelocity`(ctype: `hkVector4`)\n - offset: `128`(x86)/`160`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "linearVelocityMode": {
          "title": "C++ Info",
          "description": "- name: `linearVelocityMode`(ctype: `enum LinearVelocityMode`)\n - offset: `193`(x86)/`225`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/LinearVelocityMode"
        },
        "maxHorizontalSeparation": {
          "title": "C++ Info",
          "description": "- name: `maxHorizontalSeparation`(ctype: `hkReal`)\n - offset: `152`(x86)/`184`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "maxSlopeForRotation": {
          "title": "C++ Info",
          "description": "- name: `maxSlopeForRotation`(ctype: `hkReal`)\n - offset: `184`(x86)/`216`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "maxVerticalDisplacement": {
          "title": "C++ Info",
          "description": "- name: `maxVerticalDisplacement`(ctype: `hkReal`)\n - offset: `168`(x86)/`200`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "maxVerticalSeparation": {
          "title": "C++ Info",
          "description": "- name: `maxVerticalSeparation`(ctype: `hkReal`)\n - offset: `156`(x86)/`188`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "minVerticalDisplacement": {
          "title": "C++ Info",
          "description": "- name: `minVerticalDisplacement`(ctype: `hkReal`)\n - offset: `172`(x86)/`204`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "padModifier": {
          "title": "C++ Info",
          "description": "- name: `padModifier`(ctype: `hkBool[3]`)\n - offset: ` 41`(x86)/` 73`(x86_64)\n - type_size: `  3`(x86)/`  3`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 3,
          "minItems": 3
        },
        "padNode": {
          "title": "C++ Info",
          "description": "- name: `padNode`(ctype: `hkBool[1]`)\n - offset: ` 39`(x86)/` 67`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 1,
          "minItems": 1
        },
        "phantom": {
          "title": "C++ Info",
          "description": "- name: `phantom`(ctype: `void*`)\n - offset: `204`(x86)/`240`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "phantomShape": {
          "title": "C++ Info",
          "description": "- name: `phantomShape`(ctype: `void*`)\n - offset: `208`(x86)/`248`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "phantomType": {
          "title": "C++ Info",
          "description": "- name: `phantomType`(ctype: `enum PhantomType`)\n - offset: `192`(x86)/`224`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/PhantomType"
        },
        "previousFrameFollowWorldFromModel": {
          "title": "C++ Info",
          "description": "- name: `previousFrameFollowWorldFromModel`(ctype: `hkBool`)\n - offset: `248`(x86)/`280`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "proxyInfo": {
          "title": "C++ Info",
          "description": "- name: `proxyInfo`(ctype: `struct hkbProxyModifierProxyInfo`)\n - offset: ` 48`(x86)/` 80`(x86_64)\n - type_size: ` 80`(x86)/` 80`(x86_64)",
          "$ref": "#/$defs/hkbProxyModifierProxyInfo"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "timestep": {
          "title": "C++ Info",
          "description": "- name: `timestep`(ctype: `hkReal`)\n - offset: `244`(x86)/`276`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "number",
          "format": "float"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "verticalDisplacement": {
          "title": "C++ Info",
          "description": "- name: `verticalDisplacement`(ctype: `hkReal`)\n - offset: `240`(x86)/`272`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "number",
          "format": "float"
        },
        "verticalDisplacementError": {
          "title": "C++ Info",
          "description": "- name: `verticalDisplacementError`(ctype: `hkReal`)\n - offset: `160`(x86)/`192`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "verticalDisplacementErrorGain": {
          "title": "C++ Info",
          "description": "- name: `verticalDisplacementErrorGain`(ctype: `hkReal`)\n - offset: `164`(x86)/`196`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "verticalGain": {
          "title": "C++ Info",
          "description": "- name: `verticalGain`(ctype: `hkReal`)\n - offset: `148`(x86)/`180`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "userData",
        "id",
        "cloneState",
        "padNode",
        "enable",
        "padModifier",
        "proxyInfo",
        "linearVelocity",
        "horizontalGain",
        "verticalGain",
        "maxHorizontalSeparation",
        "maxVerticalSeparation",
        "verticalDisplacementError",
        "verticalDisplacementErrorGain",
        "maxVerticalDisplacement",
        "minVerticalDisplacement",
        "capsuleHeight",
        "capsuleRadius",
        "maxSlopeForRotation",
        "collisionFilterInfo",
        "phantomType",
        "linearVelocityMode",
        "ignoreIncomingRotation",
        "ignoreCollisionDuringRotation",
        "ignoreIncomingTranslation",
        "includeDownwardMomentum",
        "followWorldFromModel",
        "isTouchingGround",
        "characterProxy",
        "phantom",
        "phantomShape",
        "horizontalDisplacement",
        "verticalDisplacement",
        "timestep",
        "previousFrameFollowWorldFromModel"
      ]
    },
    "hkbProxyModifierProxyInfo": {
      "title": "C++ Info",
      "description": "- name: `hkbProxyModifierProxyInfo`\n - version: `0`\n - signature: `0x39de637e`\n - size: ` 80`(x86)/` 80`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "characterMass": {
          "title": "C++ Info",
          "description": "- name: `characterMass`(ctype: `hkReal`)\n - offset: ` 52`(x86)/` 52`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "characterStrength": {
          "title": "C++ Info",
          "description": "- name: `characterStrength`(ctype: `hkReal`)\n - offset: ` 48`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "contactAngleSensitivity": {
          "title": "C++ Info",
          "description": "- name: `contactAngleSensitivity`(ctype: `hkReal`)\n - offset: ` 36`(x86)/` 36`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "dynamicFriction": {
          "title": "C++ Info",
          "description": "- name: `dynamicFriction`(ctype: `hkReal`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "keepContactTolerance": {
          "title": "C++ Info",
          "description": "- name: `keepContactTolerance`(ctype: `hkReal`)\n - offset: `  8`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "keepDistance": {
          "title": "C++ Info",
          "description": "- name: `keepDistance`(ctype: `hkReal`)\n - offset: ` 32`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "maxCastIterations": {
          "title": "C++ Info",
          "description": "- name: `maxCastIterations`(ctype: `hkInt32`)\n - offset: ` 64`(x86)/` 64`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "maxCharacterSpeedForSolver": {
          "title": "C++ Info",
          "description": "- name: `maxCharacterSpeedForSolver`(ctype: `hkReal`)\n - offset: ` 44`(x86)/` 44`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "maxSlope": {
          "title": "C++ Info",
          "description": "- name: `maxSlope`(ctype: `hkReal`)\n - offset: ` 56`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "penetrationRecoverySpeed": {
          "title": "C++ Info",
          "description": "- name: `penetrationRecoverySpeed`(ctype: `hkReal`)\n - offset: ` 60`(x86)/` 60`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "refreshManifoldInCheckSupport": {
          "title": "C++ Info",
          "description": "- name: `refreshManifoldInCheckSupport`(ctype: `hkBool`)\n - offset: ` 68`(x86)/` 68`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "staticFriction": {
          "title": "C++ Info",
          "description": "- name: `staticFriction`(ctype: `hkReal`)\n - offset: `  4`(x86)/`  4`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "up": {
          "title": "C++ Info",
          "description": "- name: `up`(ctype: `hkVector4`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "userPlanes": {
          "title": "C++ Info",
          "description": "- name: `userPlanes`(ctype: `hkUint32`)\n - offset: ` 40`(x86)/` 40`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        }
      },
      "required": [
        "dynamicFriction",
        "staticFriction",
        "keepContactTolerance",
        "up",
        "keepDistance",
        "contactAngleSensitivity",
        "userPlanes",
        "maxCharacterSpeedForSolver",
        "characterStrength",
        "characterMass",
        "maxSlope",
        "penetrationRecoverySpeed",
        "maxCastIterations",
        "refreshManifoldInCheckSupport"
      ]
    },
    "hkbRaiseEventCommand": {
      "title": "C++ Info",
      "description": "- name: `hkbRaiseEventCommand`\n - version: `0`\n - signature: `0xa0a7bf9c`\n - size: ` 24`(x86)/` 32`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "characterId": {
          "title": "C++ Info",
          "description": "- name: `characterId`(ctype: `hkUint64`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  8`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "externalId": {
          "title": "C++ Info",
          "description": "- name: `externalId`(ctype: `hkInt32`)\n - offset: ` 20`(x86)/` 28`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "global": {
          "title": "C++ Info",
          "description": "- name: `global`(ctype: `hkBool`)\n - offset: ` 16`(x86)/` 24`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "characterId",
        "global",
        "externalId"
      ]
    },
    "hkbRealEventPayload": {
      "title": "C++ Info",
      "description": "- name: `hkbRealEventPayload`\n - version: `0`\n - signature: `0x9416affd`\n - size: ` 12`(x86)/` 24`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "data": {
          "title": "C++ Info",
          "description": "- name: `data`(ctype: `hkReal`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "data"
      ]
    },
    "hkbRealVariableSequencedData": {
      "title": "C++ Info",
      "description": "- name: `hkbRealVariableSequencedData`\n - version: `0`\n - signature: `0xe2862d02`\n - size: ` 24`(x86)/` 40`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "samples": {
          "title": "C++ Info",
          "description": "- name: `samples`(ctype: `hkArray<struct hkbRealVariableSequencedDataSample>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkbRealVariableSequencedDataSample"
          }
        },
        "variableIndex": {
          "title": "C++ Info",
          "description": "- name: `variableIndex`(ctype: `hkInt32`)\n - offset: ` 20`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "samples",
        "variableIndex"
      ]
    },
    "hkbRealVariableSequencedDataSample": {
      "title": "C++ Info",
      "description": "- name: `hkbRealVariableSequencedDataSample`\n - version: `0`\n - signature: `0xbb708bbd`\n - size: `  8`(x86)/`  8`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "time": {
          "title": "C++ Info",
          "description": "- name: `time`(ctype: `hkReal`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "value": {
          "title": "C++ Info",
          "description": "- name: `value`(ctype: `hkReal`)\n - offset: `  4`(x86)/`  4`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        }
      },
      "required": [
        "time",
        "value"
      ]
    },
    "hkbReferencePoseGenerator": {
      "title": "C++ Info",
      "description": "- name: `hkbReferencePoseGenerator`\n - version: `0`\n - signature: `0x26a5675a`\n - size: ` 44`(x86)/` 80`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "cloneState": {
          "title": "C++ Info",
          "description": "- name: `cloneState`(ctype: `enum unknown`)\n - offset: ` 38`(x86)/` 66`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkInt16`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "padNode": {
          "title": "C++ Info",
          "description": "- name: `padNode`(ctype: `hkBool[1]`)\n - offset: ` 39`(x86)/` 67`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 1,
          "minItems": 1
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "skeleton": {
          "title": "C++ Info",
          "description": "- name: `skeleton`(ctype: `void*`)\n - offset: ` 40`(x86)/` 72`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "userData",
        "id",
        "cloneState",
        "padNode",
        "skeleton"
      ]
    },
    "hkbRegisteredGenerator": {
      "title": "C++ Info",
      "description": "- name: `hkbRegisteredGenerator`\n - version: `1`\n - signature: `0x58b1d082`\n - size: ` 64`(x86)/` 96`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "generator": {
          "title": "C++ Info",
          "description": "- name: `generator`(ctype: `struct hkbGenerator*`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "relativeDirection": {
          "title": "C++ Info",
          "description": "- name: `relativeDirection`(ctype: `hkVector4`)\n - offset: ` 48`(x86)/` 80`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "relativePosition": {
          "title": "C++ Info",
          "description": "- name: `relativePosition`(ctype: `hkVector4`)\n - offset: ` 32`(x86)/` 64`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "generator",
        "relativePosition",
        "relativeDirection"
      ]
    },
    "hkbRigidBodyRagdollControlData": {
      "title": "C++ Info",
      "description": "- name: `hkbRigidBodyRagdollControlData`\n - version: `1`\n - signature: `0x1e0bc068`\n - size: ` 64`(x86)/` 64`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "durationToBlend": {
          "title": "C++ Info",
          "description": "- name: `durationToBlend`(ctype: `hkReal`)\n - offset: ` 48`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "keyFrameHierarchyControlData": {
          "title": "C++ Info",
          "description": "- name: `keyFrameHierarchyControlData`(ctype: `struct hkaKeyFrameHierarchyUtilityControlData`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: ` 48`(x86)/` 48`(x86_64)\n - flags: `ALIGN_16`",
          "$ref": "#/$defs/hkaKeyFrameHierarchyUtilityControlData"
        }
      },
      "required": [
        "keyFrameHierarchyControlData",
        "durationToBlend"
      ]
    },
    "hkbRigidBodyRagdollControlsModifier": {
      "title": "C++ Info",
      "description": "- name: `hkbRigidBodyRagdollControlsModifier`\n - version: `3`\n - signature: `0xaa87d1eb`\n - size: `128`(x86)/`160`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "bones": {
          "title": "C++ Info",
          "description": "- name: `bones`(ctype: `struct hkbBoneIndexArray*`)\n - offset: `112`(x86)/`144`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "cloneState": {
          "title": "C++ Info",
          "description": "- name: `cloneState`(ctype: `enum unknown`)\n - offset: ` 38`(x86)/` 66`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "controlData": {
          "title": "C++ Info",
          "description": "- name: `controlData`(ctype: `struct hkbRigidBodyRagdollControlData`)\n - offset: ` 48`(x86)/` 80`(x86_64)\n - type_size: ` 64`(x86)/` 64`(x86_64)",
          "$ref": "#/$defs/hkbRigidBodyRagdollControlData"
        },
        "enable": {
          "title": "C++ Info",
          "description": "- name: `enable`(ctype: `hkBool`)\n - offset: ` 40`(x86)/` 72`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkInt16`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "padModifier": {
          "title": "C++ Info",
          "description": "- name: `padModifier`(ctype: `hkBool[3]`)\n - offset: ` 41`(x86)/` 73`(x86_64)\n - type_size: `  3`(x86)/`  3`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 3,
          "minItems": 3
        },
        "padNode": {
          "title": "C++ Info",
          "description": "- name: `padNode`(ctype: `hkBool[1]`)\n - offset: ` 39`(x86)/` 67`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 1,
          "minItems": 1
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "userData",
        "id",
        "cloneState",
        "padNode",
        "enable",
        "padModifier",
        "controlData",
        "bones"
      ]
    },
    "hkbRoleAttribute": {
      "title": "C++ Info",
      "description": "- name: `hkbRoleAttribute`\n - version: `0`\n - signature: `0x3eb2e082`\n - size: `  4`(x86)/`  4`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "flags": {
          "title": "C++ Info",
          "description": "- name: `flags`(ctype: `flags RoleFlags`)\n - offset: `  2`(x86)/`  2`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "$ref": "#/$defs/RoleFlags"
        },
        "role": {
          "title": "C++ Info",
          "description": "- name: `role`(ctype: `enum Role`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "$ref": "#/$defs/Role"
        }
      },
      "required": [
        "role",
        "flags"
      ]
    },
    "hkbRotateCharacterModifier": {
      "title": "C++ Info",
      "description": "- name: `hkbRotateCharacterModifier`\n - version: `1`\n - signature: `0x877ebc0b`\n - size: ` 96`(x86)/`128`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "angle": {
          "title": "C++ Info",
          "description": "- name: `angle`(ctype: `hkReal`)\n - offset: ` 80`(x86)/`112`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "number",
          "format": "float"
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "axisOfRotation": {
          "title": "C++ Info",
          "description": "- name: `axisOfRotation`(ctype: `hkVector4`)\n - offset: ` 64`(x86)/` 96`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "cloneState": {
          "title": "C++ Info",
          "description": "- name: `cloneState`(ctype: `enum unknown`)\n - offset: ` 38`(x86)/` 66`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "degreesPerSecond": {
          "title": "C++ Info",
          "description": "- name: `degreesPerSecond`(ctype: `hkReal`)\n - offset: ` 44`(x86)/` 80`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "enable": {
          "title": "C++ Info",
          "description": "- name: `enable`(ctype: `hkBool`)\n - offset: ` 40`(x86)/` 72`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkInt16`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "padModifier": {
          "title": "C++ Info",
          "description": "- name: `padModifier`(ctype: `hkBool[3]`)\n - offset: ` 41`(x86)/` 73`(x86_64)\n - type_size: `  3`(x86)/`  3`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 3,
          "minItems": 3
        },
        "padNode": {
          "title": "C++ Info",
          "description": "- name: `padNode`(ctype: `hkBool[1]`)\n - offset: ` 39`(x86)/` 67`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 1,
          "minItems": 1
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "speedMultiplier": {
          "title": "C++ Info",
          "description": "- name: `speedMultiplier`(ctype: `hkReal`)\n - offset: ` 48`(x86)/` 84`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "userData",
        "id",
        "cloneState",
        "padNode",
        "enable",
        "padModifier",
        "degreesPerSecond",
        "speedMultiplier",
        "axisOfRotation",
        "angle"
      ]
    },
    "hkbRotateCharacterModifierInternalState": {
      "title": "C++ Info",
      "description": "- name: `hkbRotateCharacterModifierInternalState`\n - version: `0`\n - signature: `0xdc40bf4a`\n - size: ` 12`(x86)/` 24`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "angle": {
          "title": "C++ Info",
          "description": "- name: `angle`(ctype: `hkReal`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "angle"
      ]
    },
    "hkbSenseHandleModifier": {
      "title": "C++ Info",
      "description": "- name: `hkbSenseHandleModifier`\n - version: `2`\n - signature: `0x2a064d99`\n - size: `160`(x86)/`224`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "cloneState": {
          "title": "C++ Info",
          "description": "- name: `cloneState`(ctype: `enum unknown`)\n - offset: ` 38`(x86)/` 66`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "collisionFilterInfo": {
          "title": "C++ Info",
          "description": "- name: `collisionFilterInfo`(ctype: `hkUint32`)\n - offset: `136`(x86)/`204`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "distanceOut": {
          "title": "C++ Info",
          "description": "- name: `distanceOut`(ctype: `hkReal`)\n - offset: `132`(x86)/`200`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "enable": {
          "title": "C++ Info",
          "description": "- name: `enable`(ctype: `hkBool`)\n - offset: ` 40`(x86)/` 72`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "extrapolateSensorPosition": {
          "title": "C++ Info",
          "description": "- name: `extrapolateSensorPosition`(ctype: `hkBool`)\n - offset: `145`(x86)/`213`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "foundHandleOut": {
          "title": "C++ Info",
          "description": "- name: `foundHandleOut`(ctype: `hkBool`)\n - offset: `147`(x86)/`215`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "handle": {
          "title": "C++ Info",
          "description": "- name: `handle`(ctype: `struct hkbHandle`)\n - offset: ` 44`(x86)/` 80`(x86_64)\n - type_size: ` 24`(x86)/` 48`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "$ref": "#/$defs/hkbHandle"
        },
        "handleIn": {
          "title": "C++ Info",
          "description": "- name: `handleIn`(ctype: `struct hkbHandle*`)\n - offset: `112`(x86)/`168`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "handleOut": {
          "title": "C++ Info",
          "description": "- name: `handleOut`(ctype: `struct hkbHandle*`)\n - offset: `108`(x86)/`160`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkInt16`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "keepFirstSensedHandle": {
          "title": "C++ Info",
          "description": "- name: `keepFirstSensedHandle`(ctype: `hkBool`)\n - offset: `146`(x86)/`214`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "localFrameName": {
          "title": "C++ Info",
          "description": "- name: `localFrameName`(ctype: `hkStringPtr`)\n - offset: `116`(x86)/`176`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "maxDistance": {
          "title": "C++ Info",
          "description": "- name: `maxDistance`(ctype: `hkReal`)\n - offset: `128`(x86)/`196`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "minDistance": {
          "title": "C++ Info",
          "description": "- name: `minDistance`(ctype: `hkReal`)\n - offset: `124`(x86)/`192`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "padModifier": {
          "title": "C++ Info",
          "description": "- name: `padModifier`(ctype: `hkBool[3]`)\n - offset: ` 41`(x86)/` 73`(x86_64)\n - type_size: `  3`(x86)/`  3`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 3,
          "minItems": 3
        },
        "padNode": {
          "title": "C++ Info",
          "description": "- name: `padNode`(ctype: `hkBool[1]`)\n - offset: ` 39`(x86)/` 67`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 1,
          "minItems": 1
        },
        "rangeIndexForEventToSendNextUpdate": {
          "title": "C++ Info",
          "description": "- name: `rangeIndexForEventToSendNextUpdate`(ctype: `hkInt32`)\n - offset: `152`(x86)/`220`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int32"
        },
        "ranges": {
          "title": "C++ Info",
          "description": "- name: `ranges`(ctype: `hkArray<struct hkbSenseHandleModifierRange>`)\n - offset: ` 96`(x86)/`144`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkbSenseHandleModifierRange"
          }
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "sensingMode": {
          "title": "C++ Info",
          "description": "- name: `sensingMode`(ctype: `enum SensingMode`)\n - offset: `144`(x86)/`212`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/SensingMode"
        },
        "sensorAnimationBoneIndex": {
          "title": "C++ Info",
          "description": "- name: `sensorAnimationBoneIndex`(ctype: `hkInt16`)\n - offset: `142`(x86)/`210`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "int16"
        },
        "sensorLocalFrameName": {
          "title": "C++ Info",
          "description": "- name: `sensorLocalFrameName`(ctype: `hkStringPtr`)\n - offset: `120`(x86)/`184`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "sensorLocalOffset": {
          "title": "C++ Info",
          "description": "- name: `sensorLocalOffset`(ctype: `hkVector4`)\n - offset: ` 80`(x86)/`128`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "sensorRagdollBoneIndex": {
          "title": "C++ Info",
          "description": "- name: `sensorRagdollBoneIndex`(ctype: `hkInt16`)\n - offset: `140`(x86)/`208`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "int16"
        },
        "timeSinceLastModify": {
          "title": "C++ Info",
          "description": "- name: `timeSinceLastModify`(ctype: `hkReal`)\n - offset: `148`(x86)/`216`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "number",
          "format": "float"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "userData",
        "id",
        "cloneState",
        "padNode",
        "enable",
        "padModifier",
        "handle",
        "sensorLocalOffset",
        "ranges",
        "handleOut",
        "handleIn",
        "minDistance",
        "maxDistance",
        "distanceOut",
        "collisionFilterInfo",
        "sensorRagdollBoneIndex",
        "sensorAnimationBoneIndex",
        "sensingMode",
        "extrapolateSensorPosition",
        "keepFirstSensedHandle",
        "foundHandleOut",
        "timeSinceLastModify",
        "rangeIndexForEventToSendNextUpdate"
      ]
    },
    "hkbSenseHandleModifierRange": {
      "title": "C++ Info",
      "description": "- name: `hkbSenseHandleModifierRange`\n - version: `0`\n - signature: `0xfb56b692`\n - size: ` 20`(x86)/` 32`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "event": {
          "title": "C++ Info",
          "description": "- name: `event`(ctype: `struct hkbEventProperty`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  8`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/hkbEventProperty"
        },
        "ignoreHandle": {
          "title": "C++ Info",
          "description": "- name: `ignoreHandle`(ctype: `hkBool`)\n - offset: ` 16`(x86)/` 24`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "maxDistance": {
          "title": "C++ Info",
          "description": "- name: `maxDistance`(ctype: `hkReal`)\n - offset: ` 12`(x86)/` 20`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "minDistance": {
          "title": "C++ Info",
          "description": "- name: `minDistance`(ctype: `hkReal`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        }
      },
      "required": [
        "event",
        "minDistance",
        "maxDistance",
        "ignoreHandle"
      ]
    },
    "hkbSequence": {
      "title": "C++ Info",
      "description": "- name: `hkbSequence`\n - version: `0`\n - signature: `0x43182ca3`\n - size: `168`(x86)/`248`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "boolVariableSequencedData": {
          "title": "C++ Info",
          "description": "- name: `boolVariableSequencedData`(ctype: `hkArray<hkbBoolVariableSequencedData*>`)\n - offset: ` 68`(x86)/`112`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "cloneState": {
          "title": "C++ Info",
          "description": "- name: `cloneState`(ctype: `enum unknown`)\n - offset: ` 38`(x86)/` 66`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "disableEventId": {
          "title": "C++ Info",
          "description": "- name: `disableEventId`(ctype: `hkInt32`)\n - offset: ` 96`(x86)/`148`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "enable": {
          "title": "C++ Info",
          "description": "- name: `enable`(ctype: `hkBool`)\n - offset: ` 40`(x86)/` 72`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "enableEventId": {
          "title": "C++ Info",
          "description": "- name: `enableEventId`(ctype: `hkInt32`)\n - offset: ` 92`(x86)/`144`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "eventIdMap": {
          "title": "C++ Info",
          "description": "- name: `eventIdMap`(ctype: `void*`)\n - offset: `108`(x86)/`168`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "eventSequencedData": {
          "title": "C++ Info",
          "description": "- name: `eventSequencedData`(ctype: `hkArray<hkbEventSequencedData*>`)\n - offset: ` 44`(x86)/` 80`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkInt16`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "intVariableSequencedData": {
          "title": "C++ Info",
          "description": "- name: `intVariableSequencedData`(ctype: `hkArray<hkbIntVariableSequencedData*>`)\n - offset: ` 80`(x86)/`128`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isEnabled": {
          "title": "C++ Info",
          "description": "- name: `isEnabled`(ctype: `hkBool`)\n - offset: `164`(x86)/`244`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "nextSampleBools": {
          "title": "C++ Info",
          "description": "- name: `nextSampleBools`(ctype: `hkArray<void>`)\n - offset: `136`(x86)/`208`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "nextSampleEvents": {
          "title": "C++ Info",
          "description": "- name: `nextSampleEvents`(ctype: `hkArray<void>`)\n - offset: `112`(x86)/`176`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "nextSampleInts": {
          "title": "C++ Info",
          "description": "- name: `nextSampleInts`(ctype: `hkArray<void>`)\n - offset: `148`(x86)/`224`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "nextSampleReals": {
          "title": "C++ Info",
          "description": "- name: `nextSampleReals`(ctype: `hkArray<void>`)\n - offset: `124`(x86)/`192`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "padModifier": {
          "title": "C++ Info",
          "description": "- name: `padModifier`(ctype: `hkBool[3]`)\n - offset: ` 41`(x86)/` 73`(x86_64)\n - type_size: `  3`(x86)/`  3`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 3,
          "minItems": 3
        },
        "padNode": {
          "title": "C++ Info",
          "description": "- name: `padNode`(ctype: `hkBool[1]`)\n - offset: ` 39`(x86)/` 67`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 1,
          "minItems": 1
        },
        "realVariableSequencedData": {
          "title": "C++ Info",
          "description": "- name: `realVariableSequencedData`(ctype: `hkArray<hkbRealVariableSequencedData*>`)\n - offset: ` 56`(x86)/` 96`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "stringData": {
          "title": "C++ Info",
          "description": "- name: `stringData`(ctype: `struct hkbSequenceStringData*`)\n - offset: `100`(x86)/`152`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "time": {
          "title": "C++ Info",
          "description": "- name: `time`(ctype: `hkReal`)\n - offset: `160`(x86)/`240`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "number",
          "format": "float"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "variableIdMap": {
          "title": "C++ Info",
          "description": "- name: `variableIdMap`(ctype: `void*`)\n - offset: `104`(x86)/`160`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "userData",
        "id",
        "cloneState",
        "padNode",
        "enable",
        "padModifier",
        "eventSequencedData",
        "realVariableSequencedData",
        "boolVariableSequencedData",
        "intVariableSequencedData",
        "enableEventId",
        "disableEventId",
        "stringData",
        "variableIdMap",
        "eventIdMap",
        "nextSampleEvents",
        "nextSampleReals",
        "nextSampleBools",
        "nextSampleInts",
        "time",
        "isEnabled"
      ]
    },
    "hkbSequenceInternalState": {
      "title": "C++ Info",
      "description": "- name: `hkbSequenceInternalState`\n - version: `0`\n - signature: `0x419b9a05`\n - size: ` 64`(x86)/` 88`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "isEnabled": {
          "title": "C++ Info",
          "description": "- name: `isEnabled`(ctype: `hkBool`)\n - offset: ` 60`(x86)/` 84`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "nextSampleBools": {
          "title": "C++ Info",
          "description": "- name: `nextSampleBools`(ctype: `hkArray<hkInt32>`)\n - offset: ` 32`(x86)/` 48`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "nextSampleEvents": {
          "title": "C++ Info",
          "description": "- name: `nextSampleEvents`(ctype: `hkArray<hkInt32>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "nextSampleInts": {
          "title": "C++ Info",
          "description": "- name: `nextSampleInts`(ctype: `hkArray<hkInt32>`)\n - offset: ` 44`(x86)/` 64`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "nextSampleReals": {
          "title": "C++ Info",
          "description": "- name: `nextSampleReals`(ctype: `hkArray<hkInt32>`)\n - offset: ` 20`(x86)/` 32`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "time": {
          "title": "C++ Info",
          "description": "- name: `time`(ctype: `hkReal`)\n - offset: ` 56`(x86)/` 80`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "nextSampleEvents",
        "nextSampleReals",
        "nextSampleBools",
        "nextSampleInts",
        "time",
        "isEnabled"
      ]
    },
    "hkbSequenceStringData": {
      "title": "C++ Info",
      "description": "- name: `hkbSequenceStringData`\n - version: `0`\n - signature: `0x6a5094e3`\n - size: ` 32`(x86)/` 48`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "eventNames": {
          "title": "C++ Info",
          "description": "- name: `eventNames`(ctype: `hkArray<hkStringPtr>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "variableNames": {
          "title": "C++ Info",
          "description": "- name: `variableNames`(ctype: `hkArray<hkStringPtr>`)\n - offset: ` 20`(x86)/` 32`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "eventNames",
        "variableNames"
      ]
    },
    "hkbSequencedData": {
      "title": "C++ Info",
      "description": "- name: `hkbSequencedData`\n - version: `0`\n - signature: `0xda8c7d7d`\n - size: `  8`(x86)/` 16`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount"
      ]
    },
    "hkbSetBehaviorCommand": {
      "title": "C++ Info",
      "description": "- name: `hkbSetBehaviorCommand`\n - version: `1`\n - signature: `0xe18b74b9`\n - size: ` 48`(x86)/` 72`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "behavior": {
          "title": "C++ Info",
          "description": "- name: `behavior`(ctype: `struct hkbBehaviorGraph*`)\n - offset: ` 16`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "characterId": {
          "title": "C++ Info",
          "description": "- name: `characterId`(ctype: `hkUint64`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  8`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "padding": {
          "title": "C++ Info",
          "description": "- name: `padding`(ctype: `hkInt32`)\n - offset: ` 44`(x86)/` 64`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "randomizeSimulation": {
          "title": "C++ Info",
          "description": "- name: `randomizeSimulation`(ctype: `hkBool`)\n - offset: ` 40`(x86)/` 60`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "referencedBehaviors": {
          "title": "C++ Info",
          "description": "- name: `referencedBehaviors`(ctype: `hkArray<hkbBehaviorGraph*>`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "rootGenerator": {
          "title": "C++ Info",
          "description": "- name: `rootGenerator`(ctype: `struct hkbGenerator*`)\n - offset: ` 20`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "startStateIndex": {
          "title": "C++ Info",
          "description": "- name: `startStateIndex`(ctype: `hkInt32`)\n - offset: ` 36`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "characterId",
        "behavior",
        "rootGenerator",
        "referencedBehaviors",
        "startStateIndex",
        "randomizeSimulation",
        "padding"
      ]
    },
    "hkbSetLocalTimeOfClipGeneratorCommand": {
      "title": "C++ Info",
      "description": "- name: `hkbSetLocalTimeOfClipGeneratorCommand`\n - version: `0`\n - signature: `0xfab12b45`\n - size: ` 24`(x86)/` 32`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "characterId": {
          "title": "C++ Info",
          "description": "- name: `characterId`(ctype: `hkUint64`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  8`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "localTime": {
          "title": "C++ Info",
          "description": "- name: `localTime`(ctype: `hkReal`)\n - offset: ` 16`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "nodeId": {
          "title": "C++ Info",
          "description": "- name: `nodeId`(ctype: `hkInt16`)\n - offset: ` 20`(x86)/` 28`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "int16"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "characterId",
        "localTime",
        "nodeId"
      ]
    },
    "hkbSetNodePropertyCommand": {
      "title": "C++ Info",
      "description": "- name: `hkbSetNodePropertyCommand`\n - version: `1`\n - signature: `0xc5160b64`\n - size: ` 32`(x86)/` 48`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "characterId": {
          "title": "C++ Info",
          "description": "- name: `characterId`(ctype: `hkUint64`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  8`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "nodeName": {
          "title": "C++ Info",
          "description": "- name: `nodeName`(ctype: `hkStringPtr`)\n - offset: ` 16`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "padding": {
          "title": "C++ Info",
          "description": "- name: `padding`(ctype: `hkInt32`)\n - offset: ` 28`(x86)/` 44`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "propertyName": {
          "title": "C++ Info",
          "description": "- name: `propertyName`(ctype: `hkStringPtr`)\n - offset: ` 20`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "propertyValue": {
          "title": "C++ Info",
          "description": "- name: `propertyValue`(ctype: `struct hkbVariableValue`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "$ref": "#/$defs/hkbVariableValue"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "characterId",
        "propertyValue",
        "padding"
      ]
    },
    "hkbSetWordVariableCommand": {
      "title": "C++ Info",
      "description": "- name: `hkbSetWordVariableCommand`\n - version: `0`\n - signature: `0xf3ae5fca`\n - size: ` 64`(x86)/` 64`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum VariableType`)\n - offset: ` 48`(x86)/` 48`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/VariableType"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "characterId": {
          "title": "C++ Info",
          "description": "- name: `characterId`(ctype: `hkUint64`)\n - offset: ` 32`(x86)/` 32`(x86_64)\n - type_size: `  8`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "global": {
          "title": "C++ Info",
          "description": "- name: `global`(ctype: `hkBool`)\n - offset: ` 49`(x86)/` 49`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "quadValue": {
          "title": "C++ Info",
          "description": "- name: `quadValue`(ctype: `hkVector4`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "value": {
          "title": "C++ Info",
          "description": "- name: `value`(ctype: `struct hkbVariableValue`)\n - offset: ` 44`(x86)/` 44`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "$ref": "#/$defs/hkbVariableValue"
        },
        "variableId": {
          "title": "C++ Info",
          "description": "- name: `variableId`(ctype: `hkInt32`)\n - offset: ` 40`(x86)/` 40`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "quadValue",
        "characterId",
        "variableId",
        "value",
        "type",
        "global"
      ]
    },
    "hkbSetWorldFromModelModifier": {
      "title": "C++ Info",
      "description": "- name: `hkbSetWorldFromModelModifier`\n - version: `0`\n - signature: `0xafcfa211`\n - size: ` 96`(x86)/`128`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "cloneState": {
          "title": "C++ Info",
          "description": "- name: `cloneState`(ctype: `enum unknown`)\n - offset: ` 38`(x86)/` 66`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "enable": {
          "title": "C++ Info",
          "description": "- name: `enable`(ctype: `hkBool`)\n - offset: ` 40`(x86)/` 72`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkInt16`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "padModifier": {
          "title": "C++ Info",
          "description": "- name: `padModifier`(ctype: `hkBool[3]`)\n - offset: ` 41`(x86)/` 73`(x86_64)\n - type_size: `  3`(x86)/`  3`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 3,
          "minItems": 3
        },
        "padNode": {
          "title": "C++ Info",
          "description": "- name: `padNode`(ctype: `hkBool[1]`)\n - offset: ` 39`(x86)/` 67`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 1,
          "minItems": 1
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "rotation": {
          "title": "C++ Info",
          "description": "- name: `rotation`(ctype: `hkQuaternion`)\n - offset: ` 64`(x86)/` 96`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Quaternion"
        },
        "setRotation": {
          "title": "C++ Info",
          "description": "- name: `setRotation`(ctype: `hkBool`)\n - offset: ` 81`(x86)/`113`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "setTranslation": {
          "title": "C++ Info",
          "description": "- name: `setTranslation`(ctype: `hkBool`)\n - offset: ` 80`(x86)/`112`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "translation": {
          "title": "C++ Info",
          "description": "- name: `translation`(ctype: `hkVector4`)\n - offset: ` 48`(x86)/` 80`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "userData",
        "id",
        "cloneState",
        "padNode",
        "enable",
        "padModifier",
        "translation",
        "rotation",
        "setTranslation",
        "setRotation"
      ]
    },
    "hkbSimulationControlCommand": {
      "title": "C++ Info",
      "description": "- name: `hkbSimulationControlCommand`\n - version: `0`\n - signature: `0x2a241367`\n - size: ` 12`(x86)/` 24`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "command": {
          "title": "C++ Info",
          "description": "- name: `command`(ctype: `enum SimulationControlCommand`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/SimulationControlCommand"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "command"
      ]
    },
    "hkbSimulationStateInfo": {
      "title": "C++ Info",
      "description": "- name: `hkbSimulationStateInfo`\n - version: `0`\n - signature: `0xa40822b4`\n - size: ` 12`(x86)/` 24`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "simulationState": {
          "title": "C++ Info",
          "description": "- name: `simulationState`(ctype: `enum SimulationState`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/SimulationState"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "simulationState"
      ]
    },
    "hkbStateChooser": {
      "title": "C++ Info",
      "description": "- name: `hkbStateChooser`\n - version: `0`\n - signature: `0xda8c7d7d`\n - size: `  8`(x86)/` 16`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount"
      ]
    },
    "hkbStateListener": {
      "title": "C++ Info",
      "description": "- name: `hkbStateListener`\n - version: `0`\n - signature: `0xda8c7d7d`\n - size: `  8`(x86)/` 16`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount"
      ]
    },
    "hkbStateMachine": {
      "title": "C++ Info",
      "description": "- name: `hkbStateMachine`\n - version: `4`\n - signature: `0x816c1dcb`\n - size: `180`(x86)/`264`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "activeTransitions": {
          "title": "C++ Info",
          "description": "- name: `activeTransitions`(ctype: `hkArray<void>`)\n - offset: `112`(x86)/`176`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "cloneState": {
          "title": "C++ Info",
          "description": "- name: `cloneState`(ctype: `enum unknown`)\n - offset: ` 38`(x86)/` 66`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "currentStateId": {
          "title": "C++ Info",
          "description": "- name: `currentStateId`(ctype: `hkInt32`)\n - offset: ` 80`(x86)/`128`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int32"
        },
        "delayedTransitions": {
          "title": "C++ Info",
          "description": "- name: `delayedTransitions`(ctype: `hkArray<void>`)\n - offset: `148`(x86)/`224`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "echoNextUpdate": {
          "title": "C++ Info",
          "description": "- name: `echoNextUpdate`(ctype: `hkBool`)\n - offset: `177`(x86)/`257`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "eventToSendWhenStateOrTransitionChanges": {
          "title": "C++ Info",
          "description": "- name: `eventToSendWhenStateOrTransitionChanges`(ctype: `struct hkbEvent`)\n - offset: ` 40`(x86)/` 72`(x86_64)\n - type_size: ` 12`(x86)/` 24`(x86_64)",
          "$ref": "#/$defs/hkbEvent"
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkInt16`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "isActive": {
          "title": "C++ Info",
          "description": "- name: `isActive`(ctype: `hkBool`)\n - offset: ` 88`(x86)/`136`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "lastLocalTime": {
          "title": "C++ Info",
          "description": "- name: `lastLocalTime`(ctype: `hkReal`)\n - offset: `164`(x86)/`244`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "number",
          "format": "float"
        },
        "maxSimultaneousTransitions": {
          "title": "C++ Info",
          "description": "- name: `maxSimultaneousTransitions`(ctype: `hkInt8`)\n - offset: ` 85`(x86)/`133`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "int8"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "nextStartStateIndexOverride": {
          "title": "C++ Info",
          "description": "- name: `nextStartStateIndexOverride`(ctype: `hkInt32`)\n - offset: `172`(x86)/`252`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int32"
        },
        "padNode": {
          "title": "C++ Info",
          "description": "- name: `padNode`(ctype: `hkBool[1]`)\n - offset: ` 39`(x86)/` 67`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 1,
          "minItems": 1
        },
        "previousStateId": {
          "title": "C++ Info",
          "description": "- name: `previousStateId`(ctype: `hkInt32`)\n - offset: `168`(x86)/`248`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int32"
        },
        "randomTransitionEventId": {
          "title": "C++ Info",
          "description": "- name: `randomTransitionEventId`(ctype: `hkInt32`)\n - offset: ` 64`(x86)/`112`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "returnToPreviousStateEventId": {
          "title": "C++ Info",
          "description": "- name: `returnToPreviousStateEventId`(ctype: `hkInt32`)\n - offset: ` 60`(x86)/`108`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "sCurrentStateIndexAndEntered": {
          "title": "C++ Info",
          "description": "- name: `sCurrentStateIndexAndEntered`(ctype: `hkUint16`)\n - offset: `178`(x86)/`258`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "selfTransitionMode": {
          "title": "C++ Info",
          "description": "- name: `selfTransitionMode`(ctype: `enum StateMachineSelfTransitionMode`)\n - offset: ` 87`(x86)/`135`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/StateMachineSelfTransitionMode"
        },
        "startStateChooser": {
          "title": "C++ Info",
          "description": "- name: `startStateChooser`(ctype: `struct hkbStateChooser*`)\n - offset: ` 52`(x86)/` 96`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "startStateId": {
          "title": "C++ Info",
          "description": "- name: `startStateId`(ctype: `hkInt32`)\n - offset: ` 56`(x86)/`104`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "startStateMode": {
          "title": "C++ Info",
          "description": "- name: `startStateMode`(ctype: `enum StartStateMode`)\n - offset: ` 86`(x86)/`134`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/StartStateMode"
        },
        "stateIdToIndexMap": {
          "title": "C++ Info",
          "description": "- name: `stateIdToIndexMap`(ctype: `void*`)\n - offset: `108`(x86)/`168`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "stateOrTransitionChanged": {
          "title": "C++ Info",
          "description": "- name: `stateOrTransitionChanged`(ctype: `hkBool`)\n - offset: `176`(x86)/`256`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "states": {
          "title": "C++ Info",
          "description": "- name: `states`(ctype: `hkArray<hkbStateMachineStateInfo*>`)\n - offset: ` 92`(x86)/`144`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "syncVariableIndex": {
          "title": "C++ Info",
          "description": "- name: `syncVariableIndex`(ctype: `hkInt32`)\n - offset: ` 76`(x86)/`124`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "timeInState": {
          "title": "C++ Info",
          "description": "- name: `timeInState`(ctype: `hkReal`)\n - offset: `160`(x86)/`240`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "number",
          "format": "float"
        },
        "transitionFlags": {
          "title": "C++ Info",
          "description": "- name: `transitionFlags`(ctype: `hkArray<void>`)\n - offset: `124`(x86)/`192`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "transitionToNextHigherStateEventId": {
          "title": "C++ Info",
          "description": "- name: `transitionToNextHigherStateEventId`(ctype: `hkInt32`)\n - offset: ` 68`(x86)/`116`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "transitionToNextLowerStateEventId": {
          "title": "C++ Info",
          "description": "- name: `transitionToNextLowerStateEventId`(ctype: `hkInt32`)\n - offset: ` 72`(x86)/`120`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "wildcardTransitionFlags": {
          "title": "C++ Info",
          "description": "- name: `wildcardTransitionFlags`(ctype: `hkArray<void>`)\n - offset: `136`(x86)/`208`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "wildcardTransitions": {
          "title": "C++ Info",
          "description": "- name: `wildcardTransitions`(ctype: `struct hkbStateMachineTransitionInfoArray*`)\n - offset: `104`(x86)/`160`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "wrapAroundStateId": {
          "title": "C++ Info",
          "description": "- name: `wrapAroundStateId`(ctype: `hkBool`)\n - offset: ` 84`(x86)/`132`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "userData",
        "id",
        "cloneState",
        "padNode",
        "eventToSendWhenStateOrTransitionChanges",
        "startStateChooser",
        "startStateId",
        "returnToPreviousStateEventId",
        "randomTransitionEventId",
        "transitionToNextHigherStateEventId",
        "transitionToNextLowerStateEventId",
        "syncVariableIndex",
        "currentStateId",
        "wrapAroundStateId",
        "maxSimultaneousTransitions",
        "startStateMode",
        "selfTransitionMode",
        "isActive",
        "states",
        "wildcardTransitions",
        "stateIdToIndexMap",
        "activeTransitions",
        "transitionFlags",
        "wildcardTransitionFlags",
        "delayedTransitions",
        "timeInState",
        "lastLocalTime",
        "previousStateId",
        "nextStartStateIndexOverride",
        "stateOrTransitionChanged",
        "echoNextUpdate",
        "sCurrentStateIndexAndEntered"
      ]
    },
    "hkbStateMachineActiveTransitionInfo": {
      "title": "C++ Info",
      "description": "- name: `hkbStateMachineActiveTransitionInfo`\n - version: `1`\n - signature: `0xbb90d54f`\n - size: ` 32`(x86)/` 40`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "fromStateId": {
          "title": "C++ Info",
          "description": "- name: `fromStateId`(ctype: `hkInt32`)\n - offset: ` 20`(x86)/` 28`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "isReturnToPreviousState": {
          "title": "C++ Info",
          "description": "- name: `isReturnToPreviousState`(ctype: `hkBool`)\n - offset: ` 28`(x86)/` 36`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "toStateId": {
          "title": "C++ Info",
          "description": "- name: `toStateId`(ctype: `hkInt32`)\n - offset: ` 24`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "transitionEffect": {
          "title": "C++ Info",
          "description": "- name: `transitionEffect`(ctype: `void*`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "transitionEffectInternalStateInfo": {
          "title": "C++ Info",
          "description": "- name: `transitionEffectInternalStateInfo`(ctype: `struct hkbNodeInternalStateInfo*`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "transitionInfoReference": {
          "title": "C++ Info",
          "description": "- name: `transitionInfoReference`(ctype: `struct hkbStateMachineTransitionInfoReference`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  6`(x86)/`  6`(x86_64)",
          "$ref": "#/$defs/hkbStateMachineTransitionInfoReference"
        },
        "transitionInfoReferenceForTE": {
          "title": "C++ Info",
          "description": "- name: `transitionInfoReferenceForTE`(ctype: `struct hkbStateMachineTransitionInfoReference`)\n - offset: ` 14`(x86)/` 22`(x86_64)\n - type_size: `  6`(x86)/`  6`(x86_64)",
          "$ref": "#/$defs/hkbStateMachineTransitionInfoReference"
        }
      },
      "required": [
        "transitionEffect",
        "transitionEffectInternalStateInfo",
        "transitionInfoReference",
        "transitionInfoReferenceForTE",
        "fromStateId",
        "toStateId",
        "isReturnToPreviousState"
      ]
    },
    "hkbStateMachineDelayedTransitionInfo": {
      "title": "C++ Info",
      "description": "- name: `hkbStateMachineDelayedTransitionInfo`\n - version: `1`\n - signature: `0x26d5499`\n - size: ` 24`(x86)/` 24`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "delayedTransition": {
          "title": "C++ Info",
          "description": "- name: `delayedTransition`(ctype: `struct hkbStateMachineProspectiveTransitionInfo`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/hkbStateMachineProspectiveTransitionInfo"
        },
        "isDelayedTransitionReturnToPreviousState": {
          "title": "C++ Info",
          "description": "- name: `isDelayedTransitionReturnToPreviousState`(ctype: `hkBool`)\n - offset: ` 20`(x86)/` 20`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "timeDelayed": {
          "title": "C++ Info",
          "description": "- name: `timeDelayed`(ctype: `hkReal`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "wasInAbutRangeLastFrame": {
          "title": "C++ Info",
          "description": "- name: `wasInAbutRangeLastFrame`(ctype: `hkBool`)\n - offset: ` 21`(x86)/` 21`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        }
      },
      "required": [
        "delayedTransition",
        "timeDelayed",
        "isDelayedTransitionReturnToPreviousState",
        "wasInAbutRangeLastFrame"
      ]
    },
    "hkbStateMachineEventPropertyArray": {
      "title": "C++ Info",
      "description": "- name: `hkbStateMachineEventPropertyArray`\n - version: `0`\n - signature: `0xb07b4388`\n - size: ` 20`(x86)/` 32`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "events": {
          "title": "C++ Info",
          "description": "- name: `events`(ctype: `hkArray<struct hkbEventProperty>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkbEventProperty"
          }
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "events"
      ]
    },
    "hkbStateMachineInternalState": {
      "title": "C++ Info",
      "description": "- name: `hkbStateMachineInternalState`\n - version: `0`\n - signature: `0xbd1a7502`\n - size: ` 80`(x86)/`104`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "activeTransitions": {
          "title": "C++ Info",
          "description": "- name: `activeTransitions`(ctype: `hkArray<struct hkbStateMachineActiveTransitionInfo>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkbStateMachineActiveTransitionInfo"
          }
        },
        "currentStateId": {
          "title": "C++ Info",
          "description": "- name: `currentStateId`(ctype: `hkInt32`)\n - offset: ` 64`(x86)/` 88`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "delayedTransitions": {
          "title": "C++ Info",
          "description": "- name: `delayedTransitions`(ctype: `hkArray<struct hkbStateMachineDelayedTransitionInfo>`)\n - offset: ` 44`(x86)/` 64`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkbStateMachineDelayedTransitionInfo"
          }
        },
        "echoNextUpdate": {
          "title": "C++ Info",
          "description": "- name: `echoNextUpdate`(ctype: `hkBool`)\n - offset: ` 77`(x86)/`101`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "lastLocalTime": {
          "title": "C++ Info",
          "description": "- name: `lastLocalTime`(ctype: `hkReal`)\n - offset: ` 60`(x86)/` 84`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "nextStartStateIndexOverride": {
          "title": "C++ Info",
          "description": "- name: `nextStartStateIndexOverride`(ctype: `hkInt32`)\n - offset: ` 72`(x86)/` 96`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "previousStateId": {
          "title": "C++ Info",
          "description": "- name: `previousStateId`(ctype: `hkInt32`)\n - offset: ` 68`(x86)/` 92`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "stateOrTransitionChanged": {
          "title": "C++ Info",
          "description": "- name: `stateOrTransitionChanged`(ctype: `hkBool`)\n - offset: ` 76`(x86)/`100`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "timeInState": {
          "title": "C++ Info",
          "description": "- name: `timeInState`(ctype: `hkReal`)\n - offset: ` 56`(x86)/` 80`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "transitionFlags": {
          "title": "C++ Info",
          "description": "- name: `transitionFlags`(ctype: `hkArray<hkUint8>`)\n - offset: ` 20`(x86)/` 32`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint8",
            "minimum": 0
          }
        },
        "wildcardTransitionFlags": {
          "title": "C++ Info",
          "description": "- name: `wildcardTransitionFlags`(ctype: `hkArray<hkUint8>`)\n - offset: ` 32`(x86)/` 48`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint8",
            "minimum": 0
          }
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "activeTransitions",
        "transitionFlags",
        "wildcardTransitionFlags",
        "delayedTransitions",
        "timeInState",
        "lastLocalTime",
        "currentStateId",
        "previousStateId",
        "nextStartStateIndexOverride",
        "stateOrTransitionChanged",
        "echoNextUpdate"
      ]
    },
    "hkbStateMachineNestedStateMachineData": {
      "title": "C++ Info",
      "description": "- name: `hkbStateMachineNestedStateMachineData`\n - version: `0`\n - signature: `0x7358f5da`\n - size: `  8`(x86)/` 16`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "eventIdMap": {
          "title": "C++ Info",
          "description": "- name: `eventIdMap`(ctype: `void*`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "nestedStateMachine": {
          "title": "C++ Info",
          "description": "- name: `nestedStateMachine`(ctype: `void*`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        }
      },
      "required": [
        "nestedStateMachine",
        "eventIdMap"
      ]
    },
    "hkbStateMachineProspectiveTransitionInfo": {
      "title": "C++ Info",
      "description": "- name: `hkbStateMachineProspectiveTransitionInfo`\n - version: `2`\n - signature: `0x3ab09a2e`\n - size: ` 16`(x86)/` 16`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "toStateId": {
          "title": "C++ Info",
          "description": "- name: `toStateId`(ctype: `hkInt32`)\n - offset: ` 12`(x86)/` 12`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "transitionInfoReference": {
          "title": "C++ Info",
          "description": "- name: `transitionInfoReference`(ctype: `struct hkbStateMachineTransitionInfoReference`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  6`(x86)/`  6`(x86_64)",
          "$ref": "#/$defs/hkbStateMachineTransitionInfoReference"
        },
        "transitionInfoReferenceForTE": {
          "title": "C++ Info",
          "description": "- name: `transitionInfoReferenceForTE`(ctype: `struct hkbStateMachineTransitionInfoReference`)\n - offset: `  6`(x86)/`  6`(x86_64)\n - type_size: `  6`(x86)/`  6`(x86_64)",
          "$ref": "#/$defs/hkbStateMachineTransitionInfoReference"
        }
      },
      "required": [
        "transitionInfoReference",
        "transitionInfoReferenceForTE",
        "toStateId"
      ]
    },
    "hkbStateMachineStateInfo": {
      "title": "C++ Info",
      "description": "- name: `hkbStateMachineStateInfo`\n - version: `4`\n - signature: `0xed7f9d0`\n - size: ` 72`(x86)/`120`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "enable": {
          "title": "C++ Info",
          "description": "- name: `enable`(ctype: `hkBool`)\n - offset: ` 68`(x86)/`112`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "enterNotifyEvents": {
          "title": "C++ Info",
          "description": "- name: `enterNotifyEvents`(ctype: `struct hkbStateMachineEventPropertyArray*`)\n - offset: ` 40`(x86)/` 64`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "exitNotifyEvents": {
          "title": "C++ Info",
          "description": "- name: `exitNotifyEvents`(ctype: `struct hkbStateMachineEventPropertyArray*`)\n - offset: ` 44`(x86)/` 72`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "generator": {
          "title": "C++ Info",
          "description": "- name: `generator`(ctype: `struct hkbGenerator*`)\n - offset: ` 52`(x86)/` 88`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "listeners": {
          "title": "C++ Info",
          "description": "- name: `listeners`(ctype: `hkArray<hkbStateListener*>`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 56`(x86)/` 96`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "probability": {
          "title": "C++ Info",
          "description": "- name: `probability`(ctype: `hkReal`)\n - offset: ` 64`(x86)/`108`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "stateId": {
          "title": "C++ Info",
          "description": "- name: `stateId`(ctype: `hkInt32`)\n - offset: ` 60`(x86)/`104`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "transitions": {
          "title": "C++ Info",
          "description": "- name: `transitions`(ctype: `struct hkbStateMachineTransitionInfoArray*`)\n - offset: ` 48`(x86)/` 80`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "listeners",
        "enterNotifyEvents",
        "exitNotifyEvents",
        "transitions",
        "generator",
        "stateId",
        "probability",
        "enable"
      ]
    },
    "hkbStateMachineTimeInterval": {
      "title": "C++ Info",
      "description": "- name: `hkbStateMachineTimeInterval`\n - version: `0`\n - signature: `0x60a881e5`\n - size: ` 16`(x86)/` 16`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "enterEventId": {
          "title": "C++ Info",
          "description": "- name: `enterEventId`(ctype: `hkInt32`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "enterTime": {
          "title": "C++ Info",
          "description": "- name: `enterTime`(ctype: `hkReal`)\n - offset: `  8`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "exitEventId": {
          "title": "C++ Info",
          "description": "- name: `exitEventId`(ctype: `hkInt32`)\n - offset: `  4`(x86)/`  4`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "exitTime": {
          "title": "C++ Info",
          "description": "- name: `exitTime`(ctype: `hkReal`)\n - offset: ` 12`(x86)/` 12`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        }
      },
      "required": [
        "enterEventId",
        "exitEventId",
        "enterTime",
        "exitTime"
      ]
    },
    "hkbStateMachineTransitionInfo": {
      "title": "C++ Info",
      "description": "- name: `hkbStateMachineTransitionInfo`\n - version: `1`\n - signature: `0xcdec8025`\n - size: ` 60`(x86)/` 72`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "condition": {
          "title": "C++ Info",
          "description": "- name: `condition`(ctype: `struct hkbCondition*`)\n - offset: ` 36`(x86)/` 40`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "eventId": {
          "title": "C++ Info",
          "description": "- name: `eventId`(ctype: `hkInt32`)\n - offset: ` 40`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "flags": {
          "title": "C++ Info",
          "description": "- name: `flags`(ctype: `flags TransitionFlags`)\n - offset: ` 58`(x86)/` 66`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "$ref": "#/$defs/TransitionFlags"
        },
        "fromNestedStateId": {
          "title": "C++ Info",
          "description": "- name: `fromNestedStateId`(ctype: `hkInt32`)\n - offset: ` 48`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "initiateInterval": {
          "title": "C++ Info",
          "description": "- name: `initiateInterval`(ctype: `struct hkbStateMachineTimeInterval`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/hkbStateMachineTimeInterval"
        },
        "priority": {
          "title": "C++ Info",
          "description": "- name: `priority`(ctype: `hkInt16`)\n - offset: ` 56`(x86)/` 64`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "int16"
        },
        "toNestedStateId": {
          "title": "C++ Info",
          "description": "- name: `toNestedStateId`(ctype: `hkInt32`)\n - offset: ` 52`(x86)/` 60`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "toStateId": {
          "title": "C++ Info",
          "description": "- name: `toStateId`(ctype: `hkInt32`)\n - offset: ` 44`(x86)/` 52`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "transition": {
          "title": "C++ Info",
          "description": "- name: `transition`(ctype: `struct hkbTransitionEffect*`)\n - offset: ` 32`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "triggerInterval": {
          "title": "C++ Info",
          "description": "- name: `triggerInterval`(ctype: `struct hkbStateMachineTimeInterval`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/hkbStateMachineTimeInterval"
        }
      },
      "required": [
        "triggerInterval",
        "initiateInterval",
        "transition",
        "condition",
        "eventId",
        "toStateId",
        "fromNestedStateId",
        "toNestedStateId",
        "priority",
        "flags"
      ]
    },
    "hkbStateMachineTransitionInfoArray": {
      "title": "C++ Info",
      "description": "- name: `hkbStateMachineTransitionInfoArray`\n - version: `0`\n - signature: `0xe397b11e`\n - size: ` 20`(x86)/` 32`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "transitions": {
          "title": "C++ Info",
          "description": "- name: `transitions`(ctype: `hkArray<struct hkbStateMachineTransitionInfo>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkbStateMachineTransitionInfo"
          }
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "transitions"
      ]
    },
    "hkbStateMachineTransitionInfoReference": {
      "title": "C++ Info",
      "description": "- name: `hkbStateMachineTransitionInfoReference`\n - version: `1`\n - signature: `0x9810c2d0`\n - size: `  6`(x86)/`  6`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "fromStateIndex": {
          "title": "C++ Info",
          "description": "- name: `fromStateIndex`(ctype: `hkInt16`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "int16"
        },
        "stateMachineId": {
          "title": "C++ Info",
          "description": "- name: `stateMachineId`(ctype: `hkInt16`)\n - offset: `  4`(x86)/`  4`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "int16"
        },
        "transitionIndex": {
          "title": "C++ Info",
          "description": "- name: `transitionIndex`(ctype: `hkInt16`)\n - offset: `  2`(x86)/`  2`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "fromStateIndex",
        "transitionIndex",
        "stateMachineId"
      ]
    },
    "hkbStringCondition": {
      "title": "C++ Info",
      "description": "- name: `hkbStringCondition`\n - version: `0`\n - signature: `0x5ab50487`\n - size: ` 12`(x86)/` 24`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "conditionString": {
          "title": "C++ Info",
          "description": "- name: `conditionString`(ctype: `hkStringPtr`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount"
      ]
    },
    "hkbStringEventPayload": {
      "title": "C++ Info",
      "description": "- name: `hkbStringEventPayload`\n - version: `0`\n - signature: `0xed04256a`\n - size: ` 12`(x86)/` 24`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "data": {
          "title": "C++ Info",
          "description": "- name: `data`(ctype: `hkStringPtr`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount"
      ]
    },
    "hkbTestStateChooser": {
      "title": "C++ Info",
      "description": "- name: `hkbTestStateChooser`\n - version: `0`\n - signature: `0xc0fcc436`\n - size: ` 20`(x86)/` 32`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "int": {
          "title": "C++ Info",
          "description": "- name: `int`(ctype: `hkInt32`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "real": {
          "title": "C++ Info",
          "description": "- name: `real`(ctype: `hkReal`)\n - offset: ` 12`(x86)/` 20`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "string": {
          "title": "C++ Info",
          "description": "- name: `string`(ctype: `hkStringPtr`)\n - offset: ` 16`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "int",
        "real"
      ]
    },
    "hkbTimerModifier": {
      "title": "C++ Info",
      "description": "- name: `hkbTimerModifier`\n - version: `1`\n - signature: `0x338b4879`\n - size: ` 60`(x86)/`112`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "alarmEvent": {
          "title": "C++ Info",
          "description": "- name: `alarmEvent`(ctype: `struct hkbEventProperty`)\n - offset: ` 48`(x86)/` 88`(x86_64)\n - type_size: `  8`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/hkbEventProperty"
        },
        "alarmTimeSeconds": {
          "title": "C++ Info",
          "description": "- name: `alarmTimeSeconds`(ctype: `hkReal`)\n - offset: ` 44`(x86)/` 80`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "cloneState": {
          "title": "C++ Info",
          "description": "- name: `cloneState`(ctype: `enum unknown`)\n - offset: ` 38`(x86)/` 66`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "enable": {
          "title": "C++ Info",
          "description": "- name: `enable`(ctype: `hkBool`)\n - offset: ` 40`(x86)/` 72`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkInt16`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "padModifier": {
          "title": "C++ Info",
          "description": "- name: `padModifier`(ctype: `hkBool[3]`)\n - offset: ` 41`(x86)/` 73`(x86_64)\n - type_size: `  3`(x86)/`  3`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 3,
          "minItems": 3
        },
        "padNode": {
          "title": "C++ Info",
          "description": "- name: `padNode`(ctype: `hkBool[1]`)\n - offset: ` 39`(x86)/` 67`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 1,
          "minItems": 1
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "secondsElapsed": {
          "title": "C++ Info",
          "description": "- name: `secondsElapsed`(ctype: `hkReal`)\n - offset: ` 56`(x86)/`104`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "number",
          "format": "float"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "userData",
        "id",
        "cloneState",
        "padNode",
        "enable",
        "padModifier",
        "alarmTimeSeconds",
        "alarmEvent",
        "secondsElapsed"
      ]
    },
    "hkbTimerModifierInternalState": {
      "title": "C++ Info",
      "description": "- name: `hkbTimerModifierInternalState`\n - version: `0`\n - signature: `0x83ec2d42`\n - size: ` 12`(x86)/` 24`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "secondsElapsed": {
          "title": "C++ Info",
          "description": "- name: `secondsElapsed`(ctype: `hkReal`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "secondsElapsed"
      ]
    },
    "hkbTransformVectorModifier": {
      "title": "C++ Info",
      "description": "- name: `hkbTransformVectorModifier`\n - version: `0`\n - signature: `0xf93e0e24`\n - size: `128`(x86)/`160`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "cloneState": {
          "title": "C++ Info",
          "description": "- name: `cloneState`(ctype: `enum unknown`)\n - offset: ` 38`(x86)/` 66`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "computeOnActivate": {
          "title": "C++ Info",
          "description": "- name: `computeOnActivate`(ctype: `hkBool`)\n - offset: `114`(x86)/`146`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "computeOnModify": {
          "title": "C++ Info",
          "description": "- name: `computeOnModify`(ctype: `hkBool`)\n - offset: `115`(x86)/`147`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "enable": {
          "title": "C++ Info",
          "description": "- name: `enable`(ctype: `hkBool`)\n - offset: ` 40`(x86)/` 72`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkInt16`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "inverse": {
          "title": "C++ Info",
          "description": "- name: `inverse`(ctype: `hkBool`)\n - offset: `113`(x86)/`145`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "padModifier": {
          "title": "C++ Info",
          "description": "- name: `padModifier`(ctype: `hkBool[3]`)\n - offset: ` 41`(x86)/` 73`(x86_64)\n - type_size: `  3`(x86)/`  3`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 3,
          "minItems": 3
        },
        "padNode": {
          "title": "C++ Info",
          "description": "- name: `padNode`(ctype: `hkBool[1]`)\n - offset: ` 39`(x86)/` 67`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 1,
          "minItems": 1
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "rotateOnly": {
          "title": "C++ Info",
          "description": "- name: `rotateOnly`(ctype: `hkBool`)\n - offset: `112`(x86)/`144`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "rotation": {
          "title": "C++ Info",
          "description": "- name: `rotation`(ctype: `hkQuaternion`)\n - offset: ` 48`(x86)/` 80`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Quaternion"
        },
        "translation": {
          "title": "C++ Info",
          "description": "- name: `translation`(ctype: `hkVector4`)\n - offset: ` 64`(x86)/` 96`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "vectorIn": {
          "title": "C++ Info",
          "description": "- name: `vectorIn`(ctype: `hkVector4`)\n - offset: ` 80`(x86)/`112`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "vectorOut": {
          "title": "C++ Info",
          "description": "- name: `vectorOut`(ctype: `hkVector4`)\n - offset: ` 96`(x86)/`128`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "userData",
        "id",
        "cloneState",
        "padNode",
        "enable",
        "padModifier",
        "rotation",
        "translation",
        "vectorIn",
        "vectorOut",
        "rotateOnly",
        "inverse",
        "computeOnActivate",
        "computeOnModify"
      ]
    },
    "hkbTransformVectorModifierInternalState": {
      "title": "C++ Info",
      "description": "- name: `hkbTransformVectorModifierInternalState`\n - version: `0`\n - signature: `0x5ca91c99`\n - size: ` 32`(x86)/` 32`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "vectorOut": {
          "title": "C++ Info",
          "description": "- name: `vectorOut`(ctype: `hkVector4`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "vectorOut"
      ]
    },
    "hkbTransitionEffect": {
      "title": "C++ Info",
      "description": "- name: `hkbTransitionEffect`\n - version: `0`\n - signature: `0x945da157`\n - size: ` 44`(x86)/` 80`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "cloneState": {
          "title": "C++ Info",
          "description": "- name: `cloneState`(ctype: `enum unknown`)\n - offset: ` 38`(x86)/` 66`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "defaultEventMode": {
          "title": "C++ Info",
          "description": "- name: `defaultEventMode`(ctype: `enum unknown`)\n - offset: ` 42`(x86)/` 74`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "eventMode": {
          "title": "C++ Info",
          "description": "- name: `eventMode`(ctype: `enum EventMode`)\n - offset: ` 41`(x86)/` 73`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/EventMode"
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkInt16`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "padNode": {
          "title": "C++ Info",
          "description": "- name: `padNode`(ctype: `hkBool[1]`)\n - offset: ` 39`(x86)/` 67`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 1,
          "minItems": 1
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "selfTransitionMode": {
          "title": "C++ Info",
          "description": "- name: `selfTransitionMode`(ctype: `enum SelfTransitionMode`)\n - offset: ` 40`(x86)/` 72`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/SelfTransitionMode"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "userData",
        "id",
        "cloneState",
        "padNode",
        "selfTransitionMode",
        "eventMode",
        "defaultEventMode"
      ]
    },
    "hkbTwistModifier": {
      "title": "C++ Info",
      "description": "- name: `hkbTwistModifier`\n - version: `1`\n - signature: `0xb6b76b32`\n - size: `112`(x86)/`144`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "areBindablesCached": {
          "title": "C++ Info",
          "description": "- name: `areBindablesCached`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "axisOfRotation": {
          "title": "C++ Info",
          "description": "- name: `axisOfRotation`(ctype: `hkVector4`)\n - offset: ` 48`(x86)/` 80`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "boneChainIndices": {
          "title": "C++ Info",
          "description": "- name: `boneChainIndices`(ctype: `hkArray<void>`)\n - offset: ` 76`(x86)/`112`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "cachedBindables": {
          "title": "C++ Info",
          "description": "- name: `cachedBindables`(ctype: `hkArray<void>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "cloneState": {
          "title": "C++ Info",
          "description": "- name: `cloneState`(ctype: `enum unknown`)\n - offset: ` 38`(x86)/` 66`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "enable": {
          "title": "C++ Info",
          "description": "- name: `enable`(ctype: `hkBool`)\n - offset: ` 40`(x86)/` 72`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "endBoneIndex": {
          "title": "C++ Info",
          "description": "- name: `endBoneIndex`(ctype: `hkInt16`)\n - offset: ` 70`(x86)/`102`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "int16"
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkInt16`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "isAdditive": {
          "title": "C++ Info",
          "description": "- name: `isAdditive`(ctype: `hkBool`)\n - offset: ` 74`(x86)/`106`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "padModifier": {
          "title": "C++ Info",
          "description": "- name: `padModifier`(ctype: `hkBool[3]`)\n - offset: ` 41`(x86)/` 73`(x86_64)\n - type_size: `  3`(x86)/`  3`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 3,
          "minItems": 3
        },
        "padNode": {
          "title": "C++ Info",
          "description": "- name: `padNode`(ctype: `hkBool[1]`)\n - offset: ` 39`(x86)/` 67`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 1,
          "minItems": 1
        },
        "parentBoneIndices": {
          "title": "C++ Info",
          "description": "- name: `parentBoneIndices`(ctype: `hkArray<void>`)\n - offset: ` 88`(x86)/`128`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "rotationAxisCoordinates": {
          "title": "C++ Info",
          "description": "- name: `rotationAxisCoordinates`(ctype: `enum RotationAxisCoordinates`)\n - offset: ` 73`(x86)/`105`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/RotationAxisCoordinates"
        },
        "setAngleMethod": {
          "title": "C++ Info",
          "description": "- name: `setAngleMethod`(ctype: `enum SetAngleMethod`)\n - offset: ` 72`(x86)/`104`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/SetAngleMethod"
        },
        "startBoneIndex": {
          "title": "C++ Info",
          "description": "- name: `startBoneIndex`(ctype: `hkInt16`)\n - offset: ` 68`(x86)/`100`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "int16"
        },
        "twistAngle": {
          "title": "C++ Info",
          "description": "- name: `twistAngle`(ctype: `hkReal`)\n - offset: ` 64`(x86)/` 96`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "variableBindingSet": {
          "title": "C++ Info",
          "description": "- name: `variableBindingSet`(ctype: `struct hkbVariableBindingSet*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variableBindingSet",
        "cachedBindables",
        "areBindablesCached",
        "userData",
        "id",
        "cloneState",
        "padNode",
        "enable",
        "padModifier",
        "axisOfRotation",
        "twistAngle",
        "startBoneIndex",
        "endBoneIndex",
        "setAngleMethod",
        "rotationAxisCoordinates",
        "isAdditive",
        "boneChainIndices",
        "parentBoneIndices"
      ]
    },
    "hkbVariableBindingSet": {
      "title": "C++ Info",
      "description": "- name: `hkbVariableBindingSet`\n - version: `2`\n - signature: `0x338ad4ff`\n - size: ` 28`(x86)/` 40`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "bindings": {
          "title": "C++ Info",
          "description": "- name: `bindings`(ctype: `hkArray<struct hkbVariableBindingSetBinding>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkbVariableBindingSetBinding"
          }
        },
        "hasOutputBinding": {
          "title": "C++ Info",
          "description": "- name: `hasOutputBinding`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 36`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "indexOfBindingToEnable": {
          "title": "C++ Info",
          "description": "- name: `indexOfBindingToEnable`(ctype: `hkInt32`)\n - offset: ` 20`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "bindings",
        "indexOfBindingToEnable",
        "hasOutputBinding"
      ]
    },
    "hkbVariableBindingSetBinding": {
      "title": "C++ Info",
      "description": "- name: `hkbVariableBindingSetBinding`\n - version: `1`\n - signature: `0x4d592f72`\n - size: ` 32`(x86)/` 40`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "bindingType": {
          "title": "C++ Info",
          "description": "- name: `bindingType`(ctype: `enum BindingType`)\n - offset: ` 25`(x86)/` 33`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/BindingType"
        },
        "bitIndex": {
          "title": "C++ Info",
          "description": "- name: `bitIndex`(ctype: `hkInt8`)\n - offset: ` 24`(x86)/` 32`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "int8"
        },
        "flags": {
          "title": "C++ Info",
          "description": "- name: `flags`(ctype: `flags unknown`)\n - offset: ` 28`(x86)/` 36`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "memberClass": {
          "title": "C++ Info",
          "description": "- name: `memberClass`(ctype: `void*`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "memberPath": {
          "title": "C++ Info",
          "description": "- name: `memberPath`(ctype: `hkStringPtr`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "memberType": {
          "title": "C++ Info",
          "description": "- name: `memberType`(ctype: `enum unknown`)\n - offset: ` 26`(x86)/` 34`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        },
        "offsetInArrayPlusOne": {
          "title": "C++ Info",
          "description": "- name: `offsetInArrayPlusOne`(ctype: `hkInt32`)\n - offset: ` 12`(x86)/` 20`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int32"
        },
        "offsetInObjectPlusOne": {
          "title": "C++ Info",
          "description": "- name: `offsetInObjectPlusOne`(ctype: `hkInt32`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int32"
        },
        "rootVariableIndex": {
          "title": "C++ Info",
          "description": "- name: `rootVariableIndex`(ctype: `hkInt32`)\n - offset: ` 16`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int32"
        },
        "variableIndex": {
          "title": "C++ Info",
          "description": "- name: `variableIndex`(ctype: `hkInt32`)\n - offset: ` 20`(x86)/` 28`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "variableType": {
          "title": "C++ Info",
          "description": "- name: `variableType`(ctype: `hkInt8`)\n - offset: ` 27`(x86)/` 35`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        }
      },
      "required": [
        "memberClass",
        "offsetInObjectPlusOne",
        "offsetInArrayPlusOne",
        "rootVariableIndex",
        "variableIndex",
        "bitIndex",
        "bindingType",
        "memberType",
        "variableType",
        "flags"
      ]
    },
    "hkbVariableInfo": {
      "title": "C++ Info",
      "description": "- name: `hkbVariableInfo`\n - version: `1`\n - signature: `0x9e746ba2`\n - size: `  6`(x86)/`  6`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum VariableType`)\n - offset: `  4`(x86)/`  4`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/VariableType"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "role": {
          "title": "C++ Info",
          "description": "- name: `role`(ctype: `struct hkbRoleAttribute`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "$ref": "#/$defs/hkbRoleAttribute"
        }
      },
      "required": [
        "role",
        "type"
      ]
    },
    "hkbVariableValue": {
      "title": "C++ Info",
      "description": "- name: `hkbVariableValue`\n - version: `0`\n - signature: `0xb99bd6a`\n - size: `  4`(x86)/`  4`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "value": {
          "title": "C++ Info",
          "description": "- name: `value`(ctype: `hkInt32`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "value"
      ]
    },
    "hkbVariableValueSet": {
      "title": "C++ Info",
      "description": "- name: `hkbVariableValueSet`\n - version: `0`\n - signature: `0x27812d8d`\n - size: ` 44`(x86)/` 64`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "quadVariableValues": {
          "title": "C++ Info",
          "description": "- name: `quadVariableValues`(ctype: `hkArray<hkVector4>`)\n - offset: ` 20`(x86)/` 32`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/Vector4"
          }
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "variantVariableValues": {
          "title": "C++ Info",
          "description": "- name: `variantVariableValues`(ctype: `hkArray<hkReferencedObject*>`)\n - offset: ` 32`(x86)/` 48`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "wordVariableValues": {
          "title": "C++ Info",
          "description": "- name: `wordVariableValues`(ctype: `hkArray<struct hkbVariableValue>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkbVariableValue"
          }
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "wordVariableValues",
        "quadVariableValues",
        "variantVariableValues"
      ]
    },
    "hkbWorldEnums": {
      "title": "C++ Info",
      "description": "- name: `hkbWorldEnums`\n - version: `0`\n - signature: `0x25640b46`\n - size: `  1`(x86)/`  1`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        }
      }
    },
    "hkbWorldFromModelModeData": {
      "title": "C++ Info",
      "description": "- name: `hkbWorldFromModelModeData`\n - version: `0`\n - signature: `0xa3af8783`\n - size: `  8`(x86)/`  8`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "mode": {
          "title": "C++ Info",
          "description": "- name: `mode`(ctype: `enum WorldFromModelMode`)\n - offset: `  6`(x86)/`  6`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/WorldFromModelMode"
        },
        "poseMatchingBone0": {
          "title": "C++ Info",
          "description": "- name: `poseMatchingBone0`(ctype: `hkInt16`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "int16"
        },
        "poseMatchingBone1": {
          "title": "C++ Info",
          "description": "- name: `poseMatchingBone1`(ctype: `hkInt16`)\n - offset: `  2`(x86)/`  2`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "int16"
        },
        "poseMatchingBone2": {
          "title": "C++ Info",
          "description": "- name: `poseMatchingBone2`(ctype: `hkInt16`)\n - offset: `  4`(x86)/`  4`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "poseMatchingBone0",
        "poseMatchingBone1",
        "poseMatchingBone2",
        "mode"
      ]
    },
    "hkp2dAngConstraintAtom": {
      "title": "C++ Info",
      "description": "- name: `hkp2dAngConstraintAtom`\n - version: `0`\n - signature: `0xdcdb8b8b`\n - size: `  4`(x86)/`  4`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum AtomType`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "$ref": "#/$defs/AtomType"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "freeRotationAxis": {
          "title": "C++ Info",
          "description": "- name: `freeRotationAxis`(ctype: `hkUint8`)\n - offset: `  2`(x86)/`  2`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        }
      },
      "required": [
        "type",
        "freeRotationAxis"
      ]
    },
    "hkpAabbPhantom": {
      "title": "C++ Info",
      "description": "- name: `hkpAabbPhantom`\n - version: `0`\n - signature: `0x2c5189dd`\n - size: `224`(x86)/`304`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "properties": {
          "title": "C++ Info",
          "description": "- name: `properties`(ctype: `hkArray<struct hkpProperty>`)\n - offset: `124`(x86)/`184`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkpProperty"
          }
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "aabb": {
          "title": "C++ Info",
          "description": "- name: `aabb`(ctype: `struct hkAabb`)\n - offset: `176`(x86)/`240`(x86_64)\n - type_size: ` 32`(x86)/` 32`(x86_64)",
          "$ref": "#/$defs/hkAabb"
        },
        "collidable": {
          "title": "C++ Info",
          "description": "- name: `collidable`(ctype: `struct hkpLinkedCollidable`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: ` 92`(x86)/`128`(x86_64)",
          "$ref": "#/$defs/hkpLinkedCollidable"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "multiThreadCheck": {
          "title": "C++ Info",
          "description": "- name: `multiThreadCheck`(ctype: `struct hkMultiThreadCheck`)\n - offset: `108`(x86)/`160`(x86_64)\n - type_size: ` 12`(x86)/` 12`(x86_64)",
          "$ref": "#/$defs/hkMultiThreadCheck"
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: `120`(x86)/`176`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "orderDirty": {
          "title": "C++ Info",
          "description": "- name: `orderDirty`(ctype: `hkBool`)\n - offset: `220`(x86)/`288`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "overlapListeners": {
          "title": "C++ Info",
          "description": "- name: `overlapListeners`(ctype: `hkArray<void*>`)\n - offset: `140`(x86)/`208`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "overlappingCollidables": {
          "title": "C++ Info",
          "description": "- name: `overlappingCollidables`(ctype: `hkArray<void*>`)\n - offset: `208`(x86)/`272`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "phantomListeners": {
          "title": "C++ Info",
          "description": "- name: `phantomListeners`(ctype: `hkArray<void*>`)\n - offset: `152`(x86)/`224`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "treeData": {
          "title": "C++ Info",
          "description": "- name: `treeData`(ctype: `void*`)\n - offset: `136`(x86)/`200`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "world": {
          "title": "C++ Info",
          "description": "- name: `world`(ctype: `void*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "world",
        "userData",
        "collidable",
        "multiThreadCheck",
        "properties",
        "treeData",
        "overlapListeners",
        "phantomListeners",
        "aabb",
        "overlappingCollidables",
        "orderDirty"
      ]
    },
    "hkpAction": {
      "title": "C++ Info",
      "description": "- name: `hkpAction`\n - version: `0`\n - signature: `0xbdf70a51`\n - size: ` 24`(x86)/` 48`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "island": {
          "title": "C++ Info",
          "description": "- name: `island`(ctype: `void*`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 20`(x86)/` 40`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "world": {
          "title": "C++ Info",
          "description": "- name: `world`(ctype: `void*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "world",
        "island",
        "userData"
      ]
    },
    "hkpAgent1nSector": {
      "title": "C++ Info",
      "description": "- name: `hkpAgent1nSector`\n - version: `0`\n - signature: `0x626e55a`\n - size: `512`(x86)/`512`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "bytesAllocated": {
          "title": "C++ Info",
          "description": "- name: `bytesAllocated`(ctype: `hkUint32`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "data": {
          "title": "C++ Info",
          "description": "- name: `data`(ctype: `hkUint8[496]`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: `496`(x86)/`496`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "pad0": {
          "title": "C++ Info",
          "description": "- name: `pad0`(ctype: `hkUint32`)\n - offset: `  4`(x86)/`  4`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "pad1": {
          "title": "C++ Info",
          "description": "- name: `pad1`(ctype: `hkUint32`)\n - offset: `  8`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "pad2": {
          "title": "C++ Info",
          "description": "- name: `pad2`(ctype: `hkUint32`)\n - offset: ` 12`(x86)/` 12`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        }
      },
      "required": [
        "bytesAllocated",
        "pad0",
        "pad1",
        "pad2",
        "data"
      ]
    },
    "hkpAngConstraintAtom": {
      "title": "C++ Info",
      "description": "- name: `hkpAngConstraintAtom`\n - version: `0`\n - signature: `0x35bb3cd0`\n - size: `  4`(x86)/`  4`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum AtomType`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "$ref": "#/$defs/AtomType"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "firstConstrainedAxis": {
          "title": "C++ Info",
          "description": "- name: `firstConstrainedAxis`(ctype: `hkUint8`)\n - offset: `  2`(x86)/`  2`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        },
        "numConstrainedAxes": {
          "title": "C++ Info",
          "description": "- name: `numConstrainedAxes`(ctype: `hkUint8`)\n - offset: `  3`(x86)/`  3`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        }
      },
      "required": [
        "type",
        "firstConstrainedAxis",
        "numConstrainedAxes"
      ]
    },
    "hkpAngFrictionConstraintAtom": {
      "title": "C++ Info",
      "description": "- name: `hkpAngFrictionConstraintAtom`\n - version: `0`\n - signature: `0xf313aa80`\n - size: ` 12`(x86)/` 12`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum AtomType`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "$ref": "#/$defs/AtomType"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "firstFrictionAxis": {
          "title": "C++ Info",
          "description": "- name: `firstFrictionAxis`(ctype: `hkUint8`)\n - offset: `  3`(x86)/`  3`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        },
        "isEnabled": {
          "title": "C++ Info",
          "description": "- name: `isEnabled`(ctype: `hkUint8`)\n - offset: `  2`(x86)/`  2`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        },
        "maxFrictionTorque": {
          "title": "C++ Info",
          "description": "- name: `maxFrictionTorque`(ctype: `hkReal`)\n - offset: `  8`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "numFrictionAxes": {
          "title": "C++ Info",
          "description": "- name: `numFrictionAxes`(ctype: `hkUint8`)\n - offset: `  4`(x86)/`  4`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        }
      },
      "required": [
        "type",
        "isEnabled",
        "firstFrictionAxis",
        "numFrictionAxes",
        "maxFrictionTorque"
      ]
    },
    "hkpAngLimitConstraintAtom": {
      "title": "C++ Info",
      "description": "- name: `hkpAngLimitConstraintAtom`\n - version: `0`\n - signature: `0x9be0d9d`\n - size: ` 16`(x86)/` 16`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum AtomType`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "$ref": "#/$defs/AtomType"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "angularLimitsTauFactor": {
          "title": "C++ Info",
          "description": "- name: `angularLimitsTauFactor`(ctype: `hkReal`)\n - offset: ` 12`(x86)/` 12`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "isEnabled": {
          "title": "C++ Info",
          "description": "- name: `isEnabled`(ctype: `hkUint8`)\n - offset: `  2`(x86)/`  2`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        },
        "limitAxis": {
          "title": "C++ Info",
          "description": "- name: `limitAxis`(ctype: `hkUint8`)\n - offset: `  3`(x86)/`  3`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        },
        "maxAngle": {
          "title": "C++ Info",
          "description": "- name: `maxAngle`(ctype: `hkReal`)\n - offset: `  8`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "minAngle": {
          "title": "C++ Info",
          "description": "- name: `minAngle`(ctype: `hkReal`)\n - offset: `  4`(x86)/`  4`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        }
      },
      "required": [
        "type",
        "isEnabled",
        "limitAxis",
        "minAngle",
        "maxAngle",
        "angularLimitsTauFactor"
      ]
    },
    "hkpAngMotorConstraintAtom": {
      "title": "C++ Info",
      "description": "- name: `hkpAngMotorConstraintAtom`\n - version: `0`\n - signature: `0x81f087ff`\n - size: ` 20`(x86)/` 24`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum AtomType`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "$ref": "#/$defs/AtomType"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "correspondingAngLimitSolverResultOffset": {
          "title": "C++ Info",
          "description": "- name: `correspondingAngLimitSolverResultOffset`(ctype: `hkInt16`)\n - offset: `  8`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "int16"
        },
        "initializedOffset": {
          "title": "C++ Info",
          "description": "- name: `initializedOffset`(ctype: `hkInt16`)\n - offset: `  4`(x86)/`  4`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "int16"
        },
        "isEnabled": {
          "title": "C++ Info",
          "description": "- name: `isEnabled`(ctype: `hkBool`)\n - offset: `  2`(x86)/`  2`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "motor": {
          "title": "C++ Info",
          "description": "- name: `motor`(ctype: `struct hkpConstraintMotor*`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "motorAxis": {
          "title": "C++ Info",
          "description": "- name: `motorAxis`(ctype: `hkUint8`)\n - offset: `  3`(x86)/`  3`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        },
        "previousTargetAngleOffset": {
          "title": "C++ Info",
          "description": "- name: `previousTargetAngleOffset`(ctype: `hkInt16`)\n - offset: `  6`(x86)/`  6`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "int16"
        },
        "targetAngle": {
          "title": "C++ Info",
          "description": "- name: `targetAngle`(ctype: `hkReal`)\n - offset: ` 12`(x86)/` 12`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        }
      },
      "required": [
        "type",
        "isEnabled",
        "motorAxis",
        "initializedOffset",
        "previousTargetAngleOffset",
        "correspondingAngLimitSolverResultOffset",
        "targetAngle",
        "motor"
      ]
    },
    "hkpAngularDashpotAction": {
      "title": "C++ Info",
      "description": "- name: `hkpAngularDashpotAction`\n - version: `0`\n - signature: `0x35f4c487`\n - size: ` 64`(x86)/` 96`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "damping": {
          "title": "C++ Info",
          "description": "- name: `damping`(ctype: `hkReal`)\n - offset: ` 52`(x86)/` 84`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "entityA": {
          "title": "C++ Info",
          "description": "- name: `entityA`(ctype: `struct hkpEntity*`)\n - offset: ` 24`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "entityB": {
          "title": "C++ Info",
          "description": "- name: `entityB`(ctype: `struct hkpEntity*`)\n - offset: ` 28`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "island": {
          "title": "C++ Info",
          "description": "- name: `island`(ctype: `void*`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 20`(x86)/` 40`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "rotation": {
          "title": "C++ Info",
          "description": "- name: `rotation`(ctype: `hkQuaternion`)\n - offset: ` 32`(x86)/` 64`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Quaternion"
        },
        "strength": {
          "title": "C++ Info",
          "description": "- name: `strength`(ctype: `hkReal`)\n - offset: ` 48`(x86)/` 80`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "world": {
          "title": "C++ Info",
          "description": "- name: `world`(ctype: `void*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "world",
        "island",
        "userData",
        "entityA",
        "entityB",
        "rotation",
        "strength",
        "damping"
      ]
    },
    "hkpArrayAction": {
      "title": "C++ Info",
      "description": "- name: `hkpArrayAction`\n - version: `0`\n - signature: `0x674bcd2d`\n - size: ` 36`(x86)/` 64`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "entities": {
          "title": "C++ Info",
          "description": "- name: `entities`(ctype: `hkArray<hkpEntity*>`)\n - offset: ` 24`(x86)/` 48`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "island": {
          "title": "C++ Info",
          "description": "- name: `island`(ctype: `void*`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 20`(x86)/` 40`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "world": {
          "title": "C++ Info",
          "description": "- name: `world`(ctype: `void*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "world",
        "island",
        "userData",
        "entities"
      ]
    },
    "hkpBallAndSocketConstraintData": {
      "title": "C++ Info",
      "description": "- name: `hkpBallAndSocketConstraintData`\n - version: `0`\n - signature: `0x5a6954d9`\n - size: ` 96`(x86)/`112`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "atoms": {
          "title": "C++ Info",
          "description": "- name: `atoms`(ctype: `struct hkpBallAndSocketConstraintDataAtoms`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: ` 80`(x86)/` 80`(x86_64)\n - flags: `ALIGN_16`",
          "$ref": "#/$defs/hkpBallAndSocketConstraintDataAtoms"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "userData",
        "atoms"
      ]
    },
    "hkpBallAndSocketConstraintDataAtoms": {
      "title": "C++ Info",
      "description": "- name: `hkpBallAndSocketConstraintDataAtoms`\n - version: `1`\n - signature: `0xc73dcaf9`\n - size: ` 80`(x86)/` 80`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "ballSocket": {
          "title": "C++ Info",
          "description": "- name: `ballSocket`(ctype: `struct hkpBallSocketConstraintAtom`)\n - offset: ` 64`(x86)/` 64`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/hkpBallSocketConstraintAtom"
        },
        "pivots": {
          "title": "C++ Info",
          "description": "- name: `pivots`(ctype: `struct hkpSetLocalTranslationsConstraintAtom`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: ` 48`(x86)/` 48`(x86_64)",
          "$ref": "#/$defs/hkpSetLocalTranslationsConstraintAtom"
        },
        "setupStabilization": {
          "title": "C++ Info",
          "description": "- name: `setupStabilization`(ctype: `struct hkpSetupStabilizationAtom`)\n - offset: ` 48`(x86)/` 48`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/hkpSetupStabilizationAtom"
        }
      },
      "required": [
        "pivots",
        "setupStabilization",
        "ballSocket"
      ]
    },
    "hkpBallGun": {
      "title": "C++ Info",
      "description": "- name: `hkpBallGun`\n - version: `0`\n - signature: `0x57b06d35`\n - size: ` 96`(x86)/`112`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum unknown`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "addedBodies": {
          "title": "C++ Info",
          "description": "- name: `addedBodies`(ctype: `void*`)\n - offset: ` 80`(x86)/` 96`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "bulletMass": {
          "title": "C++ Info",
          "description": "- name: `bulletMass`(ctype: `hkReal`)\n - offset: ` 40`(x86)/` 64`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "bulletOffsetFromCenter": {
          "title": "C++ Info",
          "description": "- name: `bulletOffsetFromCenter`(ctype: `hkVector4`)\n - offset: ` 64`(x86)/` 80`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "bulletRadius": {
          "title": "C++ Info",
          "description": "- name: `bulletRadius`(ctype: `hkReal`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "bulletVelocity": {
          "title": "C++ Info",
          "description": "- name: `bulletVelocity`(ctype: `hkReal`)\n - offset: ` 36`(x86)/` 60`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "damageMultiplier": {
          "title": "C++ Info",
          "description": "- name: `damageMultiplier`(ctype: `hkReal`)\n - offset: ` 44`(x86)/` 68`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "keyboardKey": {
          "title": "C++ Info",
          "description": "- name: `keyboardKey`(ctype: `enum KeyboardKey`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/KeyboardKey"
        },
        "listeners": {
          "title": "C++ Info",
          "description": "- name: `listeners`(ctype: `hkArray<void*>`)\n - offset: ` 20`(x86)/` 40`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "maxBulletsInWorld": {
          "title": "C++ Info",
          "description": "- name: `maxBulletsInWorld`(ctype: `hkInt32`)\n - offset: ` 48`(x86)/` 72`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "type",
        "keyboardKey",
        "listeners",
        "bulletRadius",
        "bulletVelocity",
        "bulletMass",
        "damageMultiplier",
        "maxBulletsInWorld",
        "bulletOffsetFromCenter",
        "addedBodies"
      ]
    },
    "hkpBallSocketChainData": {
      "title": "C++ Info",
      "description": "- name: `hkpBallSocketChainData`\n - version: `0`\n - signature: `0x102aae9c`\n - size: ` 52`(x86)/` 80`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "atoms": {
          "title": "C++ Info",
          "description": "- name: `atoms`(ctype: `struct hkpBridgeAtoms`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 24`(x86_64)",
          "$ref": "#/$defs/hkpBridgeAtoms"
        },
        "cfm": {
          "title": "C++ Info",
          "description": "- name: `cfm`(ctype: `hkReal`)\n - offset: ` 44`(x86)/` 72`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "damping": {
          "title": "C++ Info",
          "description": "- name: `damping`(ctype: `hkReal`)\n - offset: ` 40`(x86)/` 68`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "infos": {
          "title": "C++ Info",
          "description": "- name: `infos`(ctype: `hkArray<struct hkpBallSocketChainDataConstraintInfo>`)\n - offset: ` 24`(x86)/` 48`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkpBallSocketChainDataConstraintInfo"
          }
        },
        "maxErrorDistance": {
          "title": "C++ Info",
          "description": "- name: `maxErrorDistance`(ctype: `hkReal`)\n - offset: ` 48`(x86)/` 76`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "tau": {
          "title": "C++ Info",
          "description": "- name: `tau`(ctype: `hkReal`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "userData",
        "atoms",
        "infos",
        "tau",
        "damping",
        "cfm",
        "maxErrorDistance"
      ]
    },
    "hkpBallSocketChainDataConstraintInfo": {
      "title": "C++ Info",
      "description": "- name: `hkpBallSocketChainDataConstraintInfo`\n - version: `0`\n - signature: `0xc9cbedf2`\n - size: ` 32`(x86)/` 32`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "pivotInA": {
          "title": "C++ Info",
          "description": "- name: `pivotInA`(ctype: `hkVector4`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "pivotInB": {
          "title": "C++ Info",
          "description": "- name: `pivotInB`(ctype: `hkVector4`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        }
      },
      "required": [
        "pivotInA",
        "pivotInB"
      ]
    },
    "hkpBallSocketConstraintAtom": {
      "title": "C++ Info",
      "description": "- name: `hkpBallSocketConstraintAtom`\n - version: `3`\n - signature: `0xe70e4dfa`\n - size: ` 16`(x86)/` 16`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum AtomType`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "$ref": "#/$defs/AtomType"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "bodiesToNotify": {
          "title": "C++ Info",
          "description": "- name: `bodiesToNotify`(ctype: `hkUint8`)\n - offset: `  3`(x86)/`  3`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        },
        "inertiaStabilizationFactor": {
          "title": "C++ Info",
          "description": "- name: `inertiaStabilizationFactor`(ctype: `hkReal`)\n - offset: ` 12`(x86)/` 12`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "maxImpulse": {
          "title": "C++ Info",
          "description": "- name: `maxImpulse`(ctype: `hkReal`)\n - offset: `  8`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "solvingMethod": {
          "title": "C++ Info",
          "description": "- name: `solvingMethod`(ctype: `enum SolvingMethod`)\n - offset: `  2`(x86)/`  2`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/SolvingMethod"
        },
        "velocityStabilizationFactor": {
          "title": "C++ Info",
          "description": "- name: `velocityStabilizationFactor`(ctype: `hkUint8`)\n - offset: `  4`(x86)/`  4`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        }
      },
      "required": [
        "type",
        "solvingMethod",
        "bodiesToNotify",
        "velocityStabilizationFactor",
        "maxImpulse",
        "inertiaStabilizationFactor"
      ]
    },
    "hkpBinaryAction": {
      "title": "C++ Info",
      "description": "- name: `hkpBinaryAction`\n - version: `0`\n - signature: `0xc00f3403`\n - size: ` 32`(x86)/` 64`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "entityA": {
          "title": "C++ Info",
          "description": "- name: `entityA`(ctype: `struct hkpEntity*`)\n - offset: ` 24`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "entityB": {
          "title": "C++ Info",
          "description": "- name: `entityB`(ctype: `struct hkpEntity*`)\n - offset: ` 28`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "island": {
          "title": "C++ Info",
          "description": "- name: `island`(ctype: `void*`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 20`(x86)/` 40`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "world": {
          "title": "C++ Info",
          "description": "- name: `world`(ctype: `void*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "world",
        "island",
        "userData",
        "entityA",
        "entityB"
      ]
    },
    "hkpBoxMotion": {
      "title": "C++ Info",
      "description": "- name: `hkpBoxMotion`\n - version: `0`\n - signature: `0xbafa2bb7`\n - size: `288`(x86)/`320`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum MotionType`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/MotionType"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "angularVelocity": {
          "title": "C++ Info",
          "description": "- name: `angularVelocity`(ctype: `hkVector4`)\n - offset: `224`(x86)/`240`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "deactivationIntegrateCounter": {
          "title": "C++ Info",
          "description": "- name: `deactivationIntegrateCounter`(ctype: `hkUint8`)\n - offset: `  9`(x86)/` 17`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        },
        "deactivationNumInactiveFrames": {
          "title": "C++ Info",
          "description": "- name: `deactivationNumInactiveFrames`(ctype: `hkUint16[2]`)\n - offset: ` 10`(x86)/` 18`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint16",
            "minimum": 0
          },
          "maxItems": 2,
          "minItems": 2
        },
        "deactivationRefOrientation": {
          "title": "C++ Info",
          "description": "- name: `deactivationRefOrientation`(ctype: `hkUint32[2]`)\n - offset: `272`(x86)/`288`(x86_64)\n - type_size: `  8`(x86)/`  8`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          },
          "maxItems": 2,
          "minItems": 2
        },
        "deactivationRefPosition": {
          "title": "C++ Info",
          "description": "- name: `deactivationRefPosition`(ctype: `hkVector4[2]`)\n - offset: `240`(x86)/`256`(x86_64)\n - type_size: ` 32`(x86)/` 32`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/Vector4"
          },
          "maxItems": 2,
          "minItems": 2
        },
        "gravityFactor": {
          "title": "C++ Info",
          "description": "- name: `gravityFactor`(ctype: `hkHalf`)\n - offset: `286`(x86)/`306`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "inertiaAndMassInv": {
          "title": "C++ Info",
          "description": "- name: `inertiaAndMassInv`(ctype: `hkVector4`)\n - offset: `192`(x86)/`208`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "linearVelocity": {
          "title": "C++ Info",
          "description": "- name: `linearVelocity`(ctype: `hkVector4`)\n - offset: `208`(x86)/`224`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "motionState": {
          "title": "C++ Info",
          "description": "- name: `motionState`(ctype: `struct hkMotionState`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: `176`(x86)/`176`(x86_64)",
          "$ref": "#/$defs/hkMotionState"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "savedMotion": {
          "title": "C++ Info",
          "description": "- name: `savedMotion`(ctype: `struct hkpMaxSizeMotion*`)\n - offset: `280`(x86)/`296`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "savedQualityTypeIndex": {
          "title": "C++ Info",
          "description": "- name: `savedQualityTypeIndex`(ctype: `hkUint16`)\n - offset: `284`(x86)/`304`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "type",
        "deactivationIntegrateCounter",
        "deactivationNumInactiveFrames",
        "motionState",
        "inertiaAndMassInv",
        "linearVelocity",
        "angularVelocity",
        "deactivationRefPosition",
        "deactivationRefOrientation",
        "savedMotion",
        "savedQualityTypeIndex",
        "gravityFactor"
      ]
    },
    "hkpBoxShape": {
      "title": "C++ Info",
      "description": "- name: `hkpBoxShape`\n - version: `0`\n - signature: `0x3444d2d5`\n - size: ` 48`(x86)/` 64`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum unknown`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "halfExtents": {
          "title": "C++ Info",
          "description": "- name: `halfExtents`(ctype: `hkVector4`)\n - offset: ` 32`(x86)/` 48`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "radius": {
          "title": "C++ Info",
          "description": "- name: `radius`(ctype: `hkReal`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "userData",
        "type",
        "radius",
        "halfExtents"
      ]
    },
    "hkpBreakableBody": {
      "title": "C++ Info",
      "description": "- name: `hkpBreakableBody`\n - version: `0`\n - signature: `0xda8c7d7d`\n - size: `  8`(x86)/` 16`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount"
      ]
    },
    "hkpBreakableConstraintData": {
      "title": "C++ Info",
      "description": "- name: `hkpBreakableConstraintData`\n - version: `0`\n - signature: `0x7d6310c8`\n - size: ` 40`(x86)/` 72`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "atoms": {
          "title": "C++ Info",
          "description": "- name: `atoms`(ctype: `struct hkpBridgeAtoms`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 24`(x86_64)",
          "$ref": "#/$defs/hkpBridgeAtoms"
        },
        "childNumSolverResults": {
          "title": "C++ Info",
          "description": "- name: `childNumSolverResults`(ctype: `hkUint16`)\n - offset: ` 30`(x86)/` 58`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "childRuntimeSize": {
          "title": "C++ Info",
          "description": "- name: `childRuntimeSize`(ctype: `hkUint16`)\n - offset: ` 28`(x86)/` 56`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "constraintData": {
          "title": "C++ Info",
          "description": "- name: `constraintData`(ctype: `struct hkpConstraintData*`)\n - offset: ` 24`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "removeWhenBroken": {
          "title": "C++ Info",
          "description": "- name: `removeWhenBroken`(ctype: `hkBool`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "revertBackVelocityOnBreak": {
          "title": "C++ Info",
          "description": "- name: `revertBackVelocityOnBreak`(ctype: `hkBool`)\n - offset: ` 37`(x86)/` 65`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "solverResultLimit": {
          "title": "C++ Info",
          "description": "- name: `solverResultLimit`(ctype: `hkReal`)\n - offset: ` 32`(x86)/` 60`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "userData",
        "atoms",
        "constraintData",
        "childRuntimeSize",
        "childNumSolverResults",
        "solverResultLimit",
        "removeWhenBroken",
        "revertBackVelocityOnBreak"
      ]
    },
    "hkpBridgeAtoms": {
      "title": "C++ Info",
      "description": "- name: `hkpBridgeAtoms`\n - version: `0`\n - signature: `0xde152a4d`\n - size: ` 12`(x86)/` 24`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "bridgeAtom": {
          "title": "C++ Info",
          "description": "- name: `bridgeAtom`(ctype: `struct hkpBridgeConstraintAtom`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: ` 12`(x86)/` 24`(x86_64)",
          "$ref": "#/$defs/hkpBridgeConstraintAtom"
        }
      },
      "required": [
        "bridgeAtom"
      ]
    },
    "hkpBridgeConstraintAtom": {
      "title": "C++ Info",
      "description": "- name: `hkpBridgeConstraintAtom`\n - version: `0`\n - signature: `0x87a4f31b`\n - size: ` 12`(x86)/` 24`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum AtomType`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "$ref": "#/$defs/AtomType"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "buildJacobianFunc": {
          "title": "C++ Info",
          "description": "- name: `buildJacobianFunc`(ctype: `void*`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "constraintData": {
          "title": "C++ Info",
          "description": "- name: `constraintData`(ctype: `struct hkpConstraintData*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `NOT_OWNED`",
          "type": "string"
        }
      },
      "required": [
        "type",
        "buildJacobianFunc",
        "constraintData"
      ]
    },
    "hkpBroadPhaseHandle": {
      "title": "C++ Info",
      "description": "- name: `hkpBroadPhaseHandle`\n - version: `0`\n - signature: `0x940569dc`\n - size: `  4`(x86)/`  4`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkUint32`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        }
      },
      "required": [
        "id"
      ]
    },
    "hkpBvShape": {
      "title": "C++ Info",
      "description": "- name: `hkpBvShape`\n - version: `0`\n - signature: `0x286eb64c`\n - size: ` 28`(x86)/` 56`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum unknown`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "boundingVolumeShape": {
          "title": "C++ Info",
          "description": "- name: `boundingVolumeShape`(ctype: `struct hkpShape*`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "childShape": {
          "title": "C++ Info",
          "description": "- name: `childShape`(ctype: `struct hkpSingleShapeContainer`)\n - offset: ` 20`(x86)/` 40`(x86_64)\n - type_size: `  8`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/hkpSingleShapeContainer"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "userData",
        "type",
        "boundingVolumeShape",
        "childShape"
      ]
    },
    "hkpBvTreeShape": {
      "title": "C++ Info",
      "description": "- name: `hkpBvTreeShape`\n - version: `0`\n - signature: `0xa823d623`\n - size: ` 20`(x86)/` 40`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum unknown`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "bvTreeType": {
          "title": "C++ Info",
          "description": "- name: `bvTreeType`(ctype: `enum BvTreeType`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/BvTreeType"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "userData",
        "type",
        "bvTreeType"
      ]
    },
    "hkpCachingShapePhantom": {
      "title": "C++ Info",
      "description": "- name: `hkpCachingShapePhantom`\n - version: `0`\n - signature: `0xcf227f58`\n - size: `368`(x86)/`448`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "properties": {
          "title": "C++ Info",
          "description": "- name: `properties`(ctype: `hkArray<struct hkpProperty>`)\n - offset: `124`(x86)/`184`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkpProperty"
          }
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "collidable": {
          "title": "C++ Info",
          "description": "- name: `collidable`(ctype: `struct hkpLinkedCollidable`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: ` 92`(x86)/`128`(x86_64)",
          "$ref": "#/$defs/hkpLinkedCollidable"
        },
        "collisionDetails": {
          "title": "C++ Info",
          "description": "- name: `collisionDetails`(ctype: `hkArray<void>`)\n - offset: `352`(x86)/`416`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "motionState": {
          "title": "C++ Info",
          "description": "- name: `motionState`(ctype: `struct hkMotionState`)\n - offset: `176`(x86)/`240`(x86_64)\n - type_size: `176`(x86)/`176`(x86_64)",
          "$ref": "#/$defs/hkMotionState"
        },
        "multiThreadCheck": {
          "title": "C++ Info",
          "description": "- name: `multiThreadCheck`(ctype: `struct hkMultiThreadCheck`)\n - offset: `108`(x86)/`160`(x86_64)\n - type_size: ` 12`(x86)/` 12`(x86_64)",
          "$ref": "#/$defs/hkMultiThreadCheck"
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: `120`(x86)/`176`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "orderDirty": {
          "title": "C++ Info",
          "description": "- name: `orderDirty`(ctype: `hkBool`)\n - offset: `364`(x86)/`432`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "overlapListeners": {
          "title": "C++ Info",
          "description": "- name: `overlapListeners`(ctype: `hkArray<void*>`)\n - offset: `140`(x86)/`208`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "phantomListeners": {
          "title": "C++ Info",
          "description": "- name: `phantomListeners`(ctype: `hkArray<void*>`)\n - offset: `152`(x86)/`224`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "treeData": {
          "title": "C++ Info",
          "description": "- name: `treeData`(ctype: `void*`)\n - offset: `136`(x86)/`200`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "world": {
          "title": "C++ Info",
          "description": "- name: `world`(ctype: `void*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "world",
        "userData",
        "collidable",
        "multiThreadCheck",
        "properties",
        "treeData",
        "overlapListeners",
        "phantomListeners",
        "motionState",
        "collisionDetails",
        "orderDirty"
      ]
    },
    "hkpCallbackConstraintMotor": {
      "title": "C++ Info",
      "description": "- name: `hkpCallbackConstraintMotor`\n - version: `0`\n - signature: `0xafcd79ad`\n - size: ` 40`(x86)/` 72`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum MotorType`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/MotorType"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "callbackFunc": {
          "title": "C++ Info",
          "description": "- name: `callbackFunc`(ctype: `void*`)\n - offset: ` 20`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "callbackType": {
          "title": "C++ Info",
          "description": "- name: `callbackType`(ctype: `enum CallbackType`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "$ref": "#/$defs/CallbackType"
        },
        "maxForce": {
          "title": "C++ Info",
          "description": "- name: `maxForce`(ctype: `hkReal`)\n - offset: ` 16`(x86)/` 28`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "minForce": {
          "title": "C++ Info",
          "description": "- name: `minForce`(ctype: `hkReal`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "userData0": {
          "title": "C++ Info",
          "description": "- name: `userData0`(ctype: `hkUlong`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "userData1": {
          "title": "C++ Info",
          "description": "- name: `userData1`(ctype: `hkUlong`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "userData2": {
          "title": "C++ Info",
          "description": "- name: `userData2`(ctype: `hkUlong`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "type",
        "minForce",
        "maxForce",
        "callbackFunc",
        "callbackType",
        "userData0",
        "userData1",
        "userData2"
      ]
    },
    "hkpCapsuleShape": {
      "title": "C++ Info",
      "description": "- name: `hkpCapsuleShape`\n - version: `0`\n - signature: `0xdd0b1fd3`\n - size: ` 64`(x86)/` 80`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum unknown`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "radius": {
          "title": "C++ Info",
          "description": "- name: `radius`(ctype: `hkReal`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "vertexA": {
          "title": "C++ Info",
          "description": "- name: `vertexA`(ctype: `hkVector4`)\n - offset: ` 32`(x86)/` 48`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "vertexB": {
          "title": "C++ Info",
          "description": "- name: `vertexB`(ctype: `hkVector4`)\n - offset: ` 48`(x86)/` 64`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "userData",
        "type",
        "radius",
        "vertexA",
        "vertexB"
      ]
    },
    "hkpCdBody": {
      "title": "C++ Info",
      "description": "- name: `hkpCdBody`\n - version: `1`\n - signature: `0x54a4b841`\n - size: ` 16`(x86)/` 32`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "motion": {
          "title": "C++ Info",
          "description": "- name: `motion`(ctype: `void*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "parent": {
          "title": "C++ Info",
          "description": "- name: `parent`(ctype: `struct hkpCdBody*`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "shape": {
          "title": "C++ Info",
          "description": "- name: `shape`(ctype: `struct hkpShape*`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "shapeKey": {
          "title": "C++ Info",
          "description": "- name: `shapeKey`(ctype: `hkUint32`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        }
      },
      "required": [
        "shape",
        "shapeKey",
        "motion",
        "parent"
      ]
    },
    "hkpCenterOfMassChangerModifierConstraintAtom": {
      "title": "C++ Info",
      "description": "- name: `hkpCenterOfMassChangerModifierConstraintAtom`\n - version: `0`\n - signature: `0x1d7dbdd2`\n - size: ` 64`(x86)/` 80`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum AtomType`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "$ref": "#/$defs/AtomType"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "child": {
          "title": "C++ Info",
          "description": "- name: `child`(ctype: `struct hkpConstraintAtom*`)\n - offset: ` 20`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "childSize": {
          "title": "C++ Info",
          "description": "- name: `childSize`(ctype: `hkUint16`)\n - offset: ` 18`(x86)/` 18`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "displacementA": {
          "title": "C++ Info",
          "description": "- name: `displacementA`(ctype: `hkVector4`)\n - offset: ` 32`(x86)/` 48`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "displacementB": {
          "title": "C++ Info",
          "description": "- name: `displacementB`(ctype: `hkVector4`)\n - offset: ` 48`(x86)/` 64`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "modifierAtomSize": {
          "title": "C++ Info",
          "description": "- name: `modifierAtomSize`(ctype: `hkUint16`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `ALIGN_16`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "pad": {
          "title": "C++ Info",
          "description": "- name: `pad`(ctype: `hkUint32[2]`)\n - offset: ` 24`(x86)/` 32`(x86_64)\n - type_size: `  8`(x86)/`  8`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          },
          "maxItems": 2,
          "minItems": 2
        }
      },
      "required": [
        "type",
        "modifierAtomSize",
        "childSize",
        "child",
        "pad",
        "displacementA",
        "displacementB"
      ]
    },
    "hkpCharacterControllerCinfo": {
      "title": "C++ Info",
      "description": "- name: `hkpCharacterControllerCinfo`\n - version: `0`\n - signature: `0xda8c7d7d`\n - size: `  8`(x86)/` 16`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount"
      ]
    },
    "hkpCharacterMotion": {
      "title": "C++ Info",
      "description": "- name: `hkpCharacterMotion`\n - version: `0`\n - signature: `0xbafa2bb7`\n - size: `288`(x86)/`320`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum MotionType`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/MotionType"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "angularVelocity": {
          "title": "C++ Info",
          "description": "- name: `angularVelocity`(ctype: `hkVector4`)\n - offset: `224`(x86)/`240`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "deactivationIntegrateCounter": {
          "title": "C++ Info",
          "description": "- name: `deactivationIntegrateCounter`(ctype: `hkUint8`)\n - offset: `  9`(x86)/` 17`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        },
        "deactivationNumInactiveFrames": {
          "title": "C++ Info",
          "description": "- name: `deactivationNumInactiveFrames`(ctype: `hkUint16[2]`)\n - offset: ` 10`(x86)/` 18`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint16",
            "minimum": 0
          },
          "maxItems": 2,
          "minItems": 2
        },
        "deactivationRefOrientation": {
          "title": "C++ Info",
          "description": "- name: `deactivationRefOrientation`(ctype: `hkUint32[2]`)\n - offset: `272`(x86)/`288`(x86_64)\n - type_size: `  8`(x86)/`  8`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          },
          "maxItems": 2,
          "minItems": 2
        },
        "deactivationRefPosition": {
          "title": "C++ Info",
          "description": "- name: `deactivationRefPosition`(ctype: `hkVector4[2]`)\n - offset: `240`(x86)/`256`(x86_64)\n - type_size: ` 32`(x86)/` 32`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/Vector4"
          },
          "maxItems": 2,
          "minItems": 2
        },
        "gravityFactor": {
          "title": "C++ Info",
          "description": "- name: `gravityFactor`(ctype: `hkHalf`)\n - offset: `286`(x86)/`306`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "inertiaAndMassInv": {
          "title": "C++ Info",
          "description": "- name: `inertiaAndMassInv`(ctype: `hkVector4`)\n - offset: `192`(x86)/`208`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "linearVelocity": {
          "title": "C++ Info",
          "description": "- name: `linearVelocity`(ctype: `hkVector4`)\n - offset: `208`(x86)/`224`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "motionState": {
          "title": "C++ Info",
          "description": "- name: `motionState`(ctype: `struct hkMotionState`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: `176`(x86)/`176`(x86_64)",
          "$ref": "#/$defs/hkMotionState"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "savedMotion": {
          "title": "C++ Info",
          "description": "- name: `savedMotion`(ctype: `struct hkpMaxSizeMotion*`)\n - offset: `280`(x86)/`296`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "savedQualityTypeIndex": {
          "title": "C++ Info",
          "description": "- name: `savedQualityTypeIndex`(ctype: `hkUint16`)\n - offset: `284`(x86)/`304`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "type",
        "deactivationIntegrateCounter",
        "deactivationNumInactiveFrames",
        "motionState",
        "inertiaAndMassInv",
        "linearVelocity",
        "angularVelocity",
        "deactivationRefPosition",
        "deactivationRefOrientation",
        "savedMotion",
        "savedQualityTypeIndex",
        "gravityFactor"
      ]
    },
    "hkpCharacterProxyCinfo": {
      "title": "C++ Info",
      "description": "- name: `hkpCharacterProxyCinfo`\n - version: `1`\n - signature: `0x586d97b2`\n - size: `144`(x86)/`144`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "characterMass": {
          "title": "C++ Info",
          "description": "- name: `characterMass`(ctype: `hkReal`)\n - offset: `112`(x86)/`116`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "characterStrength": {
          "title": "C++ Info",
          "description": "- name: `characterStrength`(ctype: `hkReal`)\n - offset: `108`(x86)/`112`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "contactAngleSensitivity": {
          "title": "C++ Info",
          "description": "- name: `contactAngleSensitivity`(ctype: `hkReal`)\n - offset: ` 96`(x86)/`100`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "dynamicFriction": {
          "title": "C++ Info",
          "description": "- name: `dynamicFriction`(ctype: `hkReal`)\n - offset: ` 48`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "extraDownStaticFriction": {
          "title": "C++ Info",
          "description": "- name: `extraDownStaticFriction`(ctype: `hkReal`)\n - offset: ` 84`(x86)/` 84`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "extraUpStaticFriction": {
          "title": "C++ Info",
          "description": "- name: `extraUpStaticFriction`(ctype: `hkReal`)\n - offset: ` 80`(x86)/` 80`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "keepContactTolerance": {
          "title": "C++ Info",
          "description": "- name: `keepContactTolerance`(ctype: `hkReal`)\n - offset: ` 56`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "keepDistance": {
          "title": "C++ Info",
          "description": "- name: `keepDistance`(ctype: `hkReal`)\n - offset: ` 92`(x86)/` 96`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "maxCastIterations": {
          "title": "C++ Info",
          "description": "- name: `maxCastIterations`(ctype: `hkInt32`)\n - offset: `124`(x86)/`128`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "maxCharacterSpeedForSolver": {
          "title": "C++ Info",
          "description": "- name: `maxCharacterSpeedForSolver`(ctype: `hkReal`)\n - offset: `104`(x86)/`108`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "maxSlope": {
          "title": "C++ Info",
          "description": "- name: `maxSlope`(ctype: `hkReal`)\n - offset: `116`(x86)/`120`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "penetrationRecoverySpeed": {
          "title": "C++ Info",
          "description": "- name: `penetrationRecoverySpeed`(ctype: `hkReal`)\n - offset: `120`(x86)/`124`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "position": {
          "title": "C++ Info",
          "description": "- name: `position`(ctype: `hkVector4`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "refreshManifoldInCheckSupport": {
          "title": "C++ Info",
          "description": "- name: `refreshManifoldInCheckSupport`(ctype: `hkBool`)\n - offset: `128`(x86)/`132`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "shapePhantom": {
          "title": "C++ Info",
          "description": "- name: `shapePhantom`(ctype: `struct hkpShapePhantom*`)\n - offset: ` 88`(x86)/` 88`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "staticFriction": {
          "title": "C++ Info",
          "description": "- name: `staticFriction`(ctype: `hkReal`)\n - offset: ` 52`(x86)/` 52`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "up": {
          "title": "C++ Info",
          "description": "- name: `up`(ctype: `hkVector4`)\n - offset: ` 64`(x86)/` 64`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "userPlanes": {
          "title": "C++ Info",
          "description": "- name: `userPlanes`(ctype: `hkUint32`)\n - offset: `100`(x86)/`104`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "velocity": {
          "title": "C++ Info",
          "description": "- name: `velocity`(ctype: `hkVector4`)\n - offset: ` 32`(x86)/` 32`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "position",
        "velocity",
        "dynamicFriction",
        "staticFriction",
        "keepContactTolerance",
        "up",
        "extraUpStaticFriction",
        "extraDownStaticFriction",
        "shapePhantom",
        "keepDistance",
        "contactAngleSensitivity",
        "userPlanes",
        "maxCharacterSpeedForSolver",
        "characterStrength",
        "characterMass",
        "maxSlope",
        "penetrationRecoverySpeed",
        "maxCastIterations",
        "refreshManifoldInCheckSupport"
      ]
    },
    "hkpCharacterRigidBodyCinfo": {
      "title": "C++ Info",
      "description": "- name: `hkpCharacterRigidBodyCinfo`\n - version: `0`\n - signature: `0x892f441`\n - size: `112`(x86)/`128`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "allowedPenetrationDepth": {
          "title": "C++ Info",
          "description": "- name: `allowedPenetrationDepth`(ctype: `hkReal`)\n - offset: ` 60`(x86)/` 76`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "collisionFilterInfo": {
          "title": "C++ Info",
          "description": "- name: `collisionFilterInfo`(ctype: `hkUint32`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "friction": {
          "title": "C++ Info",
          "description": "- name: `friction`(ctype: `hkReal`)\n - offset: ` 52`(x86)/` 68`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "hardSupportDistance": {
          "title": "C++ Info",
          "description": "- name: `hardSupportDistance`(ctype: `hkReal`)\n - offset: `100`(x86)/`116`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "mass": {
          "title": "C++ Info",
          "description": "- name: `mass`(ctype: `hkReal`)\n - offset: ` 48`(x86)/` 64`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "maxForce": {
          "title": "C++ Info",
          "description": "- name: `maxForce`(ctype: `hkReal`)\n - offset: ` 84`(x86)/`100`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "maxLinearVelocity": {
          "title": "C++ Info",
          "description": "- name: `maxLinearVelocity`(ctype: `hkReal`)\n - offset: ` 56`(x86)/` 72`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "maxSlope": {
          "title": "C++ Info",
          "description": "- name: `maxSlope`(ctype: `hkReal`)\n - offset: ` 80`(x86)/` 96`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "maxSpeedForSimplexSolver": {
          "title": "C++ Info",
          "description": "- name: `maxSpeedForSimplexSolver`(ctype: `hkReal`)\n - offset: ` 92`(x86)/`108`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "position": {
          "title": "C++ Info",
          "description": "- name: `position`(ctype: `hkVector4`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "rotation": {
          "title": "C++ Info",
          "description": "- name: `rotation`(ctype: `hkQuaternion`)\n - offset: ` 32`(x86)/` 48`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Quaternion"
        },
        "shape": {
          "title": "C++ Info",
          "description": "- name: `shape`(ctype: `struct hkpShape*`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "supportDistance": {
          "title": "C++ Info",
          "description": "- name: `supportDistance`(ctype: `hkReal`)\n - offset: ` 96`(x86)/`112`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "unweldingHeightOffsetFactor": {
          "title": "C++ Info",
          "description": "- name: `unweldingHeightOffsetFactor`(ctype: `hkReal`)\n - offset: ` 88`(x86)/`104`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "up": {
          "title": "C++ Info",
          "description": "- name: `up`(ctype: `hkVector4`)\n - offset: ` 64`(x86)/` 80`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "vdbColor": {
          "title": "C++ Info",
          "description": "- name: `vdbColor`(ctype: `hkInt32`)\n - offset: `104`(x86)/`120`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "collisionFilterInfo",
        "shape",
        "position",
        "rotation",
        "mass",
        "friction",
        "maxLinearVelocity",
        "allowedPenetrationDepth",
        "up",
        "maxSlope",
        "maxForce",
        "unweldingHeightOffsetFactor",
        "maxSpeedForSimplexSolver",
        "supportDistance",
        "hardSupportDistance",
        "vdbColor"
      ]
    },
    "hkpCogWheelConstraintAtom": {
      "title": "C++ Info",
      "description": "- name: `hkpCogWheelConstraintAtom`\n - version: `0`\n - signature: `0xf2b1f399`\n - size: ` 16`(x86)/` 16`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum AtomType`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "$ref": "#/$defs/AtomType"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "cogWheelRadiusA": {
          "title": "C++ Info",
          "description": "- name: `cogWheelRadiusA`(ctype: `hkReal`)\n - offset: `  4`(x86)/`  4`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "cogWheelRadiusB": {
          "title": "C++ Info",
          "description": "- name: `cogWheelRadiusB`(ctype: `hkReal`)\n - offset: `  8`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "isScrew": {
          "title": "C++ Info",
          "description": "- name: `isScrew`(ctype: `hkBool`)\n - offset: ` 12`(x86)/` 12`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "memOffsetToInitialAngleOffset": {
          "title": "C++ Info",
          "description": "- name: `memOffsetToInitialAngleOffset`(ctype: `hkInt8`)\n - offset: ` 13`(x86)/` 13`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "int8"
        },
        "memOffsetToPrevAngle": {
          "title": "C++ Info",
          "description": "- name: `memOffsetToPrevAngle`(ctype: `hkInt8`)\n - offset: ` 14`(x86)/` 14`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "int8"
        },
        "memOffsetToRevolutionCounter": {
          "title": "C++ Info",
          "description": "- name: `memOffsetToRevolutionCounter`(ctype: `hkInt8`)\n - offset: ` 15`(x86)/` 15`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "int8"
        }
      },
      "required": [
        "type",
        "cogWheelRadiusA",
        "cogWheelRadiusB",
        "isScrew",
        "memOffsetToInitialAngleOffset",
        "memOffsetToPrevAngle",
        "memOffsetToRevolutionCounter"
      ]
    },
    "hkpCogWheelConstraintData": {
      "title": "C++ Info",
      "description": "- name: `hkpCogWheelConstraintData`\n - version: `0`\n - signature: `0x7f0e53fc`\n - size: `176`(x86)/`192`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "atoms": {
          "title": "C++ Info",
          "description": "- name: `atoms`(ctype: `struct hkpCogWheelConstraintDataAtoms`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: `160`(x86)/`160`(x86_64)\n - flags: `ALIGN_16`",
          "$ref": "#/$defs/hkpCogWheelConstraintDataAtoms"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "userData",
        "atoms"
      ]
    },
    "hkpCogWheelConstraintDataAtoms": {
      "title": "C++ Info",
      "description": "- name: `hkpCogWheelConstraintDataAtoms`\n - version: `0`\n - signature: `0xf855ba44`\n - size: `160`(x86)/`160`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "cogWheels": {
          "title": "C++ Info",
          "description": "- name: `cogWheels`(ctype: `struct hkpCogWheelConstraintAtom`)\n - offset: `144`(x86)/`144`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/hkpCogWheelConstraintAtom"
        },
        "transforms": {
          "title": "C++ Info",
          "description": "- name: `transforms`(ctype: `struct hkpSetLocalTransformsConstraintAtom`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `144`(x86)/`144`(x86_64)",
          "$ref": "#/$defs/hkpSetLocalTransformsConstraintAtom"
        }
      },
      "required": [
        "transforms",
        "cogWheels"
      ]
    },
    "hkpCollidable": {
      "title": "C++ Info",
      "description": "- name: `hkpCollidable`\n - version: `0`\n - signature: `0x9a0e42a5`\n - size: ` 80`(x86)/`112`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "allowedPenetrationDepth": {
          "title": "C++ Info",
          "description": "- name: `allowedPenetrationDepth`(ctype: `hkReal`)\n - offset: ` 76`(x86)/`104`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "boundingVolumeData": {
          "title": "C++ Info",
          "description": "- name: `boundingVolumeData`(ctype: `struct hkpCollidableBoundingVolumeData`)\n - offset: ` 32`(x86)/` 48`(x86_64)\n - type_size: ` 44`(x86)/` 56`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "$ref": "#/$defs/hkpCollidableBoundingVolumeData"
        },
        "broadPhaseHandle": {
          "title": "C++ Info",
          "description": "- name: `broadPhaseHandle`(ctype: `struct hkpTypedBroadPhaseHandle`)\n - offset: ` 20`(x86)/` 36`(x86_64)\n - type_size: ` 12`(x86)/` 12`(x86_64)",
          "$ref": "#/$defs/hkpTypedBroadPhaseHandle"
        },
        "forceCollideOntoPpu": {
          "title": "C++ Info",
          "description": "- name: `forceCollideOntoPpu`(ctype: `hkUint8`)\n - offset: ` 17`(x86)/` 33`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        },
        "motion": {
          "title": "C++ Info",
          "description": "- name: `motion`(ctype: `void*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "ownerOffset": {
          "title": "C++ Info",
          "description": "- name: `ownerOffset`(ctype: `hkInt8`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "parent": {
          "title": "C++ Info",
          "description": "- name: `parent`(ctype: `struct hkpCdBody*`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "shape": {
          "title": "C++ Info",
          "description": "- name: `shape`(ctype: `struct hkpShape*`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "shapeKey": {
          "title": "C++ Info",
          "description": "- name: `shapeKey`(ctype: `hkUint32`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "shapeSizeOnSpu": {
          "title": "C++ Info",
          "description": "- name: `shapeSizeOnSpu`(ctype: `hkUint16`)\n - offset: ` 18`(x86)/` 34`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        }
      },
      "required": [
        "shape",
        "shapeKey",
        "motion",
        "parent",
        "ownerOffset",
        "forceCollideOntoPpu",
        "shapeSizeOnSpu",
        "broadPhaseHandle",
        "boundingVolumeData",
        "allowedPenetrationDepth"
      ]
    },
    "hkpCollidableBoundingVolumeData": {
      "title": "C++ Info",
      "description": "- name: `hkpCollidableBoundingVolumeData`\n - version: `0`\n - signature: `0xb5f0e6b1`\n - size: ` 44`(x86)/` 56`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "capacityChildShapeAabbs": {
          "title": "C++ Info",
          "description": "- name: `capacityChildShapeAabbs`(ctype: `hkUint16`)\n - offset: ` 34`(x86)/` 34`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "childShapeAabbs": {
          "title": "C++ Info",
          "description": "- name: `childShapeAabbs`(ctype: `void*`)\n - offset: ` 36`(x86)/` 40`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "childShapeKeys": {
          "title": "C++ Info",
          "description": "- name: `childShapeKeys`(ctype: `void*`)\n - offset: ` 40`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "expansionMax": {
          "title": "C++ Info",
          "description": "- name: `expansionMax`(ctype: `hkUint8[3]`)\n - offset: ` 28`(x86)/` 28`(x86_64)\n - type_size: `  3`(x86)/`  3`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint8",
            "minimum": 0
          },
          "maxItems": 3,
          "minItems": 3
        },
        "expansionMin": {
          "title": "C++ Info",
          "description": "- name: `expansionMin`(ctype: `hkUint8[3]`)\n - offset: ` 12`(x86)/` 12`(x86_64)\n - type_size: `  3`(x86)/`  3`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint8",
            "minimum": 0
          },
          "maxItems": 3,
          "minItems": 3
        },
        "expansionShift": {
          "title": "C++ Info",
          "description": "- name: `expansionShift`(ctype: `hkUint8`)\n - offset: ` 15`(x86)/` 15`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        },
        "max": {
          "title": "C++ Info",
          "description": "- name: `max`(ctype: `hkUint32[3]`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 12`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          },
          "maxItems": 3,
          "minItems": 3
        },
        "min": {
          "title": "C++ Info",
          "description": "- name: `min`(ctype: `hkUint32[3]`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: ` 12`(x86)/` 12`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          },
          "maxItems": 3,
          "minItems": 3
        },
        "numChildShapeAabbs": {
          "title": "C++ Info",
          "description": "- name: `numChildShapeAabbs`(ctype: `hkUint16`)\n - offset: ` 32`(x86)/` 32`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "padding": {
          "title": "C++ Info",
          "description": "- name: `padding`(ctype: `hkUint8`)\n - offset: ` 31`(x86)/` 31`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        }
      },
      "required": [
        "min",
        "expansionMin",
        "expansionShift",
        "max",
        "expansionMax",
        "padding",
        "numChildShapeAabbs",
        "capacityChildShapeAabbs",
        "childShapeAabbs",
        "childShapeKeys"
      ]
    },
    "hkpCollidableCollidableFilter": {
      "title": "C++ Info",
      "description": "- name: `hkpCollidableCollidableFilter`\n - version: `0`\n - signature: `0xe0708a00`\n - size: `  4`(x86)/`  8`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        }
      }
    },
    "hkpCollisionFilter": {
      "title": "C++ Info",
      "description": "- name: `hkpCollisionFilter`\n - version: `0`\n - signature: `0x60960336`\n - size: ` 48`(x86)/` 72`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum hkpFilterType`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "$ref": "#/$defs/hkpFilterType"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "postpad": {
          "title": "C++ Info",
          "description": "- name: `postpad`(ctype: `hkUint32[3]`)\n - offset: ` 36`(x86)/` 60`(x86_64)\n - type_size: ` 12`(x86)/` 12`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          },
          "maxItems": 3,
          "minItems": 3
        },
        "prepad": {
          "title": "C++ Info",
          "description": "- name: `prepad`(ctype: `hkUint32[2]`)\n - offset: ` 24`(x86)/` 48`(x86_64)\n - type_size: `  8`(x86)/`  8`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          },
          "maxItems": 2,
          "minItems": 2
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "prepad",
        "type",
        "postpad"
      ]
    },
    "hkpCollisionFilterList": {
      "title": "C++ Info",
      "description": "- name: `hkpCollisionFilterList`\n - version: `0`\n - signature: `0x2603bf04`\n - size: ` 60`(x86)/` 88`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum hkpFilterType`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "$ref": "#/$defs/hkpFilterType"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "collisionFilters": {
          "title": "C++ Info",
          "description": "- name: `collisionFilters`(ctype: `hkArray<hkpCollisionFilter*>`)\n - offset: ` 48`(x86)/` 72`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "postpad": {
          "title": "C++ Info",
          "description": "- name: `postpad`(ctype: `hkUint32[3]`)\n - offset: ` 36`(x86)/` 60`(x86_64)\n - type_size: ` 12`(x86)/` 12`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          },
          "maxItems": 3,
          "minItems": 3
        },
        "prepad": {
          "title": "C++ Info",
          "description": "- name: `prepad`(ctype: `hkUint32[2]`)\n - offset: ` 24`(x86)/` 48`(x86_64)\n - type_size: `  8`(x86)/`  8`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          },
          "maxItems": 2,
          "minItems": 2
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "prepad",
        "type",
        "postpad",
        "collisionFilters"
      ]
    },
    "hkpCompressedMeshShape": {
      "title": "C++ Info",
      "description": "- name: `hkpCompressedMeshShape`\n - version: `9`\n - signature: `0xa62d5e6e`\n - size: `224`(x86)/`304`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum unknown`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "bigTriangles": {
          "title": "C++ Info",
          "description": "- name: `bigTriangles`(ctype: `hkArray<struct hkpCompressedMeshShapeBigTriangle>`)\n - offset: `108`(x86)/`152`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkpCompressedMeshShapeBigTriangle"
          }
        },
        "bigVertices": {
          "title": "C++ Info",
          "description": "- name: `bigVertices`(ctype: `hkArray<hkVector4>`)\n - offset: ` 96`(x86)/`136`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/Vector4"
          }
        },
        "bitsPerIndex": {
          "title": "C++ Info",
          "description": "- name: `bitsPerIndex`(ctype: `hkInt32`)\n - offset: ` 24`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "bitsPerWIndex": {
          "title": "C++ Info",
          "description": "- name: `bitsPerWIndex`(ctype: `hkInt32`)\n - offset: ` 28`(x86)/` 52`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "bounds": {
          "title": "C++ Info",
          "description": "- name: `bounds`(ctype: `struct hkAabb`)\n - offset: `160`(x86)/`208`(x86_64)\n - type_size: ` 32`(x86)/` 32`(x86_64)",
          "$ref": "#/$defs/hkAabb"
        },
        "chunks": {
          "title": "C++ Info",
          "description": "- name: `chunks`(ctype: `hkArray<struct hkpCompressedMeshShapeChunk>`)\n - offset: `120`(x86)/`168`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkpCompressedMeshShapeChunk"
          }
        },
        "collectionType": {
          "title": "C++ Info",
          "description": "- name: `collectionType`(ctype: `enum CollectionType`)\n - offset: ` 21`(x86)/` 41`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/CollectionType"
        },
        "convexPieces": {
          "title": "C++ Info",
          "description": "- name: `convexPieces`(ctype: `hkArray<struct hkpCompressedMeshShapeConvexPiece>`)\n - offset: `132`(x86)/`184`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkpCompressedMeshShapeConvexPiece"
          }
        },
        "defaultCollisionFilterInfo": {
          "title": "C++ Info",
          "description": "- name: `defaultCollisionFilterInfo`(ctype: `hkUint32`)\n - offset: `192`(x86)/`240`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "disableWelding": {
          "title": "C++ Info",
          "description": "- name: `disableWelding`(ctype: `hkBool`)\n - offset: ` 20`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "error": {
          "title": "C++ Info",
          "description": "- name: `error`(ctype: `hkReal`)\n - offset: `144`(x86)/`200`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "indexMask": {
          "title": "C++ Info",
          "description": "- name: `indexMask`(ctype: `hkInt32`)\n - offset: ` 36`(x86)/` 60`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "materialStriding": {
          "title": "C++ Info",
          "description": "- name: `materialStriding`(ctype: `hkUint16`)\n - offset: `200`(x86)/`256`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "materialType": {
          "title": "C++ Info",
          "description": "- name: `materialType`(ctype: `enum MaterialType`)\n - offset: ` 45`(x86)/` 69`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/MaterialType"
        },
        "materials": {
          "title": "C++ Info",
          "description": "- name: `materials`(ctype: `hkArray<hkUint32>`)\n - offset: ` 48`(x86)/` 72`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          }
        },
        "materials16": {
          "title": "C++ Info",
          "description": "- name: `materials16`(ctype: `hkArray<hkUint16>`)\n - offset: ` 60`(x86)/` 88`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint16",
            "minimum": 0
          }
        },
        "materials8": {
          "title": "C++ Info",
          "description": "- name: `materials8`(ctype: `hkArray<hkUint8>`)\n - offset: ` 72`(x86)/`104`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint8",
            "minimum": 0
          }
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "meshMaterials": {
          "title": "C++ Info",
          "description": "- name: `meshMaterials`(ctype: `void*`)\n - offset: `196`(x86)/`248`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "namedMaterials": {
          "title": "C++ Info",
          "description": "- name: `namedMaterials`(ctype: `hkArray<struct hkpNamedMeshMaterial>`)\n - offset: `204`(x86)/`264`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkpNamedMeshMaterial"
          }
        },
        "numMaterials": {
          "title": "C++ Info",
          "description": "- name: `numMaterials`(ctype: `hkUint16`)\n - offset: `202`(x86)/`258`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "radius": {
          "title": "C++ Info",
          "description": "- name: `radius`(ctype: `hkReal`)\n - offset: ` 40`(x86)/` 64`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "transforms": {
          "title": "C++ Info",
          "description": "- name: `transforms`(ctype: `hkArray<hkQsTransform>`)\n - offset: ` 84`(x86)/`120`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/QsTransform"
          }
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "wIndexMask": {
          "title": "C++ Info",
          "description": "- name: `wIndexMask`(ctype: `hkInt32`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "weldingType": {
          "title": "C++ Info",
          "description": "- name: `weldingType`(ctype: `enum WeldingType`)\n - offset: ` 44`(x86)/` 68`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/WeldingType"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "userData",
        "type",
        "disableWelding",
        "collectionType",
        "bitsPerIndex",
        "bitsPerWIndex",
        "wIndexMask",
        "indexMask",
        "radius",
        "weldingType",
        "materialType",
        "materials",
        "materials16",
        "materials8",
        "transforms",
        "bigVertices",
        "bigTriangles",
        "chunks",
        "convexPieces",
        "error",
        "bounds",
        "defaultCollisionFilterInfo",
        "meshMaterials",
        "materialStriding",
        "numMaterials",
        "namedMaterials"
      ]
    },
    "hkpCompressedMeshShapeBigTriangle": {
      "title": "C++ Info",
      "description": "- name: `hkpCompressedMeshShapeBigTriangle`\n - version: `2`\n - signature: `0xcbfc95a4`\n - size: ` 16`(x86)/` 16`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "a": {
          "title": "C++ Info",
          "description": "- name: `a`(ctype: `hkUint16`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "b": {
          "title": "C++ Info",
          "description": "- name: `b`(ctype: `hkUint16`)\n - offset: `  2`(x86)/`  2`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "c": {
          "title": "C++ Info",
          "description": "- name: `c`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  4`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "material": {
          "title": "C++ Info",
          "description": "- name: `material`(ctype: `hkUint32`)\n - offset: `  8`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "transformIndex": {
          "title": "C++ Info",
          "description": "- name: `transformIndex`(ctype: `hkUint16`)\n - offset: ` 14`(x86)/` 14`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "weldingInfo": {
          "title": "C++ Info",
          "description": "- name: `weldingInfo`(ctype: `hkUint16`)\n - offset: ` 12`(x86)/` 12`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        }
      },
      "required": [
        "a",
        "b",
        "c",
        "material",
        "weldingInfo",
        "transformIndex"
      ]
    },
    "hkpCompressedMeshShapeChunk": {
      "title": "C++ Info",
      "description": "- name: `hkpCompressedMeshShapeChunk`\n - version: `4`\n - signature: `0x5d0d67bd`\n - size: ` 80`(x86)/` 96`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "indices": {
          "title": "C++ Info",
          "description": "- name: `indices`(ctype: `hkArray<hkUint16>`)\n - offset: ` 28`(x86)/` 32`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint16",
            "minimum": 0
          }
        },
        "materialInfo": {
          "title": "C++ Info",
          "description": "- name: `materialInfo`(ctype: `hkUint32`)\n - offset: ` 64`(x86)/` 80`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "offset": {
          "title": "C++ Info",
          "description": "- name: `offset`(ctype: `hkVector4`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "reference": {
          "title": "C++ Info",
          "description": "- name: `reference`(ctype: `hkUint16`)\n - offset: ` 68`(x86)/` 84`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "stripLengths": {
          "title": "C++ Info",
          "description": "- name: `stripLengths`(ctype: `hkArray<hkUint16>`)\n - offset: ` 40`(x86)/` 48`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint16",
            "minimum": 0
          }
        },
        "transformIndex": {
          "title": "C++ Info",
          "description": "- name: `transformIndex`(ctype: `hkUint16`)\n - offset: ` 70`(x86)/` 86`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "vertices": {
          "title": "C++ Info",
          "description": "- name: `vertices`(ctype: `hkArray<hkUint16>`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint16",
            "minimum": 0
          }
        },
        "weldingInfo": {
          "title": "C++ Info",
          "description": "- name: `weldingInfo`(ctype: `hkArray<hkUint16>`)\n - offset: ` 52`(x86)/` 64`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint16",
            "minimum": 0
          }
        }
      },
      "required": [
        "offset",
        "vertices",
        "indices",
        "stripLengths",
        "weldingInfo",
        "materialInfo",
        "reference",
        "transformIndex"
      ]
    },
    "hkpCompressedMeshShapeConvexPiece": {
      "title": "C++ Info",
      "description": "- name: `hkpCompressedMeshShapeConvexPiece`\n - version: `3`\n - signature: `0x385bb842`\n - size: ` 64`(x86)/` 80`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "faceOffsets": {
          "title": "C++ Info",
          "description": "- name: `faceOffsets`(ctype: `hkArray<hkUint16>`)\n - offset: ` 40`(x86)/` 48`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint16",
            "minimum": 0
          }
        },
        "faceVertices": {
          "title": "C++ Info",
          "description": "- name: `faceVertices`(ctype: `hkArray<hkUint8>`)\n - offset: ` 28`(x86)/` 32`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint8",
            "minimum": 0
          }
        },
        "offset": {
          "title": "C++ Info",
          "description": "- name: `offset`(ctype: `hkVector4`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "reference": {
          "title": "C++ Info",
          "description": "- name: `reference`(ctype: `hkUint16`)\n - offset: ` 52`(x86)/` 64`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "transformIndex": {
          "title": "C++ Info",
          "description": "- name: `transformIndex`(ctype: `hkUint16`)\n - offset: ` 54`(x86)/` 66`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "vertices": {
          "title": "C++ Info",
          "description": "- name: `vertices`(ctype: `hkArray<hkUint16>`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint16",
            "minimum": 0
          }
        }
      },
      "required": [
        "offset",
        "vertices",
        "faceVertices",
        "faceOffsets",
        "reference",
        "transformIndex"
      ]
    },
    "hkpCompressedSampledHeightFieldShape": {
      "title": "C++ Info",
      "description": "- name: `hkpCompressedSampledHeightFieldShape`\n - version: `0`\n - signature: `0x97b6e143`\n - size: `128`(x86)/`144`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum unknown`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "extents": {
          "title": "C++ Info",
          "description": "- name: `extents`(ctype: `hkVector4`)\n - offset: ` 80`(x86)/` 96`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "floatToIntOffsetFloorCorrected": {
          "title": "C++ Info",
          "description": "- name: `floatToIntOffsetFloorCorrected`(ctype: `hkVector4`)\n - offset: ` 64`(x86)/` 80`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "floatToIntScale": {
          "title": "C++ Info",
          "description": "- name: `floatToIntScale`(ctype: `hkVector4`)\n - offset: ` 48`(x86)/` 64`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "heightCenter": {
          "title": "C++ Info",
          "description": "- name: `heightCenter`(ctype: `hkReal`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "heightfieldType": {
          "title": "C++ Info",
          "description": "- name: `heightfieldType`(ctype: `enum HeightFieldType`)\n - offset: ` 29`(x86)/` 45`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/HeightFieldType"
        },
        "intToFloatScale": {
          "title": "C++ Info",
          "description": "- name: `intToFloatScale`(ctype: `hkVector4`)\n - offset: ` 32`(x86)/` 48`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "offset": {
          "title": "C++ Info",
          "description": "- name: `offset`(ctype: `hkReal`)\n - offset: `112`(x86)/`132`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "scale": {
          "title": "C++ Info",
          "description": "- name: `scale`(ctype: `hkReal`)\n - offset: `116`(x86)/`136`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "storage": {
          "title": "C++ Info",
          "description": "- name: `storage`(ctype: `hkArray<hkUint16>`)\n - offset: ` 96`(x86)/`112`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint16",
            "minimum": 0
          }
        },
        "triangleFlip": {
          "title": "C++ Info",
          "description": "- name: `triangleFlip`(ctype: `hkBool`)\n - offset: `108`(x86)/`128`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "useProjectionBasedHeight": {
          "title": "C++ Info",
          "description": "- name: `useProjectionBasedHeight`(ctype: `hkBool`)\n - offset: ` 28`(x86)/` 44`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "xRes": {
          "title": "C++ Info",
          "description": "- name: `xRes`(ctype: `hkInt32`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "zRes": {
          "title": "C++ Info",
          "description": "- name: `zRes`(ctype: `hkInt32`)\n - offset: ` 20`(x86)/` 36`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "userData",
        "type",
        "xRes",
        "zRes",
        "heightCenter",
        "useProjectionBasedHeight",
        "heightfieldType",
        "intToFloatScale",
        "floatToIntScale",
        "floatToIntOffsetFloorCorrected",
        "extents",
        "storage",
        "triangleFlip",
        "offset",
        "scale"
      ]
    },
    "hkpConeLimitConstraintAtom": {
      "title": "C++ Info",
      "description": "- name: `hkpConeLimitConstraintAtom`\n - version: `0`\n - signature: `0xf19443c8`\n - size: ` 20`(x86)/` 20`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum AtomType`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "$ref": "#/$defs/AtomType"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "angleMeasurementMode": {
          "title": "C++ Info",
          "description": "- name: `angleMeasurementMode`(ctype: `enum MeasurementMode`)\n - offset: `  5`(x86)/`  5`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/MeasurementMode"
        },
        "angularLimitsTauFactor": {
          "title": "C++ Info",
          "description": "- name: `angularLimitsTauFactor`(ctype: `hkReal`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "isEnabled": {
          "title": "C++ Info",
          "description": "- name: `isEnabled`(ctype: `hkUint8`)\n - offset: `  2`(x86)/`  2`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        },
        "maxAngle": {
          "title": "C++ Info",
          "description": "- name: `maxAngle`(ctype: `hkReal`)\n - offset: ` 12`(x86)/` 12`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "memOffsetToAngleOffset": {
          "title": "C++ Info",
          "description": "- name: `memOffsetToAngleOffset`(ctype: `hkUint8`)\n - offset: `  6`(x86)/`  6`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        },
        "minAngle": {
          "title": "C++ Info",
          "description": "- name: `minAngle`(ctype: `hkReal`)\n - offset: `  8`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "refAxisInB": {
          "title": "C++ Info",
          "description": "- name: `refAxisInB`(ctype: `hkUint8`)\n - offset: `  4`(x86)/`  4`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        },
        "twistAxisInA": {
          "title": "C++ Info",
          "description": "- name: `twistAxisInA`(ctype: `hkUint8`)\n - offset: `  3`(x86)/`  3`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        }
      },
      "required": [
        "type",
        "isEnabled",
        "twistAxisInA",
        "refAxisInB",
        "angleMeasurementMode",
        "memOffsetToAngleOffset",
        "minAngle",
        "maxAngle",
        "angularLimitsTauFactor"
      ]
    },
    "hkpConstrainedSystemFilter": {
      "title": "C++ Info",
      "description": "- name: `hkpConstrainedSystemFilter`\n - version: `0`\n - signature: `0x20a447fe`\n - size: ` 56`(x86)/` 88`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum hkpFilterType`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "$ref": "#/$defs/hkpFilterType"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "otherFilter": {
          "title": "C++ Info",
          "description": "- name: `otherFilter`(ctype: `struct hkpCollisionFilter*`)\n - offset: ` 52`(x86)/` 80`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "postpad": {
          "title": "C++ Info",
          "description": "- name: `postpad`(ctype: `hkUint32[3]`)\n - offset: ` 36`(x86)/` 60`(x86_64)\n - type_size: ` 12`(x86)/` 12`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          },
          "maxItems": 3,
          "minItems": 3
        },
        "prepad": {
          "title": "C++ Info",
          "description": "- name: `prepad`(ctype: `hkUint32[2]`)\n - offset: ` 24`(x86)/` 48`(x86_64)\n - type_size: `  8`(x86)/`  8`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          },
          "maxItems": 2,
          "minItems": 2
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "prepad",
        "type",
        "postpad",
        "otherFilter"
      ]
    },
    "hkpConstraintAtom": {
      "title": "C++ Info",
      "description": "- name: `hkpConstraintAtom`\n - version: `0`\n - signature: `0x59d67ef6`\n - size: `  2`(x86)/`  2`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum AtomType`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "$ref": "#/$defs/AtomType"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "required": [
        "type"
      ]
    },
    "hkpConstraintChainData": {
      "title": "C++ Info",
      "description": "- name: `hkpConstraintChainData`\n - version: `0`\n - signature: `0x5facc7ff`\n - size: ` 12`(x86)/` 24`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "userData"
      ]
    },
    "hkpConstraintChainInstance": {
      "title": "C++ Info",
      "description": "- name: `hkpConstraintChainInstance`\n - version: `0`\n - signature: `0x7a490753`\n - size: ` 72`(x86)/`136`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "action": {
          "title": "C++ Info",
          "description": "- name: `action`(ctype: `struct hkpConstraintChainInstanceAction*`)\n - offset: ` 68`(x86)/`128`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "chainedEntities": {
          "title": "C++ Info",
          "description": "- name: `chainedEntities`(ctype: `hkArray<hkpEntity*>`)\n - offset: ` 56`(x86)/`112`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "constraintModifiers": {
          "title": "C++ Info",
          "description": "- name: `constraintModifiers`(ctype: `struct hkpModifierConstraintAtom*`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "data": {
          "title": "C++ Info",
          "description": "- name: `data`(ctype: `struct hkpConstraintData*`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "destructionRemapInfo": {
          "title": "C++ Info",
          "description": "- name: `destructionRemapInfo`(ctype: `enum OnDestructionRemapInfo`)\n - offset: ` 30`(x86)/` 58`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/OnDestructionRemapInfo"
        },
        "entities": {
          "title": "C++ Info",
          "description": "- name: `entities`(ctype: `struct hkpEntity*`)\n - offset: ` 20`(x86)/` 40`(x86_64)\n - type_size: `  8`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          },
          "maxItems": 2,
          "minItems": 2
        },
        "internal": {
          "title": "C++ Info",
          "description": "- name: `internal`(ctype: `void*`)\n - offset: ` 48`(x86)/` 96`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "listeners": {
          "title": "C++ Info",
          "description": "- name: `listeners`(ctype: `struct hkpConstraintInstanceSmallArraySerializeOverrideType`)\n - offset: ` 32`(x86)/` 64`(x86_64)\n - type_size: `  8`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "$ref": "#/$defs/hkpConstraintInstanceSmallArraySerializeOverrideType"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 40`(x86)/` 80`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "owner": {
          "title": "C++ Info",
          "description": "- name: `owner`(ctype: `void*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "priority": {
          "title": "C++ Info",
          "description": "- name: `priority`(ctype: `enum ConstraintPriority`)\n - offset: ` 28`(x86)/` 56`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/ConstraintPriority"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "uid": {
          "title": "C++ Info",
          "description": "- name: `uid`(ctype: `hkUint32`)\n - offset: ` 52`(x86)/`104`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 44`(x86)/` 88`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "wantRuntime": {
          "title": "C++ Info",
          "description": "- name: `wantRuntime`(ctype: `hkBool`)\n - offset: ` 29`(x86)/` 57`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "owner",
        "data",
        "constraintModifiers",
        "entities",
        "priority",
        "wantRuntime",
        "destructionRemapInfo",
        "listeners",
        "userData",
        "internal",
        "uid",
        "chainedEntities",
        "action"
      ]
    },
    "hkpConstraintChainInstanceAction": {
      "title": "C++ Info",
      "description": "- name: `hkpConstraintChainInstanceAction`\n - version: `0`\n - signature: `0xc3971189`\n - size: ` 28`(x86)/` 56`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "constraintInstance": {
          "title": "C++ Info",
          "description": "- name: `constraintInstance`(ctype: `struct hkpConstraintChainInstance*`)\n - offset: ` 24`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `NOT_OWNED`",
          "type": "string"
        },
        "island": {
          "title": "C++ Info",
          "description": "- name: `island`(ctype: `void*`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 20`(x86)/` 40`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "world": {
          "title": "C++ Info",
          "description": "- name: `world`(ctype: `void*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "world",
        "island",
        "userData",
        "constraintInstance"
      ]
    },
    "hkpConstraintCollisionFilter": {
      "title": "C++ Info",
      "description": "- name: `hkpConstraintCollisionFilter`\n - version: `0`\n - signature: `0xc3b577b1`\n - size: ` 68`(x86)/`104`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum hkpFilterType`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "$ref": "#/$defs/hkpFilterType"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "childFilter": {
          "title": "C++ Info",
          "description": "- name: `childFilter`(ctype: `struct hkpCollisionFilter*`)\n - offset: ` 60`(x86)/` 88`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "disabledPairs": {
          "title": "C++ Info",
          "description": "- name: `disabledPairs`(ctype: `struct hkpPairCollisionFilterMapPairFilterKeyOverrideType`)\n - offset: ` 48`(x86)/` 72`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "$ref": "#/$defs/hkpPairCollisionFilterMapPairFilterKeyOverrideType"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "postpad": {
          "title": "C++ Info",
          "description": "- name: `postpad`(ctype: `hkUint32[3]`)\n - offset: ` 36`(x86)/` 60`(x86_64)\n - type_size: ` 12`(x86)/` 12`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          },
          "maxItems": 3,
          "minItems": 3
        },
        "prepad": {
          "title": "C++ Info",
          "description": "- name: `prepad`(ctype: `hkUint32[2]`)\n - offset: ` 24`(x86)/` 48`(x86_64)\n - type_size: `  8`(x86)/`  8`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          },
          "maxItems": 2,
          "minItems": 2
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "prepad",
        "type",
        "postpad",
        "disabledPairs",
        "childFilter"
      ]
    },
    "hkpConstraintData": {
      "title": "C++ Info",
      "description": "- name: `hkpConstraintData`\n - version: `0`\n - signature: `0x80559a4e`\n - size: ` 12`(x86)/` 24`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "userData"
      ]
    },
    "hkpConstraintInstance": {
      "title": "C++ Info",
      "description": "- name: `hkpConstraintInstance`\n - version: `1`\n - signature: `0x34eba5f`\n - size: ` 56`(x86)/`112`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "constraintModifiers": {
          "title": "C++ Info",
          "description": "- name: `constraintModifiers`(ctype: `struct hkpModifierConstraintAtom*`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "data": {
          "title": "C++ Info",
          "description": "- name: `data`(ctype: `struct hkpConstraintData*`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "destructionRemapInfo": {
          "title": "C++ Info",
          "description": "- name: `destructionRemapInfo`(ctype: `enum OnDestructionRemapInfo`)\n - offset: ` 30`(x86)/` 58`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/OnDestructionRemapInfo"
        },
        "entities": {
          "title": "C++ Info",
          "description": "- name: `entities`(ctype: `struct hkpEntity*`)\n - offset: ` 20`(x86)/` 40`(x86_64)\n - type_size: `  8`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          },
          "maxItems": 2,
          "minItems": 2
        },
        "internal": {
          "title": "C++ Info",
          "description": "- name: `internal`(ctype: `void*`)\n - offset: ` 48`(x86)/` 96`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "listeners": {
          "title": "C++ Info",
          "description": "- name: `listeners`(ctype: `struct hkpConstraintInstanceSmallArraySerializeOverrideType`)\n - offset: ` 32`(x86)/` 64`(x86_64)\n - type_size: `  8`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "$ref": "#/$defs/hkpConstraintInstanceSmallArraySerializeOverrideType"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 40`(x86)/` 80`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "owner": {
          "title": "C++ Info",
          "description": "- name: `owner`(ctype: `void*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "priority": {
          "title": "C++ Info",
          "description": "- name: `priority`(ctype: `enum ConstraintPriority`)\n - offset: ` 28`(x86)/` 56`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/ConstraintPriority"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "uid": {
          "title": "C++ Info",
          "description": "- name: `uid`(ctype: `hkUint32`)\n - offset: ` 52`(x86)/`104`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 44`(x86)/` 88`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "wantRuntime": {
          "title": "C++ Info",
          "description": "- name: `wantRuntime`(ctype: `hkBool`)\n - offset: ` 29`(x86)/` 57`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "owner",
        "data",
        "constraintModifiers",
        "entities",
        "priority",
        "wantRuntime",
        "destructionRemapInfo",
        "listeners",
        "userData",
        "internal",
        "uid"
      ]
    },
    "hkpConstraintInstanceSmallArraySerializeOverrideType": {
      "title": "C++ Info",
      "description": "- name: `hkpConstraintInstanceSmallArraySerializeOverrideType`\n - version: `1`\n - signature: `0xee3c2aec`\n - size: `  8`(x86)/` 16`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "capacityAndFlags": {
          "title": "C++ Info",
          "description": "- name: `capacityAndFlags`(ctype: `hkUint16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "data": {
          "title": "C++ Info",
          "description": "- name: `data`(ctype: `void*`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "size": {
          "title": "C++ Info",
          "description": "- name: `size`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        }
      },
      "required": [
        "data",
        "size",
        "capacityAndFlags"
      ]
    },
    "hkpConstraintMotor": {
      "title": "C++ Info",
      "description": "- name: `hkpConstraintMotor`\n - version: `0`\n - signature: `0x6a44c317`\n - size: ` 12`(x86)/` 24`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum MotorType`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/MotorType"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "type"
      ]
    },
    "hkpConvexListFilter": {
      "title": "C++ Info",
      "description": "- name: `hkpConvexListFilter`\n - version: `0`\n - signature: `0x81d074a4`\n - size: `  8`(x86)/` 16`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount"
      ]
    },
    "hkpConvexListShape": {
      "title": "C++ Info",
      "description": "- name: `hkpConvexListShape`\n - version: `0`\n - signature: `0x450b26e8`\n - size: ` 80`(x86)/`128`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum unknown`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "aabbCenter": {
          "title": "C++ Info",
          "description": "- name: `aabbCenter`(ctype: `hkVector4`)\n - offset: ` 48`(x86)/` 80`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "aabbHalfExtents": {
          "title": "C++ Info",
          "description": "- name: `aabbHalfExtents`(ctype: `hkVector4`)\n - offset: ` 32`(x86)/` 64`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "childShapes": {
          "title": "C++ Info",
          "description": "- name: `childShapes`(ctype: `hkArray<hkpConvexShape*>`)\n - offset: ` 68`(x86)/`104`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "minDistanceToUseConvexHullForGetClosestPoints": {
          "title": "C++ Info",
          "description": "- name: `minDistanceToUseConvexHullForGetClosestPoints`(ctype: `hkReal`)\n - offset: ` 24`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "radius": {
          "title": "C++ Info",
          "description": "- name: `radius`(ctype: `hkReal`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "useCachedAabb": {
          "title": "C++ Info",
          "description": "- name: `useCachedAabb`(ctype: `hkBool`)\n - offset: ` 64`(x86)/` 96`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "userData",
        "type",
        "radius",
        "minDistanceToUseConvexHullForGetClosestPoints",
        "aabbHalfExtents",
        "aabbCenter",
        "useCachedAabb",
        "childShapes"
      ]
    },
    "hkpConvexPieceMeshShape": {
      "title": "C++ Info",
      "description": "- name: `hkpConvexPieceMeshShape`\n - version: `0`\n - signature: `0x38fd3d97`\n - size: ` 36`(x86)/` 72`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum unknown`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "collectionType": {
          "title": "C++ Info",
          "description": "- name: `collectionType`(ctype: `enum CollectionType`)\n - offset: ` 21`(x86)/` 41`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/CollectionType"
        },
        "convexPieceStream": {
          "title": "C++ Info",
          "description": "- name: `convexPieceStream`(ctype: `struct hkpConvexPieceStreamData*`)\n - offset: ` 24`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "disableWelding": {
          "title": "C++ Info",
          "description": "- name: `disableWelding`(ctype: `hkBool`)\n - offset: ` 20`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "displayMesh": {
          "title": "C++ Info",
          "description": "- name: `displayMesh`(ctype: `struct hkpShapeCollection*`)\n - offset: ` 28`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "radius": {
          "title": "C++ Info",
          "description": "- name: `radius`(ctype: `hkReal`)\n - offset: ` 32`(x86)/` 64`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "userData",
        "type",
        "disableWelding",
        "collectionType",
        "convexPieceStream",
        "displayMesh",
        "radius"
      ]
    },
    "hkpConvexPieceStreamData": {
      "title": "C++ Info",
      "description": "- name: `hkpConvexPieceStreamData`\n - version: `0`\n - signature: `0xa5bd1d6e`\n - size: ` 44`(x86)/` 64`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "convexPieceOffsets": {
          "title": "C++ Info",
          "description": "- name: `convexPieceOffsets`(ctype: `hkArray<hkUint32>`)\n - offset: ` 20`(x86)/` 32`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          }
        },
        "convexPieceSingleTriangles": {
          "title": "C++ Info",
          "description": "- name: `convexPieceSingleTriangles`(ctype: `hkArray<hkUint32>`)\n - offset: ` 32`(x86)/` 48`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          }
        },
        "convexPieceStream": {
          "title": "C++ Info",
          "description": "- name: `convexPieceStream`(ctype: `hkArray<hkUint32>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          }
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "convexPieceStream",
        "convexPieceOffsets",
        "convexPieceSingleTriangles"
      ]
    },
    "hkpConvexShape": {
      "title": "C++ Info",
      "description": "- name: `hkpConvexShape`\n - version: `0`\n - signature: `0xf8f74f85`\n - size: ` 20`(x86)/` 40`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum unknown`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "radius": {
          "title": "C++ Info",
          "description": "- name: `radius`(ctype: `hkReal`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "userData",
        "type",
        "radius"
      ]
    },
    "hkpConvexTransformShape": {
      "title": "C++ Info",
      "description": "- name: `hkpConvexTransformShape`\n - version: `0`\n - signature: `0xae3e5017`\n - size: ` 96`(x86)/`128`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum unknown`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "childShape": {
          "title": "C++ Info",
          "description": "- name: `childShape`(ctype: `struct hkpSingleShapeContainer`)\n - offset: ` 20`(x86)/` 40`(x86_64)\n - type_size: `  8`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/hkpSingleShapeContainer"
        },
        "childShapeSize": {
          "title": "C++ Info",
          "description": "- name: `childShapeSize`(ctype: `hkInt32`)\n - offset: ` 28`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int32"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "radius": {
          "title": "C++ Info",
          "description": "- name: `radius`(ctype: `hkReal`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "transform": {
          "title": "C++ Info",
          "description": "- name: `transform`(ctype: `hkTransform`)\n - offset: ` 32`(x86)/` 64`(x86_64)\n - type_size: ` 64`(x86)/` 64`(x86_64)",
          "$ref": "#/$defs/Transform"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "userData",
        "type",
        "radius",
        "childShape",
        "childShapeSize",
        "transform"
      ]
    },
    "hkpConvexTransformShapeBase": {
      "title": "C++ Info",
      "description": "- name: `hkpConvexTransformShapeBase`\n - version: `0`\n - signature: `0xfbd72f9`\n - size: ` 32`(x86)/` 64`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum unknown`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "childShape": {
          "title": "C++ Info",
          "description": "- name: `childShape`(ctype: `struct hkpSingleShapeContainer`)\n - offset: ` 20`(x86)/` 40`(x86_64)\n - type_size: `  8`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/hkpSingleShapeContainer"
        },
        "childShapeSize": {
          "title": "C++ Info",
          "description": "- name: `childShapeSize`(ctype: `hkInt32`)\n - offset: ` 28`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int32"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "radius": {
          "title": "C++ Info",
          "description": "- name: `radius`(ctype: `hkReal`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "userData",
        "type",
        "radius",
        "childShape",
        "childShapeSize"
      ]
    },
    "hkpConvexTranslateShape": {
      "title": "C++ Info",
      "description": "- name: `hkpConvexTranslateShape`\n - version: `0`\n - signature: `0x5ba0a5f7`\n - size: ` 48`(x86)/` 80`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum unknown`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "childShape": {
          "title": "C++ Info",
          "description": "- name: `childShape`(ctype: `struct hkpSingleShapeContainer`)\n - offset: ` 20`(x86)/` 40`(x86_64)\n - type_size: `  8`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/hkpSingleShapeContainer"
        },
        "childShapeSize": {
          "title": "C++ Info",
          "description": "- name: `childShapeSize`(ctype: `hkInt32`)\n - offset: ` 28`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int32"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "radius": {
          "title": "C++ Info",
          "description": "- name: `radius`(ctype: `hkReal`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "translation": {
          "title": "C++ Info",
          "description": "- name: `translation`(ctype: `hkVector4`)\n - offset: ` 32`(x86)/` 64`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "userData",
        "type",
        "radius",
        "childShape",
        "childShapeSize",
        "translation"
      ]
    },
    "hkpConvexVerticesConnectivity": {
      "title": "C++ Info",
      "description": "- name: `hkpConvexVerticesConnectivity`\n - version: `0`\n - signature: `0x63d38e9c`\n - size: ` 32`(x86)/` 48`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "numVerticesPerFace": {
          "title": "C++ Info",
          "description": "- name: `numVerticesPerFace`(ctype: `hkArray<hkUint8>`)\n - offset: ` 20`(x86)/` 32`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint8",
            "minimum": 0
          }
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "vertexIndices": {
          "title": "C++ Info",
          "description": "- name: `vertexIndices`(ctype: `hkArray<hkUint16>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint16",
            "minimum": 0
          }
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "vertexIndices",
        "numVerticesPerFace"
      ]
    },
    "hkpConvexVerticesShape": {
      "title": "C++ Info",
      "description": "- name: `hkpConvexVerticesShape`\n - version: `3`\n - signature: `0x28726ad8`\n - size: `112`(x86)/`144`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum unknown`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "aabbCenter": {
          "title": "C++ Info",
          "description": "- name: `aabbCenter`(ctype: `hkVector4`)\n - offset: ` 48`(x86)/` 64`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "aabbHalfExtents": {
          "title": "C++ Info",
          "description": "- name: `aabbHalfExtents`(ctype: `hkVector4`)\n - offset: ` 32`(x86)/` 48`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "connectivity": {
          "title": "C++ Info",
          "description": "- name: `connectivity`(ctype: `struct hkpConvexVerticesConnectivity*`)\n - offset: `100`(x86)/`136`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "externalObject": {
          "title": "C++ Info",
          "description": "- name: `externalObject`(ctype: `void*`)\n - offset: ` 80`(x86)/`104`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "getFaceNormals": {
          "title": "C++ Info",
          "description": "- name: `getFaceNormals`(ctype: `void*`)\n - offset: ` 84`(x86)/`112`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "numVertices": {
          "title": "C++ Info",
          "description": "- name: `numVertices`(ctype: `hkInt32`)\n - offset: ` 76`(x86)/` 96`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "planeEquations": {
          "title": "C++ Info",
          "description": "- name: `planeEquations`(ctype: `hkArray<hkVector4>`)\n - offset: ` 88`(x86)/`120`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/Vector4"
          }
        },
        "radius": {
          "title": "C++ Info",
          "description": "- name: `radius`(ctype: `hkReal`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "rotatedVertices": {
          "title": "C++ Info",
          "description": "- name: `rotatedVertices`(ctype: `hkArray<struct hkpConvexVerticesShapeFourVectors>`)\n - offset: ` 64`(x86)/` 80`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkpConvexVerticesShapeFourVectors"
          }
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "userData",
        "type",
        "radius",
        "aabbHalfExtents",
        "aabbCenter",
        "rotatedVertices",
        "numVertices",
        "externalObject",
        "getFaceNormals",
        "planeEquations",
        "connectivity"
      ]
    },
    "hkpConvexVerticesShapeFourVectors": {
      "title": "C++ Info",
      "description": "- name: `hkpConvexVerticesShapeFourVectors`\n - version: `0`\n - signature: `0x3d80c5bf`\n - size: ` 48`(x86)/` 48`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "x": {
          "title": "C++ Info",
          "description": "- name: `x`(ctype: `hkVector4`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "y": {
          "title": "C++ Info",
          "description": "- name: `y`(ctype: `hkVector4`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "z": {
          "title": "C++ Info",
          "description": "- name: `z`(ctype: `hkVector4`)\n - offset: ` 32`(x86)/` 32`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        }
      },
      "required": [
        "x",
        "y",
        "z"
      ]
    },
    "hkpCylinderShape": {
      "title": "C++ Info",
      "description": "- name: `hkpCylinderShape`\n - version: `0`\n - signature: `0x3e463c3a`\n - size: ` 96`(x86)/`112`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum unknown`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "cylBaseRadiusFactorForHeightFieldCollisions": {
          "title": "C++ Info",
          "description": "- name: `cylBaseRadiusFactorForHeightFieldCollisions`(ctype: `hkReal`)\n - offset: ` 24`(x86)/` 44`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "cylRadius": {
          "title": "C++ Info",
          "description": "- name: `cylRadius`(ctype: `hkReal`)\n - offset: ` 20`(x86)/` 40`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "perpendicular1": {
          "title": "C++ Info",
          "description": "- name: `perpendicular1`(ctype: `hkVector4`)\n - offset: ` 64`(x86)/` 80`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "perpendicular2": {
          "title": "C++ Info",
          "description": "- name: `perpendicular2`(ctype: `hkVector4`)\n - offset: ` 80`(x86)/` 96`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "radius": {
          "title": "C++ Info",
          "description": "- name: `radius`(ctype: `hkReal`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "vertexA": {
          "title": "C++ Info",
          "description": "- name: `vertexA`(ctype: `hkVector4`)\n - offset: ` 32`(x86)/` 48`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "vertexB": {
          "title": "C++ Info",
          "description": "- name: `vertexB`(ctype: `hkVector4`)\n - offset: ` 48`(x86)/` 64`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "userData",
        "type",
        "radius",
        "cylRadius",
        "cylBaseRadiusFactorForHeightFieldCollisions",
        "vertexA",
        "vertexB",
        "perpendicular1",
        "perpendicular2"
      ]
    },
    "hkpDashpotAction": {
      "title": "C++ Info",
      "description": "- name: `hkpDashpotAction`\n - version: `0`\n - signature: `0x50746c6e`\n - size: ` 96`(x86)/`128`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "damping": {
          "title": "C++ Info",
          "description": "- name: `damping`(ctype: `hkReal`)\n - offset: ` 68`(x86)/`100`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "entityA": {
          "title": "C++ Info",
          "description": "- name: `entityA`(ctype: `struct hkpEntity*`)\n - offset: ` 24`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "entityB": {
          "title": "C++ Info",
          "description": "- name: `entityB`(ctype: `struct hkpEntity*`)\n - offset: ` 28`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "impulse": {
          "title": "C++ Info",
          "description": "- name: `impulse`(ctype: `hkVector4`)\n - offset: ` 80`(x86)/`112`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "island": {
          "title": "C++ Info",
          "description": "- name: `island`(ctype: `void*`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 20`(x86)/` 40`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "point": {
          "title": "C++ Info",
          "description": "- name: `point`(ctype: `hkVector4[2]`)\n - offset: ` 32`(x86)/` 64`(x86_64)\n - type_size: ` 32`(x86)/` 32`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/Vector4"
          },
          "maxItems": 2,
          "minItems": 2
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "strength": {
          "title": "C++ Info",
          "description": "- name: `strength`(ctype: `hkReal`)\n - offset: ` 64`(x86)/` 96`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "world": {
          "title": "C++ Info",
          "description": "- name: `world`(ctype: `void*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "world",
        "island",
        "userData",
        "entityA",
        "entityB",
        "point",
        "strength",
        "damping",
        "impulse"
      ]
    },
    "hkpDefaultConvexListFilter": {
      "title": "C++ Info",
      "description": "- name: `hkpDefaultConvexListFilter`\n - version: `0`\n - signature: `0xb69c1c02`\n - size: `  8`(x86)/` 16`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount"
      ]
    },
    "hkpDefaultWorldMemoryWatchDog": {
      "title": "C++ Info",
      "description": "- name: `hkpDefaultWorldMemoryWatchDog`\n - version: `1`\n - signature: `0x77d6b19f`\n - size: ` 12`(x86)/` 24`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "freeHeapMemoryRequested": {
          "title": "C++ Info",
          "description": "- name: `freeHeapMemoryRequested`(ctype: `hkInt32`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "freeHeapMemoryRequested"
      ]
    },
    "hkpDisableEntityCollisionFilter": {
      "title": "C++ Info",
      "description": "- name: `hkpDisableEntityCollisionFilter`\n - version: `0`\n - signature: `0xfac3351c`\n - size: ` 64`(x86)/` 96`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum hkpFilterType`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "$ref": "#/$defs/hkpFilterType"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "disabledEntities": {
          "title": "C++ Info",
          "description": "- name: `disabledEntities`(ctype: `hkArray<hkpEntity*>`)\n - offset: ` 52`(x86)/` 80`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "postpad": {
          "title": "C++ Info",
          "description": "- name: `postpad`(ctype: `hkUint32[3]`)\n - offset: ` 36`(x86)/` 60`(x86_64)\n - type_size: ` 12`(x86)/` 12`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          },
          "maxItems": 3,
          "minItems": 3
        },
        "prepad": {
          "title": "C++ Info",
          "description": "- name: `prepad`(ctype: `hkUint32[2]`)\n - offset: ` 24`(x86)/` 48`(x86_64)\n - type_size: `  8`(x86)/`  8`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          },
          "maxItems": 2,
          "minItems": 2
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "prepad",
        "type",
        "postpad",
        "disabledEntities"
      ]
    },
    "hkpDisplayBindingData": {
      "title": "C++ Info",
      "description": "- name: `hkpDisplayBindingData`\n - version: `1`\n - signature: `0xdc46c906`\n - size: ` 32`(x86)/` 48`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "physicsSystemBindings": {
          "title": "C++ Info",
          "description": "- name: `physicsSystemBindings`(ctype: `hkArray<hkpDisplayBindingDataPhysicsSystem*>`)\n - offset: ` 20`(x86)/` 32`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "rigidBodyBindings": {
          "title": "C++ Info",
          "description": "- name: `rigidBodyBindings`(ctype: `hkArray<hkpDisplayBindingDataRigidBody*>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "rigidBodyBindings",
        "physicsSystemBindings"
      ]
    },
    "hkpDisplayBindingDataPhysicsSystem": {
      "title": "C++ Info",
      "description": "- name: `hkpDisplayBindingDataPhysicsSystem`\n - version: `1`\n - signature: `0xc8ae86a7`\n - size: ` 24`(x86)/` 40`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "bindings": {
          "title": "C++ Info",
          "description": "- name: `bindings`(ctype: `hkArray<hkpDisplayBindingDataRigidBody*>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "system": {
          "title": "C++ Info",
          "description": "- name: `system`(ctype: `struct hkpPhysicsSystem*`)\n - offset: ` 20`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "bindings",
        "system"
      ]
    },
    "hkpDisplayBindingDataRigidBody": {
      "title": "C++ Info",
      "description": "- name: `hkpDisplayBindingDataRigidBody`\n - version: `2`\n - signature: `0xfe16e2a3`\n - size: ` 80`(x86)/` 96`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "displayObjectPtr": {
          "title": "C++ Info",
          "description": "- name: `displayObjectPtr`(ctype: `struct hkReferencedObject*`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "rigidBody": {
          "title": "C++ Info",
          "description": "- name: `rigidBody`(ctype: `struct hkpRigidBody*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "rigidBodyFromDisplayObjectTransform": {
          "title": "C++ Info",
          "description": "- name: `rigidBodyFromDisplayObjectTransform`(ctype: `hkMatrix4`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: ` 64`(x86)/` 64`(x86_64)",
          "$ref": "#/$defs/Matrix4"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "rigidBody",
        "displayObjectPtr",
        "rigidBodyFromDisplayObjectTransform"
      ]
    },
    "hkpEntity": {
      "title": "C++ Info",
      "description": "- name: `hkpEntity`\n - version: `3`\n - signature: `0xa03c774b`\n - size: `544`(x86)/`720`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "properties": {
          "title": "C++ Info",
          "description": "- name: `properties`(ctype: `hkArray<struct hkpProperty>`)\n - offset: `124`(x86)/`184`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkpProperty"
          }
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "actions": {
          "title": "C++ Info",
          "description": "- name: `actions`(ctype: `struct hkpEntitySmallArraySerializeOverrideType`)\n - offset: `520`(x86)/`672`(x86_64)\n - type_size: `  8`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "$ref": "#/$defs/hkpEntitySmallArraySerializeOverrideType"
        },
        "autoRemoveLevel": {
          "title": "C++ Info",
          "description": "- name: `autoRemoveLevel`(ctype: `hkInt8`)\n - offset: `208`(x86)/`312`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "int8"
        },
        "breakableBody": {
          "title": "C++ Info",
          "description": "- name: `breakableBody`(ctype: `void*`)\n - offset: `160`(x86)/`240`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "collidable": {
          "title": "C++ Info",
          "description": "- name: `collidable`(ctype: `struct hkpLinkedCollidable`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: ` 92`(x86)/`128`(x86_64)",
          "$ref": "#/$defs/hkpLinkedCollidable"
        },
        "constraintRuntime": {
          "title": "C++ Info",
          "description": "- name: `constraintRuntime`(ctype: `hkArray<hkUint8>`)\n - offset: `192`(x86)/`288`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint8",
            "minimum": 0
          }
        },
        "constraintsMaster": {
          "title": "C++ Info",
          "description": "- name: `constraintsMaster`(ctype: `struct hkpEntitySmallArraySerializeOverrideType`)\n - offset: `172`(x86)/`256`(x86_64)\n - type_size: `  8`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "$ref": "#/$defs/hkpEntitySmallArraySerializeOverrideType"
        },
        "constraintsSlave": {
          "title": "C++ Info",
          "description": "- name: `constraintsSlave`(ctype: `hkArray<hkpConstraintInstance*>`)\n - offset: `180`(x86)/`272`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `NOT_OWNED|SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "contactListeners": {
          "title": "C++ Info",
          "description": "- name: `contactListeners`(ctype: `struct hkpEntitySmallArraySerializeOverrideType`)\n - offset: `512`(x86)/`656`(x86_64)\n - type_size: `  8`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "$ref": "#/$defs/hkpEntitySmallArraySerializeOverrideType"
        },
        "contactPointCallbackDelay": {
          "title": "C++ Info",
          "description": "- name: `contactPointCallbackDelay`(ctype: `hkUint16`)\n - offset: `170`(x86)/`254`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "damageMultiplier": {
          "title": "C++ Info",
          "description": "- name: `damageMultiplier`(ctype: `hkReal`)\n - offset: `156`(x86)/`232`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "extendedListeners": {
          "title": "C++ Info",
          "description": "- name: `extendedListeners`(ctype: `struct hkpEntityExtendedListeners*`)\n - offset: `532`(x86)/`696`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "limitContactImpulseUtilAndFlag": {
          "title": "C++ Info",
          "description": "- name: `limitContactImpulseUtilAndFlag`(ctype: `void*`)\n - offset: `152`(x86)/`224`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "localFrame": {
          "title": "C++ Info",
          "description": "- name: `localFrame`(ctype: `struct hkLocalFrame*`)\n - offset: `528`(x86)/`688`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "material": {
          "title": "C++ Info",
          "description": "- name: `material`(ctype: `struct hkpMaterial`)\n - offset: `140`(x86)/`208`(x86_64)\n - type_size: ` 12`(x86)/` 12`(x86_64)",
          "$ref": "#/$defs/hkpMaterial"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "motion": {
          "title": "C++ Info",
          "description": "- name: `motion`(ctype: `struct hkpMaxSizeMotion`)\n - offset: `224`(x86)/`336`(x86_64)\n - type_size: `288`(x86)/`320`(x86_64)",
          "$ref": "#/$defs/hkpMaxSizeMotion"
        },
        "multiThreadCheck": {
          "title": "C++ Info",
          "description": "- name: `multiThreadCheck`(ctype: `struct hkMultiThreadCheck`)\n - offset: `108`(x86)/`160`(x86_64)\n - type_size: ` 12`(x86)/` 12`(x86_64)",
          "$ref": "#/$defs/hkMultiThreadCheck"
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: `120`(x86)/`176`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "npData": {
          "title": "C++ Info",
          "description": "- name: `npData`(ctype: `hkUint32`)\n - offset: `536`(x86)/`704`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "numShapeKeysInContactPointProperties": {
          "title": "C++ Info",
          "description": "- name: `numShapeKeysInContactPointProperties`(ctype: `hkUint8`)\n - offset: `209`(x86)/`313`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "responseModifierFlags": {
          "title": "C++ Info",
          "description": "- name: `responseModifierFlags`(ctype: `hkUint8`)\n - offset: `210`(x86)/`314`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        },
        "simulationIsland": {
          "title": "C++ Info",
          "description": "- name: `simulationIsland`(ctype: `void*`)\n - offset: `204`(x86)/`304`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "solverData": {
          "title": "C++ Info",
          "description": "- name: `solverData`(ctype: `hkUint32`)\n - offset: `164`(x86)/`248`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "spuCollisionCallback": {
          "title": "C++ Info",
          "description": "- name: `spuCollisionCallback`(ctype: `struct hkpEntitySpuCollisionCallback`)\n - offset: `216`(x86)/`320`(x86_64)\n - type_size: `  8`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/hkpEntitySpuCollisionCallback"
        },
        "storageIndex": {
          "title": "C++ Info",
          "description": "- name: `storageIndex`(ctype: `hkUint16`)\n - offset: `168`(x86)/`252`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "treeData": {
          "title": "C++ Info",
          "description": "- name: `treeData`(ctype: `void*`)\n - offset: `136`(x86)/`200`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "uid": {
          "title": "C++ Info",
          "description": "- name: `uid`(ctype: `hkUint32`)\n - offset: `212`(x86)/`316`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "world": {
          "title": "C++ Info",
          "description": "- name: `world`(ctype: `void*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "world",
        "userData",
        "collidable",
        "multiThreadCheck",
        "properties",
        "treeData",
        "material",
        "limitContactImpulseUtilAndFlag",
        "damageMultiplier",
        "breakableBody",
        "solverData",
        "storageIndex",
        "contactPointCallbackDelay",
        "constraintsMaster",
        "constraintsSlave",
        "constraintRuntime",
        "simulationIsland",
        "autoRemoveLevel",
        "numShapeKeysInContactPointProperties",
        "responseModifierFlags",
        "uid",
        "spuCollisionCallback",
        "motion",
        "contactListeners",
        "actions",
        "localFrame",
        "extendedListeners",
        "npData"
      ]
    },
    "hkpEntityExtendedListeners": {
      "title": "C++ Info",
      "description": "- name: `hkpEntityExtendedListeners`\n - version: `0`\n - signature: `0xf557023c`\n - size: ` 16`(x86)/` 32`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "activationListeners": {
          "title": "C++ Info",
          "description": "- name: `activationListeners`(ctype: `struct hkpEntitySmallArraySerializeOverrideType`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  8`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "$ref": "#/$defs/hkpEntitySmallArraySerializeOverrideType"
        },
        "entityListeners": {
          "title": "C++ Info",
          "description": "- name: `entityListeners`(ctype: `struct hkpEntitySmallArraySerializeOverrideType`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  8`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "$ref": "#/$defs/hkpEntitySmallArraySerializeOverrideType"
        }
      },
      "required": [
        "activationListeners",
        "entityListeners"
      ]
    },
    "hkpEntitySmallArraySerializeOverrideType": {
      "title": "C++ Info",
      "description": "- name: `hkpEntitySmallArraySerializeOverrideType`\n - version: `1`\n - signature: `0xee3c2aec`\n - size: `  8`(x86)/` 16`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "capacityAndFlags": {
          "title": "C++ Info",
          "description": "- name: `capacityAndFlags`(ctype: `hkUint16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "data": {
          "title": "C++ Info",
          "description": "- name: `data`(ctype: `void*`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "size": {
          "title": "C++ Info",
          "description": "- name: `size`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        }
      },
      "required": [
        "data",
        "size",
        "capacityAndFlags"
      ]
    },
    "hkpEntitySpuCollisionCallback": {
      "title": "C++ Info",
      "description": "- name: `hkpEntitySpuCollisionCallback`\n - version: `0`\n - signature: `0x81147f05`\n - size: `  8`(x86)/` 16`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "capacity": {
          "title": "C++ Info",
          "description": "- name: `capacity`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "eventFilter": {
          "title": "C++ Info",
          "description": "- name: `eventFilter`(ctype: `hkUint8`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        },
        "userFilter": {
          "title": "C++ Info",
          "description": "- name: `userFilter`(ctype: `hkUint8`)\n - offset: `  7`(x86)/` 11`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        },
        "util": {
          "title": "C++ Info",
          "description": "- name: `util`(ctype: `void*`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        }
      },
      "required": [
        "util",
        "capacity",
        "eventFilter",
        "userFilter"
      ]
    },
    "hkpExtendedMeshShape": {
      "title": "C++ Info",
      "description": "- name: `hkpExtendedMeshShape`\n - version: `3`\n - signature: `0x177114a2`\n - size: `240`(x86)/`336`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum unknown`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "aabbCenter": {
          "title": "C++ Info",
          "description": "- name: `aabbCenter`(ctype: `hkVector4`)\n - offset: `160`(x86)/`224`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "aabbHalfExtents": {
          "title": "C++ Info",
          "description": "- name: `aabbHalfExtents`(ctype: `hkVector4`)\n - offset: `144`(x86)/`208`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "cachedNumChildShapes": {
          "title": "C++ Info",
          "description": "- name: `cachedNumChildShapes`(ctype: `hkInt32`)\n - offset: `228`(x86)/`312`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "collectionType": {
          "title": "C++ Info",
          "description": "- name: `collectionType`(ctype: `enum CollectionType`)\n - offset: ` 21`(x86)/` 41`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/CollectionType"
        },
        "defaultCollisionFilterInfo": {
          "title": "C++ Info",
          "description": "- name: `defaultCollisionFilterInfo`(ctype: `hkUint32`)\n - offset: `224`(x86)/`308`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "disableWelding": {
          "title": "C++ Info",
          "description": "- name: `disableWelding`(ctype: `hkBool`)\n - offset: ` 20`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "embeddedTrianglesSubpart": {
          "title": "C++ Info",
          "description": "- name: `embeddedTrianglesSubpart`(ctype: `struct hkpExtendedMeshShapeTrianglesSubpart`)\n - offset: ` 32`(x86)/` 48`(x86_64)\n - type_size: `112`(x86)/`160`(x86_64)",
          "$ref": "#/$defs/hkpExtendedMeshShapeTrianglesSubpart"
        },
        "materialClass": {
          "title": "C++ Info",
          "description": "- name: `materialClass`(ctype: `void*`)\n - offset: `176`(x86)/`240`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "numBitsForSubpartIndex": {
          "title": "C++ Info",
          "description": "- name: `numBitsForSubpartIndex`(ctype: `hkInt32`)\n - offset: `180`(x86)/`248`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "padding": {
          "title": "C++ Info",
          "description": "- name: `padding`(ctype: `hkInt32`)\n - offset: `236`(x86)/`320`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int32"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "shapesSubparts": {
          "title": "C++ Info",
          "description": "- name: `shapesSubparts`(ctype: `hkArray<struct hkpExtendedMeshShapeShapesSubpart>`)\n - offset: `196`(x86)/`272`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkpExtendedMeshShapeShapesSubpart"
          }
        },
        "triangleRadius": {
          "title": "C++ Info",
          "description": "- name: `triangleRadius`(ctype: `hkReal`)\n - offset: `232`(x86)/`316`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "trianglesSubparts": {
          "title": "C++ Info",
          "description": "- name: `trianglesSubparts`(ctype: `hkArray<struct hkpExtendedMeshShapeTrianglesSubpart>`)\n - offset: `184`(x86)/`256`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkpExtendedMeshShapeTrianglesSubpart"
          }
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "weldingInfo": {
          "title": "C++ Info",
          "description": "- name: `weldingInfo`(ctype: `hkArray<hkUint16>`)\n - offset: `208`(x86)/`288`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint16",
            "minimum": 0
          }
        },
        "weldingType": {
          "title": "C++ Info",
          "description": "- name: `weldingType`(ctype: `enum WeldingType`)\n - offset: `220`(x86)/`304`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/WeldingType"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "userData",
        "type",
        "disableWelding",
        "collectionType",
        "embeddedTrianglesSubpart",
        "aabbHalfExtents",
        "aabbCenter",
        "materialClass",
        "numBitsForSubpartIndex",
        "trianglesSubparts",
        "shapesSubparts",
        "weldingInfo",
        "weldingType",
        "defaultCollisionFilterInfo",
        "cachedNumChildShapes",
        "triangleRadius",
        "padding"
      ]
    },
    "hkpExtendedMeshShapeShapesSubpart": {
      "title": "C++ Info",
      "description": "- name: `hkpExtendedMeshShapeShapesSubpart`\n - version: `1`\n - signature: `0xf204b155`\n - size: ` 64`(x86)/` 96`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum SubpartType`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/SubpartType"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "childShapes": {
          "title": "C++ Info",
          "description": "- name: `childShapes`(ctype: `hkArray<hkpConvexShape*>`)\n - offset: ` 20`(x86)/` 40`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "materialBase": {
          "title": "C++ Info",
          "description": "- name: `materialBase`(ctype: `void*`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "materialIndexBase": {
          "title": "C++ Info",
          "description": "- name: `materialIndexBase`(ctype: `void*`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "materialIndexStriding": {
          "title": "C++ Info",
          "description": "- name: `materialIndexStriding`(ctype: `hkUint16`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "materialIndexStridingType": {
          "title": "C++ Info",
          "description": "- name: `materialIndexStridingType`(ctype: `enum MaterialIndexStridingType`)\n - offset: `  1`(x86)/`  1`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/MaterialIndexStridingType"
        },
        "materialStriding": {
          "title": "C++ Info",
          "description": "- name: `materialStriding`(ctype: `hkInt16`)\n - offset: `  2`(x86)/`  2`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "numMaterials": {
          "title": "C++ Info",
          "description": "- name: `numMaterials`(ctype: `hkUint16`)\n - offset: ` 10`(x86)/` 18`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "rotation": {
          "title": "C++ Info",
          "description": "- name: `rotation`(ctype: `hkQuaternion`)\n - offset: ` 32`(x86)/` 64`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Quaternion"
        },
        "translation": {
          "title": "C++ Info",
          "description": "- name: `translation`(ctype: `hkVector4`)\n - offset: ` 48`(x86)/` 80`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        }
      },
      "required": [
        "type",
        "materialIndexStridingType",
        "materialStriding",
        "materialIndexBase",
        "materialIndexStriding",
        "numMaterials",
        "materialBase",
        "userData",
        "childShapes",
        "rotation",
        "translation"
      ]
    },
    "hkpExtendedMeshShapeSubpart": {
      "title": "C++ Info",
      "description": "- name: `hkpExtendedMeshShapeSubpart`\n - version: `2`\n - signature: `0xf4608207`\n - size: ` 20`(x86)/` 40`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum SubpartType`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/SubpartType"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "materialBase": {
          "title": "C++ Info",
          "description": "- name: `materialBase`(ctype: `void*`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "materialIndexBase": {
          "title": "C++ Info",
          "description": "- name: `materialIndexBase`(ctype: `void*`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "materialIndexStriding": {
          "title": "C++ Info",
          "description": "- name: `materialIndexStriding`(ctype: `hkUint16`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "materialIndexStridingType": {
          "title": "C++ Info",
          "description": "- name: `materialIndexStridingType`(ctype: `enum MaterialIndexStridingType`)\n - offset: `  1`(x86)/`  1`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/MaterialIndexStridingType"
        },
        "materialStriding": {
          "title": "C++ Info",
          "description": "- name: `materialStriding`(ctype: `hkInt16`)\n - offset: `  2`(x86)/`  2`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "numMaterials": {
          "title": "C++ Info",
          "description": "- name: `numMaterials`(ctype: `hkUint16`)\n - offset: ` 10`(x86)/` 18`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        }
      },
      "required": [
        "type",
        "materialIndexStridingType",
        "materialStriding",
        "materialIndexBase",
        "materialIndexStriding",
        "numMaterials",
        "materialBase",
        "userData"
      ]
    },
    "hkpExtendedMeshShapeTrianglesSubpart": {
      "title": "C++ Info",
      "description": "- name: `hkpExtendedMeshShapeTrianglesSubpart`\n - version: `3`\n - signature: `0x44c32df6`\n - size: `112`(x86)/`160`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum SubpartType`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/SubpartType"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "extrusion": {
          "title": "C++ Info",
          "description": "- name: `extrusion`(ctype: `hkVector4`)\n - offset: ` 48`(x86)/` 96`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "flipAlternateTriangles": {
          "title": "C++ Info",
          "description": "- name: `flipAlternateTriangles`(ctype: `hkInt8`)\n - offset: ` 47`(x86)/` 83`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "int8"
        },
        "indexBase": {
          "title": "C++ Info",
          "description": "- name: `indexBase`(ctype: `void*`)\n - offset: ` 32`(x86)/` 64`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "indexStriding": {
          "title": "C++ Info",
          "description": "- name: `indexStriding`(ctype: `hkUint16`)\n - offset: ` 44`(x86)/` 80`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "materialBase": {
          "title": "C++ Info",
          "description": "- name: `materialBase`(ctype: `void*`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "materialIndexBase": {
          "title": "C++ Info",
          "description": "- name: `materialIndexBase`(ctype: `void*`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "materialIndexStriding": {
          "title": "C++ Info",
          "description": "- name: `materialIndexStriding`(ctype: `hkUint16`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "materialIndexStridingType": {
          "title": "C++ Info",
          "description": "- name: `materialIndexStridingType`(ctype: `enum MaterialIndexStridingType`)\n - offset: `  1`(x86)/`  1`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/MaterialIndexStridingType"
        },
        "materialStriding": {
          "title": "C++ Info",
          "description": "- name: `materialStriding`(ctype: `hkInt16`)\n - offset: `  2`(x86)/`  2`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "numMaterials": {
          "title": "C++ Info",
          "description": "- name: `numMaterials`(ctype: `hkUint16`)\n - offset: ` 10`(x86)/` 18`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "numTriangleShapes": {
          "title": "C++ Info",
          "description": "- name: `numTriangleShapes`(ctype: `hkInt32`)\n - offset: ` 20`(x86)/` 40`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "numVertices": {
          "title": "C++ Info",
          "description": "- name: `numVertices`(ctype: `hkInt32`)\n - offset: ` 28`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "stridingType": {
          "title": "C++ Info",
          "description": "- name: `stridingType`(ctype: `enum IndexStridingType`)\n - offset: ` 46`(x86)/` 82`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/IndexStridingType"
        },
        "transform": {
          "title": "C++ Info",
          "description": "- name: `transform`(ctype: `hkQsTransform`)\n - offset: ` 64`(x86)/`112`(x86_64)\n - type_size: ` 48`(x86)/` 48`(x86_64)",
          "$ref": "#/$defs/QsTransform"
        },
        "triangleOffset": {
          "title": "C++ Info",
          "description": "- name: `triangleOffset`(ctype: `hkInt32`)\n - offset: ` 40`(x86)/` 76`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "vertexBase": {
          "title": "C++ Info",
          "description": "- name: `vertexBase`(ctype: `void*`)\n - offset: ` 24`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "vertexStriding": {
          "title": "C++ Info",
          "description": "- name: `vertexStriding`(ctype: `hkUint16`)\n - offset: ` 36`(x86)/` 72`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        }
      },
      "required": [
        "type",
        "materialIndexStridingType",
        "materialStriding",
        "materialIndexBase",
        "materialIndexStriding",
        "numMaterials",
        "materialBase",
        "userData",
        "numTriangleShapes",
        "vertexBase",
        "numVertices",
        "indexBase",
        "vertexStriding",
        "triangleOffset",
        "indexStriding",
        "stridingType",
        "flipAlternateTriangles",
        "extrusion",
        "transform"
      ]
    },
    "hkpFastMeshShape": {
      "title": "C++ Info",
      "description": "- name: `hkpFastMeshShape`\n - version: `0`\n - signature: `0x3d3da311`\n - size: ` 96`(x86)/`128`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum unknown`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "collectionType": {
          "title": "C++ Info",
          "description": "- name: `collectionType`(ctype: `enum CollectionType`)\n - offset: ` 21`(x86)/` 41`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/CollectionType"
        },
        "disableWelding": {
          "title": "C++ Info",
          "description": "- name: `disableWelding`(ctype: `hkBool`)\n - offset: ` 20`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "numBitsForSubpartIndex": {
          "title": "C++ Info",
          "description": "- name: `numBitsForSubpartIndex`(ctype: `hkInt32`)\n - offset: ` 48`(x86)/` 64`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "pad": {
          "title": "C++ Info",
          "description": "- name: `pad`(ctype: `hkInt32[3]`)\n - offset: ` 84`(x86)/`112`(x86_64)\n - type_size: ` 12`(x86)/` 12`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "maxItems": 3,
          "minItems": 3
        },
        "radius": {
          "title": "C++ Info",
          "description": "- name: `radius`(ctype: `hkReal`)\n - offset: ` 80`(x86)/`108`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "scaling": {
          "title": "C++ Info",
          "description": "- name: `scaling`(ctype: `hkVector4`)\n - offset: ` 32`(x86)/` 48`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "subparts": {
          "title": "C++ Info",
          "description": "- name: `subparts`(ctype: `hkArray<struct hkpMeshShapeSubpart>`)\n - offset: ` 52`(x86)/` 72`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkpMeshShapeSubpart"
          }
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "weldingInfo": {
          "title": "C++ Info",
          "description": "- name: `weldingInfo`(ctype: `hkArray<hkUint16>`)\n - offset: ` 64`(x86)/` 88`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint16",
            "minimum": 0
          }
        },
        "weldingType": {
          "title": "C++ Info",
          "description": "- name: `weldingType`(ctype: `enum WeldingType`)\n - offset: ` 76`(x86)/`104`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/WeldingType"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "userData",
        "type",
        "disableWelding",
        "collectionType",
        "scaling",
        "numBitsForSubpartIndex",
        "subparts",
        "weldingInfo",
        "weldingType",
        "radius",
        "pad"
      ]
    },
    "hkpFilterType": {
      "title": "C++ Info",
      "description": "- name: `hkpFilterType`(ctype: `hkEnum<hkpFilterType, hkUint32>`)",
      "type": "string",
      "enum": [
        "HK_FILTER_UNKNOWN",
        "HK_FILTER_NULL",
        "HK_FILTER_GROUP",
        "HK_FILTER_LIST",
        "HK_FILTER_CUSTOM",
        "HK_FILTER_PAIR",
        "HK_FILTER_CONSTRAINT"
      ]
    },
    "hkpFirstPersonGun": {
      "title": "C++ Info",
      "description": "- name: `hkpFirstPersonGun`\n - version: `0`\n - signature: `0x852ab70b`\n - size: ` 32`(x86)/` 56`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum unknown`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "keyboardKey": {
          "title": "C++ Info",
          "description": "- name: `keyboardKey`(ctype: `enum KeyboardKey`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/KeyboardKey"
        },
        "listeners": {
          "title": "C++ Info",
          "description": "- name: `listeners`(ctype: `hkArray<void*>`)\n - offset: ` 20`(x86)/` 40`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "type",
        "keyboardKey",
        "listeners"
      ]
    },
    "hkpFixedRigidMotion": {
      "title": "C++ Info",
      "description": "- name: `hkpFixedRigidMotion`\n - version: `0`\n - signature: `0x64abf85c`\n - size: `288`(x86)/`320`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum MotionType`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/MotionType"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "angularVelocity": {
          "title": "C++ Info",
          "description": "- name: `angularVelocity`(ctype: `hkVector4`)\n - offset: `224`(x86)/`240`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "deactivationIntegrateCounter": {
          "title": "C++ Info",
          "description": "- name: `deactivationIntegrateCounter`(ctype: `hkUint8`)\n - offset: `  9`(x86)/` 17`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        },
        "deactivationNumInactiveFrames": {
          "title": "C++ Info",
          "description": "- name: `deactivationNumInactiveFrames`(ctype: `hkUint16[2]`)\n - offset: ` 10`(x86)/` 18`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint16",
            "minimum": 0
          },
          "maxItems": 2,
          "minItems": 2
        },
        "deactivationRefOrientation": {
          "title": "C++ Info",
          "description": "- name: `deactivationRefOrientation`(ctype: `hkUint32[2]`)\n - offset: `272`(x86)/`288`(x86_64)\n - type_size: `  8`(x86)/`  8`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          },
          "maxItems": 2,
          "minItems": 2
        },
        "deactivationRefPosition": {
          "title": "C++ Info",
          "description": "- name: `deactivationRefPosition`(ctype: `hkVector4[2]`)\n - offset: `240`(x86)/`256`(x86_64)\n - type_size: ` 32`(x86)/` 32`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/Vector4"
          },
          "maxItems": 2,
          "minItems": 2
        },
        "gravityFactor": {
          "title": "C++ Info",
          "description": "- name: `gravityFactor`(ctype: `hkHalf`)\n - offset: `286`(x86)/`306`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "inertiaAndMassInv": {
          "title": "C++ Info",
          "description": "- name: `inertiaAndMassInv`(ctype: `hkVector4`)\n - offset: `192`(x86)/`208`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "linearVelocity": {
          "title": "C++ Info",
          "description": "- name: `linearVelocity`(ctype: `hkVector4`)\n - offset: `208`(x86)/`224`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "motionState": {
          "title": "C++ Info",
          "description": "- name: `motionState`(ctype: `struct hkMotionState`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: `176`(x86)/`176`(x86_64)",
          "$ref": "#/$defs/hkMotionState"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "savedMotion": {
          "title": "C++ Info",
          "description": "- name: `savedMotion`(ctype: `struct hkpMaxSizeMotion*`)\n - offset: `280`(x86)/`296`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "savedQualityTypeIndex": {
          "title": "C++ Info",
          "description": "- name: `savedQualityTypeIndex`(ctype: `hkUint16`)\n - offset: `284`(x86)/`304`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "type",
        "deactivationIntegrateCounter",
        "deactivationNumInactiveFrames",
        "motionState",
        "inertiaAndMassInv",
        "linearVelocity",
        "angularVelocity",
        "deactivationRefPosition",
        "deactivationRefOrientation",
        "savedMotion",
        "savedQualityTypeIndex",
        "gravityFactor"
      ]
    },
    "hkpGenericConstraintData": {
      "title": "C++ Info",
      "description": "- name: `hkpGenericConstraintData`\n - version: `0`\n - signature: `0xfa824640`\n - size: ` 88`(x86)/`128`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "atoms": {
          "title": "C++ Info",
          "description": "- name: `atoms`(ctype: `struct hkpBridgeAtoms`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 24`(x86_64)",
          "$ref": "#/$defs/hkpBridgeAtoms"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "scheme": {
          "title": "C++ Info",
          "description": "- name: `scheme`(ctype: `struct hkpGenericConstraintDataScheme`)\n - offset: ` 24`(x86)/` 48`(x86_64)\n - type_size: ` 64`(x86)/` 80`(x86_64)",
          "$ref": "#/$defs/hkpGenericConstraintDataScheme"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "userData",
        "atoms",
        "scheme"
      ]
    },
    "hkpGenericConstraintDataScheme": {
      "title": "C++ Info",
      "description": "- name: `hkpGenericConstraintDataScheme`\n - version: `0`\n - signature: `0x11fd6f6c`\n - size: ` 64`(x86)/` 80`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "commands": {
          "title": "C++ Info",
          "description": "- name: `commands`(ctype: `hkArray<hkInt32>`)\n - offset: ` 28`(x86)/` 32`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "data": {
          "title": "C++ Info",
          "description": "- name: `data`(ctype: `hkArray<hkVector4>`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/Vector4"
          }
        },
        "info": {
          "title": "C++ Info",
          "description": "- name: `info`(ctype: `struct hkpGenericConstraintDataSchemeConstraintInfo`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "$ref": "#/$defs/hkpGenericConstraintDataSchemeConstraintInfo"
        },
        "modifiers": {
          "title": "C++ Info",
          "description": "- name: `modifiers`(ctype: `hkArray<void*>`)\n - offset: ` 40`(x86)/` 48`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "motors": {
          "title": "C++ Info",
          "description": "- name: `motors`(ctype: `hkArray<hkpConstraintMotor*>`)\n - offset: ` 52`(x86)/` 64`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "info",
        "data",
        "commands",
        "modifiers",
        "motors"
      ]
    },
    "hkpGenericConstraintDataSchemeConstraintInfo": {
      "title": "C++ Info",
      "description": "- name: `hkpGenericConstraintDataSchemeConstraintInfo`\n - version: `0`\n - signature: `0xd6421f19`\n - size: ` 16`(x86)/` 16`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "maxSizeOfSchema": {
          "title": "C++ Info",
          "description": "- name: `maxSizeOfSchema`(ctype: `hkInt32`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "numSolverElemTemps": {
          "title": "C++ Info",
          "description": "- name: `numSolverElemTemps`(ctype: `hkInt32`)\n - offset: ` 12`(x86)/` 12`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "numSolverResults": {
          "title": "C++ Info",
          "description": "- name: `numSolverResults`(ctype: `hkInt32`)\n - offset: `  8`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "sizeOfSchemas": {
          "title": "C++ Info",
          "description": "- name: `sizeOfSchemas`(ctype: `hkInt32`)\n - offset: `  4`(x86)/`  4`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "maxSizeOfSchema",
        "sizeOfSchemas",
        "numSolverResults",
        "numSolverElemTemps"
      ]
    },
    "hkpGravityGun": {
      "title": "C++ Info",
      "description": "- name: `hkpGravityGun`\n - version: `0`\n - signature: `0x5e2754cd`\n - size: ` 96`(x86)/`128`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum unknown`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "capturedObjectPosition": {
          "title": "C++ Info",
          "description": "- name: `capturedObjectPosition`(ctype: `hkVector4`)\n - offset: ` 64`(x86)/` 96`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "capturedObjectsOffset": {
          "title": "C++ Info",
          "description": "- name: `capturedObjectsOffset`(ctype: `hkVector4`)\n - offset: ` 80`(x86)/`112`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "grabbedBodies": {
          "title": "C++ Info",
          "description": "- name: `grabbedBodies`(ctype: `hkArray<void*>`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "impulseAppliedWhenObjectNotPicked": {
          "title": "C++ Info",
          "description": "- name: `impulseAppliedWhenObjectNotPicked`(ctype: `hkReal`)\n - offset: ` 56`(x86)/` 84`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "keyboardKey": {
          "title": "C++ Info",
          "description": "- name: `keyboardKey`(ctype: `enum KeyboardKey`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/KeyboardKey"
        },
        "listeners": {
          "title": "C++ Info",
          "description": "- name: `listeners`(ctype: `hkArray<void*>`)\n - offset: ` 20`(x86)/` 40`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "maxDistOfObjectPicked": {
          "title": "C++ Info",
          "description": "- name: `maxDistOfObjectPicked`(ctype: `hkReal`)\n - offset: ` 52`(x86)/` 80`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "maxMassOfObjectPicked": {
          "title": "C++ Info",
          "description": "- name: `maxMassOfObjectPicked`(ctype: `hkReal`)\n - offset: ` 48`(x86)/` 76`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "maxNumObjectsPicked": {
          "title": "C++ Info",
          "description": "- name: `maxNumObjectsPicked`(ctype: `hkInt32`)\n - offset: ` 44`(x86)/` 72`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "throwVelocity": {
          "title": "C++ Info",
          "description": "- name: `throwVelocity`(ctype: `hkReal`)\n - offset: ` 60`(x86)/` 88`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "type",
        "keyboardKey",
        "listeners",
        "grabbedBodies",
        "maxNumObjectsPicked",
        "maxMassOfObjectPicked",
        "maxDistOfObjectPicked",
        "impulseAppliedWhenObjectNotPicked",
        "throwVelocity",
        "capturedObjectPosition",
        "capturedObjectsOffset"
      ]
    },
    "hkpGroupCollisionFilter": {
      "title": "C++ Info",
      "description": "- name: `hkpGroupCollisionFilter`\n - version: `0`\n - signature: `0x5cc01561`\n - size: `180`(x86)/`208`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum hkpFilterType`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "$ref": "#/$defs/hkpFilterType"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "collisionGroups": {
          "title": "C++ Info",
          "description": "- name: `collisionGroups`(ctype: `hkUint32[32]`)\n - offset: ` 52`(x86)/` 76`(x86_64)\n - type_size: `128`(x86)/`128`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          },
          "maxItems": 32,
          "minItems": 32
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "noGroupCollisionEnabled": {
          "title": "C++ Info",
          "description": "- name: `noGroupCollisionEnabled`(ctype: `hkBool`)\n - offset: ` 48`(x86)/` 72`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "postpad": {
          "title": "C++ Info",
          "description": "- name: `postpad`(ctype: `hkUint32[3]`)\n - offset: ` 36`(x86)/` 60`(x86_64)\n - type_size: ` 12`(x86)/` 12`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          },
          "maxItems": 3,
          "minItems": 3
        },
        "prepad": {
          "title": "C++ Info",
          "description": "- name: `prepad`(ctype: `hkUint32[2]`)\n - offset: ` 24`(x86)/` 48`(x86_64)\n - type_size: `  8`(x86)/`  8`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          },
          "maxItems": 2,
          "minItems": 2
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "prepad",
        "type",
        "postpad",
        "noGroupCollisionEnabled",
        "collisionGroups"
      ]
    },
    "hkpGroupFilter": {
      "title": "C++ Info",
      "description": "- name: `hkpGroupFilter`\n - version: `0`\n - signature: `0x65ee88e4`\n - size: `256`(x86)/`272`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum hkpFilterType`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "$ref": "#/$defs/hkpFilterType"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "collisionLookupTable": {
          "title": "C++ Info",
          "description": "- name: `collisionLookupTable`(ctype: `hkUint32[32]`)\n - offset: ` 52`(x86)/` 76`(x86_64)\n - type_size: `128`(x86)/`128`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          },
          "maxItems": 32,
          "minItems": 32
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "nextFreeSystemGroup": {
          "title": "C++ Info",
          "description": "- name: `nextFreeSystemGroup`(ctype: `hkInt32`)\n - offset: ` 48`(x86)/` 72`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "pad256": {
          "title": "C++ Info",
          "description": "- name: `pad256`(ctype: `hkVector4[4]`)\n - offset: `192`(x86)/`208`(x86_64)\n - type_size: ` 64`(x86)/` 64`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/Vector4"
          },
          "maxItems": 4,
          "minItems": 4
        },
        "postpad": {
          "title": "C++ Info",
          "description": "- name: `postpad`(ctype: `hkUint32[3]`)\n - offset: ` 36`(x86)/` 60`(x86_64)\n - type_size: ` 12`(x86)/` 12`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          },
          "maxItems": 3,
          "minItems": 3
        },
        "prepad": {
          "title": "C++ Info",
          "description": "- name: `prepad`(ctype: `hkUint32[2]`)\n - offset: ` 24`(x86)/` 48`(x86_64)\n - type_size: `  8`(x86)/`  8`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          },
          "maxItems": 2,
          "minItems": 2
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "prepad",
        "type",
        "postpad",
        "nextFreeSystemGroup",
        "collisionLookupTable",
        "pad256"
      ]
    },
    "hkpHeightFieldShape": {
      "title": "C++ Info",
      "description": "- name: `hkpHeightFieldShape`\n - version: `0`\n - signature: `0xe7eca7eb`\n - size: ` 16`(x86)/` 32`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum unknown`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "userData",
        "type"
      ]
    },
    "hkpHingeConstraintData": {
      "title": "C++ Info",
      "description": "- name: `hkpHingeConstraintData`\n - version: `0`\n - signature: `0x9590f046`\n - size: `208`(x86)/`224`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "atoms": {
          "title": "C++ Info",
          "description": "- name: `atoms`(ctype: `struct hkpHingeConstraintDataAtoms`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: `192`(x86)/`192`(x86_64)\n - flags: `ALIGN_16`",
          "$ref": "#/$defs/hkpHingeConstraintDataAtoms"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "userData",
        "atoms"
      ]
    },
    "hkpHingeConstraintDataAtoms": {
      "title": "C++ Info",
      "description": "- name: `hkpHingeConstraintDataAtoms`\n - version: `1`\n - signature: `0x6958371c`\n - size: `192`(x86)/`192`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "2dAng": {
          "title": "C++ Info",
          "description": "- name: `2dAng`(ctype: `struct hkp2dAngConstraintAtom`)\n - offset: `160`(x86)/`160`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "$ref": "#/$defs/hkp2dAngConstraintAtom"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "ballSocket": {
          "title": "C++ Info",
          "description": "- name: `ballSocket`(ctype: `struct hkpBallSocketConstraintAtom`)\n - offset: `164`(x86)/`164`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/hkpBallSocketConstraintAtom"
        },
        "setupStabilization": {
          "title": "C++ Info",
          "description": "- name: `setupStabilization`(ctype: `struct hkpSetupStabilizationAtom`)\n - offset: `144`(x86)/`144`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/hkpSetupStabilizationAtom"
        },
        "transforms": {
          "title": "C++ Info",
          "description": "- name: `transforms`(ctype: `struct hkpSetLocalTransformsConstraintAtom`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `144`(x86)/`144`(x86_64)",
          "$ref": "#/$defs/hkpSetLocalTransformsConstraintAtom"
        }
      },
      "required": [
        "transforms",
        "setupStabilization",
        "2dAng",
        "ballSocket"
      ]
    },
    "hkpHingeLimitsData": {
      "title": "C++ Info",
      "description": "- name: `hkpHingeLimitsData`\n - version: `0`\n - signature: `0xbd46760a`\n - size: `160`(x86)/`176`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "atoms": {
          "title": "C++ Info",
          "description": "- name: `atoms`(ctype: `struct hkpHingeLimitsDataAtoms`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: `144`(x86)/`144`(x86_64)\n - flags: `ALIGN_16`",
          "$ref": "#/$defs/hkpHingeLimitsDataAtoms"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "userData",
        "atoms"
      ]
    },
    "hkpHingeLimitsDataAtoms": {
      "title": "C++ Info",
      "description": "- name: `hkpHingeLimitsDataAtoms`\n - version: `0`\n - signature: `0x555876ff`\n - size: `144`(x86)/`144`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "2dAng": {
          "title": "C++ Info",
          "description": "- name: `2dAng`(ctype: `struct hkp2dAngConstraintAtom`)\n - offset: `128`(x86)/`128`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "$ref": "#/$defs/hkp2dAngConstraintAtom"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "angLimit": {
          "title": "C++ Info",
          "description": "- name: `angLimit`(ctype: `struct hkpAngLimitConstraintAtom`)\n - offset: `112`(x86)/`112`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/hkpAngLimitConstraintAtom"
        },
        "rotations": {
          "title": "C++ Info",
          "description": "- name: `rotations`(ctype: `struct hkpSetLocalRotationsConstraintAtom`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `112`(x86)/`112`(x86_64)",
          "$ref": "#/$defs/hkpSetLocalRotationsConstraintAtom"
        }
      },
      "required": [
        "rotations",
        "angLimit",
        "2dAng"
      ]
    },
    "hkpIgnoreModifierConstraintAtom": {
      "title": "C++ Info",
      "description": "- name: `hkpIgnoreModifierConstraintAtom`\n - version: `0`\n - signature: `0x5c6aa14d`\n - size: ` 32`(x86)/` 48`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum AtomType`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "$ref": "#/$defs/AtomType"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "child": {
          "title": "C++ Info",
          "description": "- name: `child`(ctype: `struct hkpConstraintAtom*`)\n - offset: ` 20`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "childSize": {
          "title": "C++ Info",
          "description": "- name: `childSize`(ctype: `hkUint16`)\n - offset: ` 18`(x86)/` 18`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "modifierAtomSize": {
          "title": "C++ Info",
          "description": "- name: `modifierAtomSize`(ctype: `hkUint16`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `ALIGN_16`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "pad": {
          "title": "C++ Info",
          "description": "- name: `pad`(ctype: `hkUint32[2]`)\n - offset: ` 24`(x86)/` 32`(x86_64)\n - type_size: `  8`(x86)/`  8`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          },
          "maxItems": 2,
          "minItems": 2
        }
      },
      "required": [
        "type",
        "modifierAtomSize",
        "childSize",
        "child",
        "pad"
      ]
    },
    "hkpKeyframedRigidMotion": {
      "title": "C++ Info",
      "description": "- name: `hkpKeyframedRigidMotion`\n - version: `0`\n - signature: `0xbafa2bb7`\n - size: `288`(x86)/`320`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum MotionType`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/MotionType"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "angularVelocity": {
          "title": "C++ Info",
          "description": "- name: `angularVelocity`(ctype: `hkVector4`)\n - offset: `224`(x86)/`240`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "deactivationIntegrateCounter": {
          "title": "C++ Info",
          "description": "- name: `deactivationIntegrateCounter`(ctype: `hkUint8`)\n - offset: `  9`(x86)/` 17`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        },
        "deactivationNumInactiveFrames": {
          "title": "C++ Info",
          "description": "- name: `deactivationNumInactiveFrames`(ctype: `hkUint16[2]`)\n - offset: ` 10`(x86)/` 18`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint16",
            "minimum": 0
          },
          "maxItems": 2,
          "minItems": 2
        },
        "deactivationRefOrientation": {
          "title": "C++ Info",
          "description": "- name: `deactivationRefOrientation`(ctype: `hkUint32[2]`)\n - offset: `272`(x86)/`288`(x86_64)\n - type_size: `  8`(x86)/`  8`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          },
          "maxItems": 2,
          "minItems": 2
        },
        "deactivationRefPosition": {
          "title": "C++ Info",
          "description": "- name: `deactivationRefPosition`(ctype: `hkVector4[2]`)\n - offset: `240`(x86)/`256`(x86_64)\n - type_size: ` 32`(x86)/` 32`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/Vector4"
          },
          "maxItems": 2,
          "minItems": 2
        },
        "gravityFactor": {
          "title": "C++ Info",
          "description": "- name: `gravityFactor`(ctype: `hkHalf`)\n - offset: `286`(x86)/`306`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "inertiaAndMassInv": {
          "title": "C++ Info",
          "description": "- name: `inertiaAndMassInv`(ctype: `hkVector4`)\n - offset: `192`(x86)/`208`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "linearVelocity": {
          "title": "C++ Info",
          "description": "- name: `linearVelocity`(ctype: `hkVector4`)\n - offset: `208`(x86)/`224`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "motionState": {
          "title": "C++ Info",
          "description": "- name: `motionState`(ctype: `struct hkMotionState`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: `176`(x86)/`176`(x86_64)",
          "$ref": "#/$defs/hkMotionState"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "savedMotion": {
          "title": "C++ Info",
          "description": "- name: `savedMotion`(ctype: `struct hkpMaxSizeMotion*`)\n - offset: `280`(x86)/`296`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "savedQualityTypeIndex": {
          "title": "C++ Info",
          "description": "- name: `savedQualityTypeIndex`(ctype: `hkUint16`)\n - offset: `284`(x86)/`304`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "type",
        "deactivationIntegrateCounter",
        "deactivationNumInactiveFrames",
        "motionState",
        "inertiaAndMassInv",
        "linearVelocity",
        "angularVelocity",
        "deactivationRefPosition",
        "deactivationRefOrientation",
        "savedMotion",
        "savedQualityTypeIndex",
        "gravityFactor"
      ]
    },
    "hkpLimitedForceConstraintMotor": {
      "title": "C++ Info",
      "description": "- name: `hkpLimitedForceConstraintMotor`\n - version: `0`\n - signature: `0x3377b0b0`\n - size: ` 20`(x86)/` 32`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum MotorType`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/MotorType"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "maxForce": {
          "title": "C++ Info",
          "description": "- name: `maxForce`(ctype: `hkReal`)\n - offset: ` 16`(x86)/` 28`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "minForce": {
          "title": "C++ Info",
          "description": "- name: `minForce`(ctype: `hkReal`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "type",
        "minForce",
        "maxForce"
      ]
    },
    "hkpLimitedHingeConstraintData": {
      "title": "C++ Info",
      "description": "- name: `hkpLimitedHingeConstraintData`\n - version: `0`\n - signature: `0x7c15bb6b`\n - size: `256`(x86)/`272`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "atoms": {
          "title": "C++ Info",
          "description": "- name: `atoms`(ctype: `struct hkpLimitedHingeConstraintDataAtoms`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: `240`(x86)/`240`(x86_64)\n - flags: `ALIGN_16`",
          "$ref": "#/$defs/hkpLimitedHingeConstraintDataAtoms"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "userData",
        "atoms"
      ]
    },
    "hkpLimitedHingeConstraintDataAtoms": {
      "title": "C++ Info",
      "description": "- name: `hkpLimitedHingeConstraintDataAtoms`\n - version: `1`\n - signature: `0x54c7715b`\n - size: `240`(x86)/`240`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "2dAng": {
          "title": "C++ Info",
          "description": "- name: `2dAng`(ctype: `struct hkp2dAngConstraintAtom`)\n - offset: `208`(x86)/`212`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "$ref": "#/$defs/hkp2dAngConstraintAtom"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "angFriction": {
          "title": "C++ Info",
          "description": "- name: `angFriction`(ctype: `struct hkpAngFrictionConstraintAtom`)\n - offset: `180`(x86)/`184`(x86_64)\n - type_size: ` 12`(x86)/` 12`(x86_64)",
          "$ref": "#/$defs/hkpAngFrictionConstraintAtom"
        },
        "angLimit": {
          "title": "C++ Info",
          "description": "- name: `angLimit`(ctype: `struct hkpAngLimitConstraintAtom`)\n - offset: `192`(x86)/`196`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/hkpAngLimitConstraintAtom"
        },
        "angMotor": {
          "title": "C++ Info",
          "description": "- name: `angMotor`(ctype: `struct hkpAngMotorConstraintAtom`)\n - offset: `160`(x86)/`160`(x86_64)\n - type_size: ` 20`(x86)/` 24`(x86_64)",
          "$ref": "#/$defs/hkpAngMotorConstraintAtom"
        },
        "ballSocket": {
          "title": "C++ Info",
          "description": "- name: `ballSocket`(ctype: `struct hkpBallSocketConstraintAtom`)\n - offset: `212`(x86)/`216`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/hkpBallSocketConstraintAtom"
        },
        "setupStabilization": {
          "title": "C++ Info",
          "description": "- name: `setupStabilization`(ctype: `struct hkpSetupStabilizationAtom`)\n - offset: `144`(x86)/`144`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/hkpSetupStabilizationAtom"
        },
        "transforms": {
          "title": "C++ Info",
          "description": "- name: `transforms`(ctype: `struct hkpSetLocalTransformsConstraintAtom`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `144`(x86)/`144`(x86_64)",
          "$ref": "#/$defs/hkpSetLocalTransformsConstraintAtom"
        }
      },
      "required": [
        "transforms",
        "setupStabilization",
        "angMotor",
        "angFriction",
        "angLimit",
        "2dAng",
        "ballSocket"
      ]
    },
    "hkpLinConstraintAtom": {
      "title": "C++ Info",
      "description": "- name: `hkpLinConstraintAtom`\n - version: `0`\n - signature: `0x7b6b0210`\n - size: `  4`(x86)/`  4`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum AtomType`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "$ref": "#/$defs/AtomType"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "axisIndex": {
          "title": "C++ Info",
          "description": "- name: `axisIndex`(ctype: `hkUint8`)\n - offset: `  2`(x86)/`  2`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        }
      },
      "required": [
        "type",
        "axisIndex"
      ]
    },
    "hkpLinFrictionConstraintAtom": {
      "title": "C++ Info",
      "description": "- name: `hkpLinFrictionConstraintAtom`\n - version: `0`\n - signature: `0x3e94ef7c`\n - size: `  8`(x86)/`  8`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum AtomType`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "$ref": "#/$defs/AtomType"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "frictionAxis": {
          "title": "C++ Info",
          "description": "- name: `frictionAxis`(ctype: `hkUint8`)\n - offset: `  3`(x86)/`  3`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        },
        "isEnabled": {
          "title": "C++ Info",
          "description": "- name: `isEnabled`(ctype: `hkUint8`)\n - offset: `  2`(x86)/`  2`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        },
        "maxFrictionForce": {
          "title": "C++ Info",
          "description": "- name: `maxFrictionForce`(ctype: `hkReal`)\n - offset: `  4`(x86)/`  4`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        }
      },
      "required": [
        "type",
        "isEnabled",
        "frictionAxis",
        "maxFrictionForce"
      ]
    },
    "hkpLinLimitConstraintAtom": {
      "title": "C++ Info",
      "description": "- name: `hkpLinLimitConstraintAtom`\n - version: `0`\n - signature: `0xa44d1b07`\n - size: ` 12`(x86)/` 12`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum AtomType`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "$ref": "#/$defs/AtomType"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "axisIndex": {
          "title": "C++ Info",
          "description": "- name: `axisIndex`(ctype: `hkUint8`)\n - offset: `  2`(x86)/`  2`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        },
        "max": {
          "title": "C++ Info",
          "description": "- name: `max`(ctype: `hkReal`)\n - offset: `  8`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "min": {
          "title": "C++ Info",
          "description": "- name: `min`(ctype: `hkReal`)\n - offset: `  4`(x86)/`  4`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        }
      },
      "required": [
        "type",
        "axisIndex",
        "min",
        "max"
      ]
    },
    "hkpLinMotorConstraintAtom": {
      "title": "C++ Info",
      "description": "- name: `hkpLinMotorConstraintAtom`\n - version: `0`\n - signature: `0x10312464`\n - size: ` 16`(x86)/` 24`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum AtomType`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "$ref": "#/$defs/AtomType"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "initializedOffset": {
          "title": "C++ Info",
          "description": "- name: `initializedOffset`(ctype: `hkInt16`)\n - offset: `  4`(x86)/`  4`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "int16"
        },
        "isEnabled": {
          "title": "C++ Info",
          "description": "- name: `isEnabled`(ctype: `hkBool`)\n - offset: `  2`(x86)/`  2`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "motor": {
          "title": "C++ Info",
          "description": "- name: `motor`(ctype: `struct hkpConstraintMotor*`)\n - offset: ` 12`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "motorAxis": {
          "title": "C++ Info",
          "description": "- name: `motorAxis`(ctype: `hkUint8`)\n - offset: `  3`(x86)/`  3`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        },
        "previousTargetPositionOffset": {
          "title": "C++ Info",
          "description": "- name: `previousTargetPositionOffset`(ctype: `hkInt16`)\n - offset: `  6`(x86)/`  6`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "int16"
        },
        "targetPosition": {
          "title": "C++ Info",
          "description": "- name: `targetPosition`(ctype: `hkReal`)\n - offset: `  8`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        }
      },
      "required": [
        "type",
        "isEnabled",
        "motorAxis",
        "initializedOffset",
        "previousTargetPositionOffset",
        "targetPosition",
        "motor"
      ]
    },
    "hkpLinSoftConstraintAtom": {
      "title": "C++ Info",
      "description": "- name: `hkpLinSoftConstraintAtom`\n - version: `0`\n - signature: `0x52b27d69`\n - size: ` 12`(x86)/` 12`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum AtomType`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "$ref": "#/$defs/AtomType"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "axisIndex": {
          "title": "C++ Info",
          "description": "- name: `axisIndex`(ctype: `hkUint8`)\n - offset: `  2`(x86)/`  2`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        },
        "damping": {
          "title": "C++ Info",
          "description": "- name: `damping`(ctype: `hkReal`)\n - offset: `  8`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "tau": {
          "title": "C++ Info",
          "description": "- name: `tau`(ctype: `hkReal`)\n - offset: `  4`(x86)/`  4`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        }
      },
      "required": [
        "type",
        "axisIndex",
        "tau",
        "damping"
      ]
    },
    "hkpLinearParametricCurve": {
      "title": "C++ Info",
      "description": "- name: `hkpLinearParametricCurve`\n - version: `0`\n - signature: `0xd7b3be03`\n - size: ` 64`(x86)/` 80`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "closedLoop": {
          "title": "C++ Info",
          "description": "- name: `closedLoop`(ctype: `hkBool`)\n - offset: ` 12`(x86)/` 20`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "dirNotParallelToTangentAlongWholePath": {
          "title": "C++ Info",
          "description": "- name: `dirNotParallelToTangentAlongWholePath`(ctype: `hkVector4`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "distance": {
          "title": "C++ Info",
          "description": "- name: `distance`(ctype: `hkArray<hkReal>`)\n - offset: ` 44`(x86)/` 64`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "points": {
          "title": "C++ Info",
          "description": "- name: `points`(ctype: `hkArray<hkVector4>`)\n - offset: ` 32`(x86)/` 48`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/Vector4"
          }
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "smoothingFactor": {
          "title": "C++ Info",
          "description": "- name: `smoothingFactor`(ctype: `hkReal`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "smoothingFactor",
        "closedLoop",
        "dirNotParallelToTangentAlongWholePath",
        "points",
        "distance"
      ]
    },
    "hkpLinkedCollidable": {
      "title": "C++ Info",
      "description": "- name: `hkpLinkedCollidable`\n - version: `0`\n - signature: `0xe1a81497`\n - size: ` 92`(x86)/`128`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "allowedPenetrationDepth": {
          "title": "C++ Info",
          "description": "- name: `allowedPenetrationDepth`(ctype: `hkReal`)\n - offset: ` 76`(x86)/`104`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "boundingVolumeData": {
          "title": "C++ Info",
          "description": "- name: `boundingVolumeData`(ctype: `struct hkpCollidableBoundingVolumeData`)\n - offset: ` 32`(x86)/` 48`(x86_64)\n - type_size: ` 44`(x86)/` 56`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "$ref": "#/$defs/hkpCollidableBoundingVolumeData"
        },
        "broadPhaseHandle": {
          "title": "C++ Info",
          "description": "- name: `broadPhaseHandle`(ctype: `struct hkpTypedBroadPhaseHandle`)\n - offset: ` 20`(x86)/` 36`(x86_64)\n - type_size: ` 12`(x86)/` 12`(x86_64)",
          "$ref": "#/$defs/hkpTypedBroadPhaseHandle"
        },
        "collisionEntries": {
          "title": "C++ Info",
          "description": "- name: `collisionEntries`(ctype: `hkArray<void>`)\n - offset: ` 80`(x86)/`112`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "null"
          }
        },
        "forceCollideOntoPpu": {
          "title": "C++ Info",
          "description": "- name: `forceCollideOntoPpu`(ctype: `hkUint8`)\n - offset: ` 17`(x86)/` 33`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        },
        "motion": {
          "title": "C++ Info",
          "description": "- name: `motion`(ctype: `void*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "ownerOffset": {
          "title": "C++ Info",
          "description": "- name: `ownerOffset`(ctype: `hkInt8`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "parent": {
          "title": "C++ Info",
          "description": "- name: `parent`(ctype: `struct hkpCdBody*`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "shape": {
          "title": "C++ Info",
          "description": "- name: `shape`(ctype: `struct hkpShape*`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "shapeKey": {
          "title": "C++ Info",
          "description": "- name: `shapeKey`(ctype: `hkUint32`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "shapeSizeOnSpu": {
          "title": "C++ Info",
          "description": "- name: `shapeSizeOnSpu`(ctype: `hkUint16`)\n - offset: ` 18`(x86)/` 34`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        }
      },
      "required": [
        "shape",
        "shapeKey",
        "motion",
        "parent",
        "ownerOffset",
        "forceCollideOntoPpu",
        "shapeSizeOnSpu",
        "broadPhaseHandle",
        "boundingVolumeData",
        "allowedPenetrationDepth",
        "collisionEntries"
      ]
    },
    "hkpListShape": {
      "title": "C++ Info",
      "description": "- name: `hkpListShape`\n - version: `0`\n - signature: `0xa1937cbd`\n - size: `112`(x86)/`144`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum unknown`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "aabbCenter": {
          "title": "C++ Info",
          "description": "- name: `aabbCenter`(ctype: `hkVector4`)\n - offset: ` 64`(x86)/` 96`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "aabbHalfExtents": {
          "title": "C++ Info",
          "description": "- name: `aabbHalfExtents`(ctype: `hkVector4`)\n - offset: ` 48`(x86)/` 80`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "childInfo": {
          "title": "C++ Info",
          "description": "- name: `childInfo`(ctype: `hkArray<struct hkpListShapeChildInfo>`)\n - offset: ` 24`(x86)/` 48`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkpListShapeChildInfo"
          }
        },
        "collectionType": {
          "title": "C++ Info",
          "description": "- name: `collectionType`(ctype: `enum CollectionType`)\n - offset: ` 21`(x86)/` 41`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/CollectionType"
        },
        "disableWelding": {
          "title": "C++ Info",
          "description": "- name: `disableWelding`(ctype: `hkBool`)\n - offset: ` 20`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "enabledChildren": {
          "title": "C++ Info",
          "description": "- name: `enabledChildren`(ctype: `hkUint32[8]`)\n - offset: ` 80`(x86)/`112`(x86_64)\n - type_size: ` 32`(x86)/` 32`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          },
          "maxItems": 8,
          "minItems": 8
        },
        "flags": {
          "title": "C++ Info",
          "description": "- name: `flags`(ctype: `hkUint16`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "numDisabledChildren": {
          "title": "C++ Info",
          "description": "- name: `numDisabledChildren`(ctype: `hkUint16`)\n - offset: ` 38`(x86)/` 66`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "userData",
        "type",
        "disableWelding",
        "collectionType",
        "childInfo",
        "flags",
        "numDisabledChildren",
        "aabbHalfExtents",
        "aabbCenter",
        "enabledChildren"
      ]
    },
    "hkpListShapeChildInfo": {
      "title": "C++ Info",
      "description": "- name: `hkpListShapeChildInfo`\n - version: `0`\n - signature: `0x80df0f90`\n - size: ` 16`(x86)/` 32`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "collisionFilterInfo": {
          "title": "C++ Info",
          "description": "- name: `collisionFilterInfo`(ctype: `hkUint32`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "numChildShapes": {
          "title": "C++ Info",
          "description": "- name: `numChildShapes`(ctype: `hkInt32`)\n - offset: ` 12`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int32"
        },
        "shape": {
          "title": "C++ Info",
          "description": "- name: `shape`(ctype: `struct hkpShape*`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `ALIGN_16`",
          "type": "string"
        },
        "shapeSize": {
          "title": "C++ Info",
          "description": "- name: `shapeSize`(ctype: `hkInt32`)\n - offset: `  8`(x86)/` 12`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "shape",
        "collisionFilterInfo",
        "shapeSize",
        "numChildShapes"
      ]
    },
    "hkpMalleableConstraintData": {
      "title": "C++ Info",
      "description": "- name: `hkpMalleableConstraintData`\n - version: `0`\n - signature: `0x6748b2cf`\n - size: ` 32`(x86)/` 64`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "atoms": {
          "title": "C++ Info",
          "description": "- name: `atoms`(ctype: `struct hkpBridgeAtoms`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: ` 12`(x86)/` 24`(x86_64)",
          "$ref": "#/$defs/hkpBridgeAtoms"
        },
        "constraintData": {
          "title": "C++ Info",
          "description": "- name: `constraintData`(ctype: `struct hkpConstraintData*`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "strength": {
          "title": "C++ Info",
          "description": "- name: `strength`(ctype: `hkReal`)\n - offset: ` 28`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "userData",
        "constraintData",
        "atoms",
        "strength"
      ]
    },
    "hkpMassChangerModifierConstraintAtom": {
      "title": "C++ Info",
      "description": "- name: `hkpMassChangerModifierConstraintAtom`\n - version: `1`\n - signature: `0xb6b28240`\n - size: ` 64`(x86)/` 80`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum AtomType`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "$ref": "#/$defs/AtomType"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "child": {
          "title": "C++ Info",
          "description": "- name: `child`(ctype: `struct hkpConstraintAtom*`)\n - offset: ` 20`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "childSize": {
          "title": "C++ Info",
          "description": "- name: `childSize`(ctype: `hkUint16`)\n - offset: ` 18`(x86)/` 18`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "factorA": {
          "title": "C++ Info",
          "description": "- name: `factorA`(ctype: `hkVector4`)\n - offset: ` 32`(x86)/` 48`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "factorB": {
          "title": "C++ Info",
          "description": "- name: `factorB`(ctype: `hkVector4`)\n - offset: ` 48`(x86)/` 64`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "modifierAtomSize": {
          "title": "C++ Info",
          "description": "- name: `modifierAtomSize`(ctype: `hkUint16`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `ALIGN_16`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "pad": {
          "title": "C++ Info",
          "description": "- name: `pad`(ctype: `hkUint32[2]`)\n - offset: ` 24`(x86)/` 32`(x86_64)\n - type_size: `  8`(x86)/`  8`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          },
          "maxItems": 2,
          "minItems": 2
        }
      },
      "required": [
        "type",
        "modifierAtomSize",
        "childSize",
        "child",
        "pad",
        "factorA",
        "factorB"
      ]
    },
    "hkpMassProperties": {
      "title": "C++ Info",
      "description": "- name: `hkpMassProperties`\n - version: `0`\n - signature: `0x68a56834`\n - size: ` 80`(x86)/` 80`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "centerOfMass": {
          "title": "C++ Info",
          "description": "- name: `centerOfMass`(ctype: `hkVector4`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "inertiaTensor": {
          "title": "C++ Info",
          "description": "- name: `inertiaTensor`(ctype: `hkMatrix3`)\n - offset: ` 32`(x86)/` 32`(x86_64)\n - type_size: ` 48`(x86)/` 48`(x86_64)",
          "$ref": "#/$defs/Matrix3"
        },
        "mass": {
          "title": "C++ Info",
          "description": "- name: `mass`(ctype: `hkReal`)\n - offset: `  4`(x86)/`  4`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "volume": {
          "title": "C++ Info",
          "description": "- name: `volume`(ctype: `hkReal`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        }
      },
      "required": [
        "volume",
        "mass",
        "centerOfMass",
        "inertiaTensor"
      ]
    },
    "hkpMaterial": {
      "title": "C++ Info",
      "description": "- name: `hkpMaterial`\n - version: `2`\n - signature: `0x33be6570`\n - size: ` 12`(x86)/` 12`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "friction": {
          "title": "C++ Info",
          "description": "- name: `friction`(ctype: `hkReal`)\n - offset: `  4`(x86)/`  4`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "responseType": {
          "title": "C++ Info",
          "description": "- name: `responseType`(ctype: `enum ResponseType`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/ResponseType"
        },
        "restitution": {
          "title": "C++ Info",
          "description": "- name: `restitution`(ctype: `hkReal`)\n - offset: `  8`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "rollingFrictionMultiplier": {
          "title": "C++ Info",
          "description": "- name: `rollingFrictionMultiplier`(ctype: `hkHalf`)\n - offset: `  2`(x86)/`  2`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "number",
          "format": "float"
        }
      },
      "required": [
        "responseType",
        "rollingFrictionMultiplier",
        "friction",
        "restitution"
      ]
    },
    "hkpMaxSizeMotion": {
      "title": "C++ Info",
      "description": "- name: `hkpMaxSizeMotion`\n - version: `0`\n - signature: `0x64abf85c`\n - size: `288`(x86)/`320`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum MotionType`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/MotionType"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "angularVelocity": {
          "title": "C++ Info",
          "description": "- name: `angularVelocity`(ctype: `hkVector4`)\n - offset: `224`(x86)/`240`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "deactivationIntegrateCounter": {
          "title": "C++ Info",
          "description": "- name: `deactivationIntegrateCounter`(ctype: `hkUint8`)\n - offset: `  9`(x86)/` 17`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        },
        "deactivationNumInactiveFrames": {
          "title": "C++ Info",
          "description": "- name: `deactivationNumInactiveFrames`(ctype: `hkUint16[2]`)\n - offset: ` 10`(x86)/` 18`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint16",
            "minimum": 0
          },
          "maxItems": 2,
          "minItems": 2
        },
        "deactivationRefOrientation": {
          "title": "C++ Info",
          "description": "- name: `deactivationRefOrientation`(ctype: `hkUint32[2]`)\n - offset: `272`(x86)/`288`(x86_64)\n - type_size: `  8`(x86)/`  8`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          },
          "maxItems": 2,
          "minItems": 2
        },
        "deactivationRefPosition": {
          "title": "C++ Info",
          "description": "- name: `deactivationRefPosition`(ctype: `hkVector4[2]`)\n - offset: `240`(x86)/`256`(x86_64)\n - type_size: ` 32`(x86)/` 32`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/Vector4"
          },
          "maxItems": 2,
          "minItems": 2
        },
        "gravityFactor": {
          "title": "C++ Info",
          "description": "- name: `gravityFactor`(ctype: `hkHalf`)\n - offset: `286`(x86)/`306`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "inertiaAndMassInv": {
          "title": "C++ Info",
          "description": "- name: `inertiaAndMassInv`(ctype: `hkVector4`)\n - offset: `192`(x86)/`208`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "linearVelocity": {
          "title": "C++ Info",
          "description": "- name: `linearVelocity`(ctype: `hkVector4`)\n - offset: `208`(x86)/`224`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "motionState": {
          "title": "C++ Info",
          "description": "- name: `motionState`(ctype: `struct hkMotionState`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: `176`(x86)/`176`(x86_64)",
          "$ref": "#/$defs/hkMotionState"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "savedMotion": {
          "title": "C++ Info",
          "description": "- name: `savedMotion`(ctype: `struct hkpMaxSizeMotion*`)\n - offset: `280`(x86)/`296`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "savedQualityTypeIndex": {
          "title": "C++ Info",
          "description": "- name: `savedQualityTypeIndex`(ctype: `hkUint16`)\n - offset: `284`(x86)/`304`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "type",
        "deactivationIntegrateCounter",
        "deactivationNumInactiveFrames",
        "motionState",
        "inertiaAndMassInv",
        "linearVelocity",
        "angularVelocity",
        "deactivationRefPosition",
        "deactivationRefOrientation",
        "savedMotion",
        "savedQualityTypeIndex",
        "gravityFactor"
      ]
    },
    "hkpMeshMaterial": {
      "title": "C++ Info",
      "description": "- name: `hkpMeshMaterial`\n - version: `0`\n - signature: `0x886cde0c`\n - size: `  4`(x86)/`  4`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "filterInfo": {
          "title": "C++ Info",
          "description": "- name: `filterInfo`(ctype: `hkUint32`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        }
      },
      "required": [
        "filterInfo"
      ]
    },
    "hkpMeshShape": {
      "title": "C++ Info",
      "description": "- name: `hkpMeshShape`\n - version: `0`\n - signature: `0x3bf12c0f`\n - size: ` 96`(x86)/`128`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum unknown`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "collectionType": {
          "title": "C++ Info",
          "description": "- name: `collectionType`(ctype: `enum CollectionType`)\n - offset: ` 21`(x86)/` 41`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/CollectionType"
        },
        "disableWelding": {
          "title": "C++ Info",
          "description": "- name: `disableWelding`(ctype: `hkBool`)\n - offset: ` 20`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "numBitsForSubpartIndex": {
          "title": "C++ Info",
          "description": "- name: `numBitsForSubpartIndex`(ctype: `hkInt32`)\n - offset: ` 48`(x86)/` 64`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "pad": {
          "title": "C++ Info",
          "description": "- name: `pad`(ctype: `hkInt32[3]`)\n - offset: ` 84`(x86)/`112`(x86_64)\n - type_size: ` 12`(x86)/` 12`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "maxItems": 3,
          "minItems": 3
        },
        "radius": {
          "title": "C++ Info",
          "description": "- name: `radius`(ctype: `hkReal`)\n - offset: ` 80`(x86)/`108`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "scaling": {
          "title": "C++ Info",
          "description": "- name: `scaling`(ctype: `hkVector4`)\n - offset: ` 32`(x86)/` 48`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "subparts": {
          "title": "C++ Info",
          "description": "- name: `subparts`(ctype: `hkArray<struct hkpMeshShapeSubpart>`)\n - offset: ` 52`(x86)/` 72`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkpMeshShapeSubpart"
          }
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "weldingInfo": {
          "title": "C++ Info",
          "description": "- name: `weldingInfo`(ctype: `hkArray<hkUint16>`)\n - offset: ` 64`(x86)/` 88`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint16",
            "minimum": 0
          }
        },
        "weldingType": {
          "title": "C++ Info",
          "description": "- name: `weldingType`(ctype: `enum WeldingType`)\n - offset: ` 76`(x86)/`104`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/WeldingType"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "userData",
        "type",
        "disableWelding",
        "collectionType",
        "scaling",
        "numBitsForSubpartIndex",
        "subparts",
        "weldingInfo",
        "weldingType",
        "radius",
        "pad"
      ]
    },
    "hkpMeshShapeSubpart": {
      "title": "C++ Info",
      "description": "- name: `hkpMeshShapeSubpart`\n - version: `0`\n - signature: `0x27336e5d`\n - size: ` 56`(x86)/` 80`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "flipAlternateTriangles": {
          "title": "C++ Info",
          "description": "- name: `flipAlternateTriangles`(ctype: `hkInt32`)\n - offset: ` 24`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "indexBase": {
          "title": "C++ Info",
          "description": "- name: `indexBase`(ctype: `void*`)\n - offset: ` 12`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "indexStriding": {
          "title": "C++ Info",
          "description": "- name: `indexStriding`(ctype: `hkInt32`)\n - offset: ` 20`(x86)/` 28`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "materialBase": {
          "title": "C++ Info",
          "description": "- name: `materialBase`(ctype: `void*`)\n - offset: ` 40`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "materialIndexBase": {
          "title": "C++ Info",
          "description": "- name: `materialIndexBase`(ctype: `void*`)\n - offset: ` 32`(x86)/` 40`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "materialIndexStriding": {
          "title": "C++ Info",
          "description": "- name: `materialIndexStriding`(ctype: `hkInt32`)\n - offset: ` 36`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "materialIndexStridingType": {
          "title": "C++ Info",
          "description": "- name: `materialIndexStridingType`(ctype: `enum MeshShapeMaterialIndexStridingType`)\n - offset: ` 17`(x86)/` 25`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/MeshShapeMaterialIndexStridingType"
        },
        "materialStriding": {
          "title": "C++ Info",
          "description": "- name: `materialStriding`(ctype: `hkInt32`)\n - offset: ` 44`(x86)/` 64`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "numMaterials": {
          "title": "C++ Info",
          "description": "- name: `numMaterials`(ctype: `hkInt32`)\n - offset: ` 48`(x86)/` 68`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "numTriangles": {
          "title": "C++ Info",
          "description": "- name: `numTriangles`(ctype: `hkInt32`)\n - offset: ` 28`(x86)/` 36`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "numVertices": {
          "title": "C++ Info",
          "description": "- name: `numVertices`(ctype: `hkInt32`)\n - offset: `  8`(x86)/` 12`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "stridingType": {
          "title": "C++ Info",
          "description": "- name: `stridingType`(ctype: `enum MeshShapeIndexStridingType`)\n - offset: ` 16`(x86)/` 24`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/MeshShapeIndexStridingType"
        },
        "triangleOffset": {
          "title": "C++ Info",
          "description": "- name: `triangleOffset`(ctype: `hkInt32`)\n - offset: ` 52`(x86)/` 72`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "vertexBase": {
          "title": "C++ Info",
          "description": "- name: `vertexBase`(ctype: `void*`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "vertexStriding": {
          "title": "C++ Info",
          "description": "- name: `vertexStriding`(ctype: `hkInt32`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "vertexBase",
        "vertexStriding",
        "numVertices",
        "indexBase",
        "stridingType",
        "materialIndexStridingType",
        "indexStriding",
        "flipAlternateTriangles",
        "numTriangles",
        "materialIndexBase",
        "materialIndexStriding",
        "materialBase",
        "materialStriding",
        "numMaterials",
        "triangleOffset"
      ]
    },
    "hkpModifierConstraintAtom": {
      "title": "C++ Info",
      "description": "- name: `hkpModifierConstraintAtom`\n - version: `0`\n - signature: `0xb13fef1f`\n - size: ` 32`(x86)/` 48`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum AtomType`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "$ref": "#/$defs/AtomType"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "child": {
          "title": "C++ Info",
          "description": "- name: `child`(ctype: `struct hkpConstraintAtom*`)\n - offset: ` 20`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "childSize": {
          "title": "C++ Info",
          "description": "- name: `childSize`(ctype: `hkUint16`)\n - offset: ` 18`(x86)/` 18`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "modifierAtomSize": {
          "title": "C++ Info",
          "description": "- name: `modifierAtomSize`(ctype: `hkUint16`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `ALIGN_16`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "pad": {
          "title": "C++ Info",
          "description": "- name: `pad`(ctype: `hkUint32[2]`)\n - offset: ` 24`(x86)/` 32`(x86_64)\n - type_size: `  8`(x86)/`  8`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          },
          "maxItems": 2,
          "minItems": 2
        }
      },
      "required": [
        "type",
        "modifierAtomSize",
        "childSize",
        "child",
        "pad"
      ]
    },
    "hkpMoppBvTreeShape": {
      "title": "C++ Info",
      "description": "- name: `hkpMoppBvTreeShape`\n - version: `0`\n - signature: `0x90b29d39`\n - size: ` 64`(x86)/`112`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum unknown`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "bvTreeType": {
          "title": "C++ Info",
          "description": "- name: `bvTreeType`(ctype: `enum BvTreeType`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/BvTreeType"
        },
        "child": {
          "title": "C++ Info",
          "description": "- name: `child`(ctype: `struct hkpSingleShapeContainer`)\n - offset: ` 48`(x86)/` 80`(x86_64)\n - type_size: `  8`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/hkpSingleShapeContainer"
        },
        "childSize": {
          "title": "C++ Info",
          "description": "- name: `childSize`(ctype: `hkInt32`)\n - offset: ` 56`(x86)/` 96`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int32"
        },
        "code": {
          "title": "C++ Info",
          "description": "- name: `code`(ctype: `struct hkpMoppCode*`)\n - offset: ` 20`(x86)/` 40`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "codeInfoCopy": {
          "title": "C++ Info",
          "description": "- name: `codeInfoCopy`(ctype: `hkVector4`)\n - offset: ` 32`(x86)/` 64`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "$ref": "#/$defs/Vector4"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "moppData": {
          "title": "C++ Info",
          "description": "- name: `moppData`(ctype: `void*`)\n - offset: ` 24`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "moppDataSize": {
          "title": "C++ Info",
          "description": "- name: `moppDataSize`(ctype: `hkUint32`)\n - offset: ` 28`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "userData",
        "type",
        "bvTreeType",
        "code",
        "moppData",
        "moppDataSize",
        "codeInfoCopy",
        "child",
        "childSize"
      ]
    },
    "hkpMoppCode": {
      "title": "C++ Info",
      "description": "- name: `hkpMoppCode`\n - version: `0`\n - signature: `0x924c2661`\n - size: ` 48`(x86)/` 64`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "buildType": {
          "title": "C++ Info",
          "description": "- name: `buildType`(ctype: `enum BuildType`)\n - offset: ` 44`(x86)/` 48`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/BuildType"
        },
        "data": {
          "title": "C++ Info",
          "description": "- name: `data`(ctype: `hkArray<hkUint8>`)\n - offset: ` 32`(x86)/` 32`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint8",
            "minimum": 0
          }
        },
        "info": {
          "title": "C++ Info",
          "description": "- name: `info`(ctype: `struct hkpMoppCodeCodeInfo`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/hkpMoppCodeCodeInfo"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "info",
        "data",
        "buildType"
      ]
    },
    "hkpMoppCodeCodeInfo": {
      "title": "C++ Info",
      "description": "- name: `hkpMoppCodeCodeInfo`\n - version: `0`\n - signature: `0xd8fdbb08`\n - size: ` 16`(x86)/` 16`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "offset": {
          "title": "C++ Info",
          "description": "- name: `offset`(ctype: `hkVector4`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        }
      },
      "required": [
        "offset"
      ]
    },
    "hkpMoppCodeReindexedTerminal": {
      "title": "C++ Info",
      "description": "- name: `hkpMoppCodeReindexedTerminal`\n - version: `0`\n - signature: `0x6ed8ac06`\n - size: `  8`(x86)/`  8`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "origShapeKey": {
          "title": "C++ Info",
          "description": "- name: `origShapeKey`(ctype: `hkUint32`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "reindexedShapeKey": {
          "title": "C++ Info",
          "description": "- name: `reindexedShapeKey`(ctype: `hkUint32`)\n - offset: `  4`(x86)/`  4`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        }
      },
      "required": [
        "origShapeKey",
        "reindexedShapeKey"
      ]
    },
    "hkpMotion": {
      "title": "C++ Info",
      "description": "- name: `hkpMotion`\n - version: `3`\n - signature: `0x98aadb4f`\n - size: `288`(x86)/`320`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum MotionType`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/MotionType"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "angularVelocity": {
          "title": "C++ Info",
          "description": "- name: `angularVelocity`(ctype: `hkVector4`)\n - offset: `224`(x86)/`240`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "deactivationIntegrateCounter": {
          "title": "C++ Info",
          "description": "- name: `deactivationIntegrateCounter`(ctype: `hkUint8`)\n - offset: `  9`(x86)/` 17`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        },
        "deactivationNumInactiveFrames": {
          "title": "C++ Info",
          "description": "- name: `deactivationNumInactiveFrames`(ctype: `hkUint16[2]`)\n - offset: ` 10`(x86)/` 18`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint16",
            "minimum": 0
          },
          "maxItems": 2,
          "minItems": 2
        },
        "deactivationRefOrientation": {
          "title": "C++ Info",
          "description": "- name: `deactivationRefOrientation`(ctype: `hkUint32[2]`)\n - offset: `272`(x86)/`288`(x86_64)\n - type_size: `  8`(x86)/`  8`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          },
          "maxItems": 2,
          "minItems": 2
        },
        "deactivationRefPosition": {
          "title": "C++ Info",
          "description": "- name: `deactivationRefPosition`(ctype: `hkVector4[2]`)\n - offset: `240`(x86)/`256`(x86_64)\n - type_size: ` 32`(x86)/` 32`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/Vector4"
          },
          "maxItems": 2,
          "minItems": 2
        },
        "gravityFactor": {
          "title": "C++ Info",
          "description": "- name: `gravityFactor`(ctype: `hkHalf`)\n - offset: `286`(x86)/`306`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "inertiaAndMassInv": {
          "title": "C++ Info",
          "description": "- name: `inertiaAndMassInv`(ctype: `hkVector4`)\n - offset: `192`(x86)/`208`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "linearVelocity": {
          "title": "C++ Info",
          "description": "- name: `linearVelocity`(ctype: `hkVector4`)\n - offset: `208`(x86)/`224`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "motionState": {
          "title": "C++ Info",
          "description": "- name: `motionState`(ctype: `struct hkMotionState`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: `176`(x86)/`176`(x86_64)",
          "$ref": "#/$defs/hkMotionState"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "savedMotion": {
          "title": "C++ Info",
          "description": "- name: `savedMotion`(ctype: `struct hkpMaxSizeMotion*`)\n - offset: `280`(x86)/`296`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "savedQualityTypeIndex": {
          "title": "C++ Info",
          "description": "- name: `savedQualityTypeIndex`(ctype: `hkUint16`)\n - offset: `284`(x86)/`304`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "type",
        "deactivationIntegrateCounter",
        "deactivationNumInactiveFrames",
        "motionState",
        "inertiaAndMassInv",
        "linearVelocity",
        "angularVelocity",
        "deactivationRefPosition",
        "deactivationRefOrientation",
        "savedMotion",
        "savedQualityTypeIndex",
        "gravityFactor"
      ]
    },
    "hkpMotorAction": {
      "title": "C++ Info",
      "description": "- name: `hkpMotorAction`\n - version: `0`\n - signature: `0x8ff131d9`\n - size: ` 64`(x86)/` 96`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "active": {
          "title": "C++ Info",
          "description": "- name: `active`(ctype: `hkBool`)\n - offset: ` 56`(x86)/` 88`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "axis": {
          "title": "C++ Info",
          "description": "- name: `axis`(ctype: `hkVector4`)\n - offset: ` 32`(x86)/` 64`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "entity": {
          "title": "C++ Info",
          "description": "- name: `entity`(ctype: `struct hkpEntity*`)\n - offset: ` 24`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "gain": {
          "title": "C++ Info",
          "description": "- name: `gain`(ctype: `hkReal`)\n - offset: ` 52`(x86)/` 84`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "island": {
          "title": "C++ Info",
          "description": "- name: `island`(ctype: `void*`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 20`(x86)/` 40`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "spinRate": {
          "title": "C++ Info",
          "description": "- name: `spinRate`(ctype: `hkReal`)\n - offset: ` 48`(x86)/` 80`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "world": {
          "title": "C++ Info",
          "description": "- name: `world`(ctype: `void*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "world",
        "island",
        "userData",
        "entity",
        "axis",
        "spinRate",
        "gain",
        "active"
      ]
    },
    "hkpMountedBallGun": {
      "title": "C++ Info",
      "description": "- name: `hkpMountedBallGun`\n - version: `0`\n - signature: `0x6791ffce`\n - size: `112`(x86)/`128`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum unknown`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "addedBodies": {
          "title": "C++ Info",
          "description": "- name: `addedBodies`(ctype: `void*`)\n - offset: ` 80`(x86)/` 96`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "bulletMass": {
          "title": "C++ Info",
          "description": "- name: `bulletMass`(ctype: `hkReal`)\n - offset: ` 40`(x86)/` 64`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "bulletOffsetFromCenter": {
          "title": "C++ Info",
          "description": "- name: `bulletOffsetFromCenter`(ctype: `hkVector4`)\n - offset: ` 64`(x86)/` 80`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "bulletRadius": {
          "title": "C++ Info",
          "description": "- name: `bulletRadius`(ctype: `hkReal`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "bulletVelocity": {
          "title": "C++ Info",
          "description": "- name: `bulletVelocity`(ctype: `hkReal`)\n - offset: ` 36`(x86)/` 60`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "damageMultiplier": {
          "title": "C++ Info",
          "description": "- name: `damageMultiplier`(ctype: `hkReal`)\n - offset: ` 44`(x86)/` 68`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "keyboardKey": {
          "title": "C++ Info",
          "description": "- name: `keyboardKey`(ctype: `enum KeyboardKey`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/KeyboardKey"
        },
        "listeners": {
          "title": "C++ Info",
          "description": "- name: `listeners`(ctype: `hkArray<void*>`)\n - offset: ` 20`(x86)/` 40`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "maxBulletsInWorld": {
          "title": "C++ Info",
          "description": "- name: `maxBulletsInWorld`(ctype: `hkInt32`)\n - offset: ` 48`(x86)/` 72`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "position": {
          "title": "C++ Info",
          "description": "- name: `position`(ctype: `hkVector4`)\n - offset: ` 96`(x86)/`112`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "type",
        "keyboardKey",
        "listeners",
        "bulletRadius",
        "bulletVelocity",
        "bulletMass",
        "damageMultiplier",
        "maxBulletsInWorld",
        "bulletOffsetFromCenter",
        "addedBodies",
        "position"
      ]
    },
    "hkpMouseSpringAction": {
      "title": "C++ Info",
      "description": "- name: `hkpMouseSpringAction`\n - version: `0`\n - signature: `0x6e087fd6`\n - size: ` 96`(x86)/`144`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "applyCallbacks": {
          "title": "C++ Info",
          "description": "- name: `applyCallbacks`(ctype: `hkArray<void*>`)\n - offset: ` 84`(x86)/`120`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "entity": {
          "title": "C++ Info",
          "description": "- name: `entity`(ctype: `struct hkpEntity*`)\n - offset: ` 24`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "island": {
          "title": "C++ Info",
          "description": "- name: `island`(ctype: `void*`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "maxRelativeForce": {
          "title": "C++ Info",
          "description": "- name: `maxRelativeForce`(ctype: `hkReal`)\n - offset: ` 72`(x86)/`104`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "mousePositionInWorld": {
          "title": "C++ Info",
          "description": "- name: `mousePositionInWorld`(ctype: `hkVector4`)\n - offset: ` 48`(x86)/` 80`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 20`(x86)/` 40`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "objectDamping": {
          "title": "C++ Info",
          "description": "- name: `objectDamping`(ctype: `hkReal`)\n - offset: ` 76`(x86)/`108`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "positionInRbLocal": {
          "title": "C++ Info",
          "description": "- name: `positionInRbLocal`(ctype: `hkVector4`)\n - offset: ` 32`(x86)/` 64`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "shapeKey": {
          "title": "C++ Info",
          "description": "- name: `shapeKey`(ctype: `hkUint32`)\n - offset: ` 80`(x86)/`112`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "springDamping": {
          "title": "C++ Info",
          "description": "- name: `springDamping`(ctype: `hkReal`)\n - offset: ` 64`(x86)/` 96`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "springElasticity": {
          "title": "C++ Info",
          "description": "- name: `springElasticity`(ctype: `hkReal`)\n - offset: ` 68`(x86)/`100`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "world": {
          "title": "C++ Info",
          "description": "- name: `world`(ctype: `void*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "world",
        "island",
        "userData",
        "entity",
        "positionInRbLocal",
        "mousePositionInWorld",
        "springDamping",
        "springElasticity",
        "maxRelativeForce",
        "objectDamping",
        "shapeKey",
        "applyCallbacks"
      ]
    },
    "hkpMovingSurfaceModifierConstraintAtom": {
      "title": "C++ Info",
      "description": "- name: `hkpMovingSurfaceModifierConstraintAtom`\n - version: `0`\n - signature: `0x79ab517d`\n - size: ` 48`(x86)/` 64`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum AtomType`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "$ref": "#/$defs/AtomType"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "child": {
          "title": "C++ Info",
          "description": "- name: `child`(ctype: `struct hkpConstraintAtom*`)\n - offset: ` 20`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "childSize": {
          "title": "C++ Info",
          "description": "- name: `childSize`(ctype: `hkUint16`)\n - offset: ` 18`(x86)/` 18`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "modifierAtomSize": {
          "title": "C++ Info",
          "description": "- name: `modifierAtomSize`(ctype: `hkUint16`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `ALIGN_16`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "pad": {
          "title": "C++ Info",
          "description": "- name: `pad`(ctype: `hkUint32[2]`)\n - offset: ` 24`(x86)/` 32`(x86_64)\n - type_size: `  8`(x86)/`  8`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          },
          "maxItems": 2,
          "minItems": 2
        },
        "velocity": {
          "title": "C++ Info",
          "description": "- name: `velocity`(ctype: `hkVector4`)\n - offset: ` 32`(x86)/` 48`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        }
      },
      "required": [
        "type",
        "modifierAtomSize",
        "childSize",
        "child",
        "pad",
        "velocity"
      ]
    },
    "hkpMultiRayShape": {
      "title": "C++ Info",
      "description": "- name: `hkpMultiRayShape`\n - version: `0`\n - signature: `0xea2e7ec9`\n - size: ` 32`(x86)/` 56`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum unknown`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "rayPenetrationDistance": {
          "title": "C++ Info",
          "description": "- name: `rayPenetrationDistance`(ctype: `hkReal`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "rays": {
          "title": "C++ Info",
          "description": "- name: `rays`(ctype: `hkArray<struct hkpMultiRayShapeRay>`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkpMultiRayShapeRay"
          }
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "userData",
        "type",
        "rays",
        "rayPenetrationDistance"
      ]
    },
    "hkpMultiRayShapeRay": {
      "title": "C++ Info",
      "description": "- name: `hkpMultiRayShapeRay`\n - version: `0`\n - signature: `0xffdc0b65`\n - size: ` 32`(x86)/` 32`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "end": {
          "title": "C++ Info",
          "description": "- name: `end`(ctype: `hkVector4`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "start": {
          "title": "C++ Info",
          "description": "- name: `start`(ctype: `hkVector4`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        }
      },
      "required": [
        "start",
        "end"
      ]
    },
    "hkpMultiSphereShape": {
      "title": "C++ Info",
      "description": "- name: `hkpMultiSphereShape`\n - version: `0`\n - signature: `0x61a590fc`\n - size: `160`(x86)/`176`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum unknown`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "numSpheres": {
          "title": "C++ Info",
          "description": "- name: `numSpheres`(ctype: `hkInt32`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "spheres": {
          "title": "C++ Info",
          "description": "- name: `spheres`(ctype: `hkVector4[8]`)\n - offset: ` 32`(x86)/` 48`(x86_64)\n - type_size: `128`(x86)/`128`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/Vector4"
          },
          "maxItems": 8,
          "minItems": 8
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "userData",
        "type",
        "numSpheres",
        "spheres"
      ]
    },
    "hkpMultithreadedVehicleManager": {
      "title": "C++ Info",
      "description": "- name: `hkpMultithreadedVehicleManager`\n - version: `0`\n - signature: `0xc03af40d`\n - size: ` 20`(x86)/` 32`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "registeredVehicles": {
          "title": "C++ Info",
          "description": "- name: `registeredVehicles`(ctype: `hkArray<hkpVehicleInstance*>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "registeredVehicles"
      ]
    },
    "hkpNamedMeshMaterial": {
      "title": "C++ Info",
      "description": "- name: `hkpNamedMeshMaterial`\n - version: `0`\n - signature: `0x66b42df1`\n - size: `  8`(x86)/` 16`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "filterInfo": {
          "title": "C++ Info",
          "description": "- name: `filterInfo`(ctype: `hkUint32`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "required": [
        "filterInfo"
      ]
    },
    "hkpNullCollisionFilter": {
      "title": "C++ Info",
      "description": "- name: `hkpNullCollisionFilter`\n - version: `0`\n - signature: `0xb120a34f`\n - size: ` 48`(x86)/` 72`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum hkpFilterType`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "$ref": "#/$defs/hkpFilterType"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "postpad": {
          "title": "C++ Info",
          "description": "- name: `postpad`(ctype: `hkUint32[3]`)\n - offset: ` 36`(x86)/` 60`(x86_64)\n - type_size: ` 12`(x86)/` 12`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          },
          "maxItems": 3,
          "minItems": 3
        },
        "prepad": {
          "title": "C++ Info",
          "description": "- name: `prepad`(ctype: `hkUint32[2]`)\n - offset: ` 24`(x86)/` 48`(x86_64)\n - type_size: `  8`(x86)/`  8`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          },
          "maxItems": 2,
          "minItems": 2
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "prepad",
        "type",
        "postpad"
      ]
    },
    "hkpOverwritePivotConstraintAtom": {
      "title": "C++ Info",
      "description": "- name: `hkpOverwritePivotConstraintAtom`\n - version: `0`\n - signature: `0x1f11b467`\n - size: `  4`(x86)/`  4`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum AtomType`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "$ref": "#/$defs/AtomType"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "copyToPivotBFromPivotA": {
          "title": "C++ Info",
          "description": "- name: `copyToPivotBFromPivotA`(ctype: `hkUint8`)\n - offset: `  2`(x86)/`  2`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        }
      },
      "required": [
        "type",
        "copyToPivotBFromPivotA"
      ]
    },
    "hkpPairCollisionFilter": {
      "title": "C++ Info",
      "description": "- name: `hkpPairCollisionFilter`\n - version: `0`\n - signature: `0x4abc140e`\n - size: ` 64`(x86)/` 96`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum hkpFilterType`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "$ref": "#/$defs/hkpFilterType"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "childFilter": {
          "title": "C++ Info",
          "description": "- name: `childFilter`(ctype: `struct hkpCollisionFilter*`)\n - offset: ` 60`(x86)/` 88`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "disabledPairs": {
          "title": "C++ Info",
          "description": "- name: `disabledPairs`(ctype: `struct hkpPairCollisionFilterMapPairFilterKeyOverrideType`)\n - offset: ` 48`(x86)/` 72`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "$ref": "#/$defs/hkpPairCollisionFilterMapPairFilterKeyOverrideType"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "postpad": {
          "title": "C++ Info",
          "description": "- name: `postpad`(ctype: `hkUint32[3]`)\n - offset: ` 36`(x86)/` 60`(x86_64)\n - type_size: ` 12`(x86)/` 12`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          },
          "maxItems": 3,
          "minItems": 3
        },
        "prepad": {
          "title": "C++ Info",
          "description": "- name: `prepad`(ctype: `hkUint32[2]`)\n - offset: ` 24`(x86)/` 48`(x86_64)\n - type_size: `  8`(x86)/`  8`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          },
          "maxItems": 2,
          "minItems": 2
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "prepad",
        "type",
        "postpad",
        "disabledPairs",
        "childFilter"
      ]
    },
    "hkpPairCollisionFilterMapPairFilterKeyOverrideType": {
      "title": "C++ Info",
      "description": "- name: `hkpPairCollisionFilterMapPairFilterKeyOverrideType`\n - version: `0`\n - signature: `0x36195969`\n - size: ` 12`(x86)/` 16`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "elem": {
          "title": "C++ Info",
          "description": "- name: `elem`(ctype: `void*`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "hashMod": {
          "title": "C++ Info",
          "description": "- name: `hashMod`(ctype: `hkInt32`)\n - offset: `  8`(x86)/` 12`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "numElems": {
          "title": "C++ Info",
          "description": "- name: `numElems`(ctype: `hkInt32`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "elem",
        "numElems",
        "hashMod"
      ]
    },
    "hkpParametricCurve": {
      "title": "C++ Info",
      "description": "- name: `hkpParametricCurve`\n - version: `0`\n - signature: `0xda8c7d7d`\n - size: `  8`(x86)/` 16`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount"
      ]
    },
    "hkpPhantom": {
      "title": "C++ Info",
      "description": "- name: `hkpPhantom`\n - version: `0`\n - signature: `0x9b7e6f86`\n - size: `164`(x86)/`240`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "properties": {
          "title": "C++ Info",
          "description": "- name: `properties`(ctype: `hkArray<struct hkpProperty>`)\n - offset: `124`(x86)/`184`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkpProperty"
          }
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "collidable": {
          "title": "C++ Info",
          "description": "- name: `collidable`(ctype: `struct hkpLinkedCollidable`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: ` 92`(x86)/`128`(x86_64)",
          "$ref": "#/$defs/hkpLinkedCollidable"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "multiThreadCheck": {
          "title": "C++ Info",
          "description": "- name: `multiThreadCheck`(ctype: `struct hkMultiThreadCheck`)\n - offset: `108`(x86)/`160`(x86_64)\n - type_size: ` 12`(x86)/` 12`(x86_64)",
          "$ref": "#/$defs/hkMultiThreadCheck"
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: `120`(x86)/`176`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "overlapListeners": {
          "title": "C++ Info",
          "description": "- name: `overlapListeners`(ctype: `hkArray<void*>`)\n - offset: `140`(x86)/`208`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "phantomListeners": {
          "title": "C++ Info",
          "description": "- name: `phantomListeners`(ctype: `hkArray<void*>`)\n - offset: `152`(x86)/`224`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "treeData": {
          "title": "C++ Info",
          "description": "- name: `treeData`(ctype: `void*`)\n - offset: `136`(x86)/`200`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "world": {
          "title": "C++ Info",
          "description": "- name: `world`(ctype: `void*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "world",
        "userData",
        "collidable",
        "multiThreadCheck",
        "properties",
        "treeData",
        "overlapListeners",
        "phantomListeners"
      ]
    },
    "hkpPhantomCallbackShape": {
      "title": "C++ Info",
      "description": "- name: `hkpPhantomCallbackShape`\n - version: `0`\n - signature: `0xe7eca7eb`\n - size: ` 16`(x86)/` 32`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum unknown`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "userData",
        "type"
      ]
    },
    "hkpPhysicsData": {
      "title": "C++ Info",
      "description": "- name: `hkpPhysicsData`\n - version: `0`\n - signature: `0xc2a461e4`\n - size: ` 24`(x86)/` 40`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "systems": {
          "title": "C++ Info",
          "description": "- name: `systems`(ctype: `hkArray<hkpPhysicsSystem*>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "worldCinfo": {
          "title": "C++ Info",
          "description": "- name: `worldCinfo`(ctype: `struct hkpWorldCinfo*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "worldCinfo",
        "systems"
      ]
    },
    "hkpPhysicsSystem": {
      "title": "C++ Info",
      "description": "- name: `hkpPhysicsSystem`\n - version: `0`\n - signature: `0xff724c17`\n - size: ` 68`(x86)/`104`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "actions": {
          "title": "C++ Info",
          "description": "- name: `actions`(ctype: `hkArray<hkpAction*>`)\n - offset: ` 32`(x86)/` 48`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "active": {
          "title": "C++ Info",
          "description": "- name: `active`(ctype: `hkBool`)\n - offset: ` 64`(x86)/` 96`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "constraints": {
          "title": "C++ Info",
          "description": "- name: `constraints`(ctype: `hkArray<hkpConstraintInstance*>`)\n - offset: ` 20`(x86)/` 32`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 56`(x86)/` 80`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "phantoms": {
          "title": "C++ Info",
          "description": "- name: `phantoms`(ctype: `hkArray<hkpPhantom*>`)\n - offset: ` 44`(x86)/` 64`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "rigidBodies": {
          "title": "C++ Info",
          "description": "- name: `rigidBodies`(ctype: `hkArray<hkpRigidBody*>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 60`(x86)/` 88`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "rigidBodies",
        "constraints",
        "actions",
        "phantoms",
        "userData",
        "active"
      ]
    },
    "hkpPhysicsSystemWithContacts": {
      "title": "C++ Info",
      "description": "- name: `hkpPhysicsSystemWithContacts`\n - version: `0`\n - signature: `0xd0fd4bbe`\n - size: ` 80`(x86)/`120`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "actions": {
          "title": "C++ Info",
          "description": "- name: `actions`(ctype: `hkArray<hkpAction*>`)\n - offset: ` 32`(x86)/` 48`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "active": {
          "title": "C++ Info",
          "description": "- name: `active`(ctype: `hkBool`)\n - offset: ` 64`(x86)/` 96`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "constraints": {
          "title": "C++ Info",
          "description": "- name: `constraints`(ctype: `hkArray<hkpConstraintInstance*>`)\n - offset: ` 20`(x86)/` 32`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "contacts": {
          "title": "C++ Info",
          "description": "- name: `contacts`(ctype: `hkArray<hkpSerializedAgentNnEntry*>`)\n - offset: ` 68`(x86)/`104`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 56`(x86)/` 80`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "phantoms": {
          "title": "C++ Info",
          "description": "- name: `phantoms`(ctype: `hkArray<hkpPhantom*>`)\n - offset: ` 44`(x86)/` 64`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "rigidBodies": {
          "title": "C++ Info",
          "description": "- name: `rigidBodies`(ctype: `hkArray<hkpRigidBody*>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 60`(x86)/` 88`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "rigidBodies",
        "constraints",
        "actions",
        "phantoms",
        "userData",
        "active",
        "contacts"
      ]
    },
    "hkpPlaneShape": {
      "title": "C++ Info",
      "description": "- name: `hkpPlaneShape`\n - version: `0`\n - signature: `0xc36bbd30`\n - size: ` 64`(x86)/` 80`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum unknown`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "aabbCenter": {
          "title": "C++ Info",
          "description": "- name: `aabbCenter`(ctype: `hkVector4`)\n - offset: ` 32`(x86)/` 48`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "aabbHalfExtents": {
          "title": "C++ Info",
          "description": "- name: `aabbHalfExtents`(ctype: `hkVector4`)\n - offset: ` 48`(x86)/` 64`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "plane": {
          "title": "C++ Info",
          "description": "- name: `plane`(ctype: `hkVector4`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "userData",
        "type",
        "plane",
        "aabbCenter",
        "aabbHalfExtents"
      ]
    },
    "hkpPointToPathConstraintData": {
      "title": "C++ Info",
      "description": "- name: `hkpPointToPathConstraintData`\n - version: `0`\n - signature: `0x8e7cb5da`\n - size: `176`(x86)/`192`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "angularConstrainedDOF": {
          "title": "C++ Info",
          "description": "- name: `angularConstrainedDOF`(ctype: `enum OrientationConstraintType`)\n - offset: ` 32`(x86)/` 60`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/OrientationConstraintType"
        },
        "atoms": {
          "title": "C++ Info",
          "description": "- name: `atoms`(ctype: `struct hkpBridgeAtoms`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 24`(x86_64)",
          "$ref": "#/$defs/hkpBridgeAtoms"
        },
        "maxFrictionForce": {
          "title": "C++ Info",
          "description": "- name: `maxFrictionForce`(ctype: `hkReal`)\n - offset: ` 28`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "path": {
          "title": "C++ Info",
          "description": "- name: `path`(ctype: `struct hkpParametricCurve*`)\n - offset: ` 24`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "transform_OS_KS": {
          "title": "C++ Info",
          "description": "- name: `transform_OS_KS`(ctype: `hkTransform[2]`)\n - offset: ` 48`(x86)/` 64`(x86_64)\n - type_size: `128`(x86)/`128`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/Transform"
          },
          "maxItems": 2,
          "minItems": 2
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "userData",
        "atoms",
        "path",
        "maxFrictionForce",
        "angularConstrainedDOF",
        "transform_OS_KS"
      ]
    },
    "hkpPointToPlaneConstraintData": {
      "title": "C++ Info",
      "description": "- name: `hkpPointToPlaneConstraintData`\n - version: `0`\n - signature: `0x65c56e17`\n - size: `176`(x86)/`192`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "atoms": {
          "title": "C++ Info",
          "description": "- name: `atoms`(ctype: `struct hkpPointToPlaneConstraintDataAtoms`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: `160`(x86)/`160`(x86_64)\n - flags: `ALIGN_16`",
          "$ref": "#/$defs/hkpPointToPlaneConstraintDataAtoms"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "userData",
        "atoms"
      ]
    },
    "hkpPointToPlaneConstraintDataAtoms": {
      "title": "C++ Info",
      "description": "- name: `hkpPointToPlaneConstraintDataAtoms`\n - version: `0`\n - signature: `0x749bc260`\n - size: `160`(x86)/`160`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "lin": {
          "title": "C++ Info",
          "description": "- name: `lin`(ctype: `struct hkpLinConstraintAtom`)\n - offset: `144`(x86)/`144`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "$ref": "#/$defs/hkpLinConstraintAtom"
        },
        "transforms": {
          "title": "C++ Info",
          "description": "- name: `transforms`(ctype: `struct hkpSetLocalTransformsConstraintAtom`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `144`(x86)/`144`(x86_64)",
          "$ref": "#/$defs/hkpSetLocalTransformsConstraintAtom"
        }
      },
      "required": [
        "transforms",
        "lin"
      ]
    },
    "hkpPositionConstraintMotor": {
      "title": "C++ Info",
      "description": "- name: `hkpPositionConstraintMotor`\n - version: `0`\n - signature: `0x748fb303`\n - size: ` 36`(x86)/` 48`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum MotorType`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/MotorType"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "constantRecoveryVelocity": {
          "title": "C++ Info",
          "description": "- name: `constantRecoveryVelocity`(ctype: `hkReal`)\n - offset: ` 32`(x86)/` 44`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "damping": {
          "title": "C++ Info",
          "description": "- name: `damping`(ctype: `hkReal`)\n - offset: ` 24`(x86)/` 36`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "maxForce": {
          "title": "C++ Info",
          "description": "- name: `maxForce`(ctype: `hkReal`)\n - offset: ` 16`(x86)/` 28`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "minForce": {
          "title": "C++ Info",
          "description": "- name: `minForce`(ctype: `hkReal`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "proportionalRecoveryVelocity": {
          "title": "C++ Info",
          "description": "- name: `proportionalRecoveryVelocity`(ctype: `hkReal`)\n - offset: ` 28`(x86)/` 40`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "tau": {
          "title": "C++ Info",
          "description": "- name: `tau`(ctype: `hkReal`)\n - offset: ` 20`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "type",
        "minForce",
        "maxForce",
        "tau",
        "damping",
        "proportionalRecoveryVelocity",
        "constantRecoveryVelocity"
      ]
    },
    "hkpPoweredChainData": {
      "title": "C++ Info",
      "description": "- name: `hkpPoweredChainData`\n - version: `0`\n - signature: `0x38aeafc3`\n - size: ` 64`(x86)/` 96`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "atoms": {
          "title": "C++ Info",
          "description": "- name: `atoms`(ctype: `struct hkpBridgeAtoms`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 24`(x86_64)",
          "$ref": "#/$defs/hkpBridgeAtoms"
        },
        "cfmAngAdd": {
          "title": "C++ Info",
          "description": "- name: `cfmAngAdd`(ctype: `hkReal`)\n - offset: ` 52`(x86)/` 80`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "cfmAngMul": {
          "title": "C++ Info",
          "description": "- name: `cfmAngMul`(ctype: `hkReal`)\n - offset: ` 56`(x86)/` 84`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "cfmLinAdd": {
          "title": "C++ Info",
          "description": "- name: `cfmLinAdd`(ctype: `hkReal`)\n - offset: ` 44`(x86)/` 72`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "cfmLinMul": {
          "title": "C++ Info",
          "description": "- name: `cfmLinMul`(ctype: `hkReal`)\n - offset: ` 48`(x86)/` 76`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "damping": {
          "title": "C++ Info",
          "description": "- name: `damping`(ctype: `hkReal`)\n - offset: ` 40`(x86)/` 68`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "infos": {
          "title": "C++ Info",
          "description": "- name: `infos`(ctype: `hkArray<struct hkpPoweredChainDataConstraintInfo>`)\n - offset: ` 24`(x86)/` 48`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkpPoweredChainDataConstraintInfo"
          }
        },
        "maxErrorDistance": {
          "title": "C++ Info",
          "description": "- name: `maxErrorDistance`(ctype: `hkReal`)\n - offset: ` 60`(x86)/` 88`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "tau": {
          "title": "C++ Info",
          "description": "- name: `tau`(ctype: `hkReal`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "userData",
        "atoms",
        "infos",
        "tau",
        "damping",
        "cfmLinAdd",
        "cfmLinMul",
        "cfmAngAdd",
        "cfmAngMul",
        "maxErrorDistance"
      ]
    },
    "hkpPoweredChainDataConstraintInfo": {
      "title": "C++ Info",
      "description": "- name: `hkpPoweredChainDataConstraintInfo`\n - version: `0`\n - signature: `0xf88aee25`\n - size: ` 80`(x86)/` 96`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "aTc": {
          "title": "C++ Info",
          "description": "- name: `aTc`(ctype: `hkQuaternion`)\n - offset: ` 32`(x86)/` 32`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Quaternion"
        },
        "bTc": {
          "title": "C++ Info",
          "description": "- name: `bTc`(ctype: `hkQuaternion`)\n - offset: ` 48`(x86)/` 48`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Quaternion"
        },
        "motors": {
          "title": "C++ Info",
          "description": "- name: `motors`(ctype: `struct hkpConstraintMotor*`)\n - offset: ` 64`(x86)/` 64`(x86_64)\n - type_size: ` 12`(x86)/` 24`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          },
          "maxItems": 3,
          "minItems": 3
        },
        "pivotInA": {
          "title": "C++ Info",
          "description": "- name: `pivotInA`(ctype: `hkVector4`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "pivotInB": {
          "title": "C++ Info",
          "description": "- name: `pivotInB`(ctype: `hkVector4`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "switchBodies": {
          "title": "C++ Info",
          "description": "- name: `switchBodies`(ctype: `hkBool`)\n - offset: ` 76`(x86)/` 88`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        }
      },
      "required": [
        "pivotInA",
        "pivotInB",
        "aTc",
        "bTc",
        "motors",
        "switchBodies"
      ]
    },
    "hkpPoweredChainMapper": {
      "title": "C++ Info",
      "description": "- name: `hkpPoweredChainMapper`\n - version: `0`\n - signature: `0x7a77ef5`\n - size: ` 44`(x86)/` 64`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "chains": {
          "title": "C++ Info",
          "description": "- name: `chains`(ctype: `hkArray<hkpConstraintChainInstance*>`)\n - offset: ` 32`(x86)/` 48`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "links": {
          "title": "C++ Info",
          "description": "- name: `links`(ctype: `hkArray<struct hkpPoweredChainMapperLinkInfo>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkpPoweredChainMapperLinkInfo"
          }
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "targets": {
          "title": "C++ Info",
          "description": "- name: `targets`(ctype: `hkArray<struct hkpPoweredChainMapperTarget>`)\n - offset: ` 20`(x86)/` 32`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkpPoweredChainMapperTarget"
          }
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "links",
        "targets",
        "chains"
      ]
    },
    "hkpPoweredChainMapperLinkInfo": {
      "title": "C++ Info",
      "description": "- name: `hkpPoweredChainMapperLinkInfo`\n - version: `0`\n - signature: `0xcf071a1b`\n - size: ` 12`(x86)/` 16`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "firstTargetIdx": {
          "title": "C++ Info",
          "description": "- name: `firstTargetIdx`(ctype: `hkInt32`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "limitConstraint": {
          "title": "C++ Info",
          "description": "- name: `limitConstraint`(ctype: `struct hkpConstraintInstance*`)\n - offset: `  8`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "numTargets": {
          "title": "C++ Info",
          "description": "- name: `numTargets`(ctype: `hkInt32`)\n - offset: `  4`(x86)/`  4`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "firstTargetIdx",
        "numTargets",
        "limitConstraint"
      ]
    },
    "hkpPoweredChainMapperTarget": {
      "title": "C++ Info",
      "description": "- name: `hkpPoweredChainMapperTarget`\n - version: `0`\n - signature: `0xf651c74d`\n - size: `  8`(x86)/` 16`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "chain": {
          "title": "C++ Info",
          "description": "- name: `chain`(ctype: `struct hkpPoweredChainData*`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "infoIndex": {
          "title": "C++ Info",
          "description": "- name: `infoIndex`(ctype: `hkInt32`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "chain",
        "infoIndex"
      ]
    },
    "hkpPrismaticConstraintData": {
      "title": "C++ Info",
      "description": "- name: `hkpPrismaticConstraintData`\n - version: `0`\n - signature: `0x3996c387`\n - size: `208`(x86)/`240`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "atoms": {
          "title": "C++ Info",
          "description": "- name: `atoms`(ctype: `struct hkpPrismaticConstraintDataAtoms`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: `192`(x86)/`208`(x86_64)\n - flags: `ALIGN_16`",
          "$ref": "#/$defs/hkpPrismaticConstraintDataAtoms"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "userData",
        "atoms"
      ]
    },
    "hkpPrismaticConstraintDataAtoms": {
      "title": "C++ Info",
      "description": "- name: `hkpPrismaticConstraintDataAtoms`\n - version: `0`\n - signature: `0x7f516137`\n - size: `192`(x86)/`208`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "ang": {
          "title": "C++ Info",
          "description": "- name: `ang`(ctype: `struct hkpAngConstraintAtom`)\n - offset: `168`(x86)/`176`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "$ref": "#/$defs/hkpAngConstraintAtom"
        },
        "friction": {
          "title": "C++ Info",
          "description": "- name: `friction`(ctype: `struct hkpLinFrictionConstraintAtom`)\n - offset: `160`(x86)/`168`(x86_64)\n - type_size: `  8`(x86)/`  8`(x86_64)",
          "$ref": "#/$defs/hkpLinFrictionConstraintAtom"
        },
        "lin0": {
          "title": "C++ Info",
          "description": "- name: `lin0`(ctype: `struct hkpLinConstraintAtom`)\n - offset: `172`(x86)/`180`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "$ref": "#/$defs/hkpLinConstraintAtom"
        },
        "lin1": {
          "title": "C++ Info",
          "description": "- name: `lin1`(ctype: `struct hkpLinConstraintAtom`)\n - offset: `176`(x86)/`184`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "$ref": "#/$defs/hkpLinConstraintAtom"
        },
        "linLimit": {
          "title": "C++ Info",
          "description": "- name: `linLimit`(ctype: `struct hkpLinLimitConstraintAtom`)\n - offset: `180`(x86)/`188`(x86_64)\n - type_size: ` 12`(x86)/` 12`(x86_64)",
          "$ref": "#/$defs/hkpLinLimitConstraintAtom"
        },
        "motor": {
          "title": "C++ Info",
          "description": "- name: `motor`(ctype: `struct hkpLinMotorConstraintAtom`)\n - offset: `144`(x86)/`144`(x86_64)\n - type_size: ` 16`(x86)/` 24`(x86_64)",
          "$ref": "#/$defs/hkpLinMotorConstraintAtom"
        },
        "transforms": {
          "title": "C++ Info",
          "description": "- name: `transforms`(ctype: `struct hkpSetLocalTransformsConstraintAtom`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `144`(x86)/`144`(x86_64)",
          "$ref": "#/$defs/hkpSetLocalTransformsConstraintAtom"
        }
      },
      "required": [
        "transforms",
        "motor",
        "friction",
        "ang",
        "lin0",
        "lin1",
        "linLimit"
      ]
    },
    "hkpProjectileGun": {
      "title": "C++ Info",
      "description": "- name: `hkpProjectileGun`\n - version: `0`\n - signature: `0xb4f30148`\n - size: ` 64`(x86)/`104`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum unknown`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "destructionWorld": {
          "title": "C++ Info",
          "description": "- name: `destructionWorld`(ctype: `void*`)\n - offset: ` 60`(x86)/` 96`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "keyboardKey": {
          "title": "C++ Info",
          "description": "- name: `keyboardKey`(ctype: `enum KeyboardKey`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/KeyboardKey"
        },
        "listeners": {
          "title": "C++ Info",
          "description": "- name: `listeners`(ctype: `hkArray<void*>`)\n - offset: ` 20`(x86)/` 40`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "maxProjectiles": {
          "title": "C++ Info",
          "description": "- name: `maxProjectiles`(ctype: `hkInt32`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "projectiles": {
          "title": "C++ Info",
          "description": "- name: `projectiles`(ctype: `hkArray<void*>`)\n - offset: ` 44`(x86)/` 72`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "reload": {
          "title": "C++ Info",
          "description": "- name: `reload`(ctype: `hkReal`)\n - offset: ` 40`(x86)/` 64`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "number",
          "format": "float"
        },
        "reloadTime": {
          "title": "C++ Info",
          "description": "- name: `reloadTime`(ctype: `hkReal`)\n - offset: ` 36`(x86)/` 60`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "world": {
          "title": "C++ Info",
          "description": "- name: `world`(ctype: `void*`)\n - offset: ` 56`(x86)/` 88`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "type",
        "keyboardKey",
        "listeners",
        "maxProjectiles",
        "reloadTime",
        "reload",
        "projectiles",
        "world",
        "destructionWorld"
      ]
    },
    "hkpProperty": {
      "title": "C++ Info",
      "description": "- name: `hkpProperty`\n - version: `0`\n - signature: `0x9ce308e9`\n - size: ` 16`(x86)/` 16`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "alignmentPadding": {
          "title": "C++ Info",
          "description": "- name: `alignmentPadding`(ctype: `hkUint32`)\n - offset: `  4`(x86)/`  4`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "key": {
          "title": "C++ Info",
          "description": "- name: `key`(ctype: `hkUint32`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "value": {
          "title": "C++ Info",
          "description": "- name: `value`(ctype: `struct hkpPropertyValue`)\n - offset: `  8`(x86)/`  8`(x86_64)\n - type_size: `  8`(x86)/`  8`(x86_64)",
          "$ref": "#/$defs/hkpPropertyValue"
        }
      },
      "required": [
        "key",
        "alignmentPadding",
        "value"
      ]
    },
    "hkpPropertyValue": {
      "title": "C++ Info",
      "description": "- name: `hkpPropertyValue`\n - version: `0`\n - signature: `0xc75925aa`\n - size: `  8`(x86)/`  8`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "data": {
          "title": "C++ Info",
          "description": "- name: `data`(ctype: `hkUint64`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  8`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        }
      },
      "required": [
        "data"
      ]
    },
    "hkpPulleyConstraintAtom": {
      "title": "C++ Info",
      "description": "- name: `hkpPulleyConstraintAtom`\n - version: `0`\n - signature: `0x94a08848`\n - size: ` 64`(x86)/` 64`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum AtomType`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "$ref": "#/$defs/AtomType"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "fixedPivotAinWorld": {
          "title": "C++ Info",
          "description": "- name: `fixedPivotAinWorld`(ctype: `hkVector4`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "fixedPivotBinWorld": {
          "title": "C++ Info",
          "description": "- name: `fixedPivotBinWorld`(ctype: `hkVector4`)\n - offset: ` 32`(x86)/` 32`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "leverageOnBodyB": {
          "title": "C++ Info",
          "description": "- name: `leverageOnBodyB`(ctype: `hkReal`)\n - offset: ` 52`(x86)/` 52`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "ropeLength": {
          "title": "C++ Info",
          "description": "- name: `ropeLength`(ctype: `hkReal`)\n - offset: ` 48`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        }
      },
      "required": [
        "type",
        "fixedPivotAinWorld",
        "fixedPivotBinWorld",
        "ropeLength",
        "leverageOnBodyB"
      ]
    },
    "hkpPulleyConstraintData": {
      "title": "C++ Info",
      "description": "- name: `hkpPulleyConstraintData`\n - version: `0`\n - signature: `0x972058ed`\n - size: `128`(x86)/`144`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "atoms": {
          "title": "C++ Info",
          "description": "- name: `atoms`(ctype: `struct hkpPulleyConstraintDataAtoms`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: `112`(x86)/`112`(x86_64)\n - flags: `ALIGN_16`",
          "$ref": "#/$defs/hkpPulleyConstraintDataAtoms"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "userData",
        "atoms"
      ]
    },
    "hkpPulleyConstraintDataAtoms": {
      "title": "C++ Info",
      "description": "- name: `hkpPulleyConstraintDataAtoms`\n - version: `0`\n - signature: `0xb149e5a`\n - size: `112`(x86)/`112`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "pulley": {
          "title": "C++ Info",
          "description": "- name: `pulley`(ctype: `struct hkpPulleyConstraintAtom`)\n - offset: ` 48`(x86)/` 48`(x86_64)\n - type_size: ` 64`(x86)/` 64`(x86_64)",
          "$ref": "#/$defs/hkpPulleyConstraintAtom"
        },
        "translations": {
          "title": "C++ Info",
          "description": "- name: `translations`(ctype: `struct hkpSetLocalTranslationsConstraintAtom`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: ` 48`(x86)/` 48`(x86_64)",
          "$ref": "#/$defs/hkpSetLocalTranslationsConstraintAtom"
        }
      },
      "required": [
        "translations",
        "pulley"
      ]
    },
    "hkpRackAndPinionConstraintAtom": {
      "title": "C++ Info",
      "description": "- name: `hkpRackAndPinionConstraintAtom`\n - version: `0`\n - signature: `0x30cae006`\n - size: ` 12`(x86)/` 12`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum AtomType`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "$ref": "#/$defs/AtomType"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "isScrew": {
          "title": "C++ Info",
          "description": "- name: `isScrew`(ctype: `hkBool`)\n - offset: `  8`(x86)/`  8`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "memOffsetToInitialAngleOffset": {
          "title": "C++ Info",
          "description": "- name: `memOffsetToInitialAngleOffset`(ctype: `hkInt8`)\n - offset: `  9`(x86)/`  9`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "int8"
        },
        "memOffsetToPrevAngle": {
          "title": "C++ Info",
          "description": "- name: `memOffsetToPrevAngle`(ctype: `hkInt8`)\n - offset: ` 10`(x86)/` 10`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "int8"
        },
        "memOffsetToRevolutionCounter": {
          "title": "C++ Info",
          "description": "- name: `memOffsetToRevolutionCounter`(ctype: `hkInt8`)\n - offset: ` 11`(x86)/` 11`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "int8"
        },
        "pinionRadiusOrScrewPitch": {
          "title": "C++ Info",
          "description": "- name: `pinionRadiusOrScrewPitch`(ctype: `hkReal`)\n - offset: `  4`(x86)/`  4`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        }
      },
      "required": [
        "type",
        "pinionRadiusOrScrewPitch",
        "isScrew",
        "memOffsetToInitialAngleOffset",
        "memOffsetToPrevAngle",
        "memOffsetToRevolutionCounter"
      ]
    },
    "hkpRackAndPinionConstraintData": {
      "title": "C++ Info",
      "description": "- name: `hkpRackAndPinionConstraintData`\n - version: `0`\n - signature: `0xd180ebe0`\n - size: `176`(x86)/`192`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "atoms": {
          "title": "C++ Info",
          "description": "- name: `atoms`(ctype: `struct hkpRackAndPinionConstraintDataAtoms`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: `160`(x86)/`160`(x86_64)\n - flags: `ALIGN_16`",
          "$ref": "#/$defs/hkpRackAndPinionConstraintDataAtoms"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "userData",
        "atoms"
      ]
    },
    "hkpRackAndPinionConstraintDataAtoms": {
      "title": "C++ Info",
      "description": "- name: `hkpRackAndPinionConstraintDataAtoms`\n - version: `0`\n - signature: `0xa58a9659`\n - size: `160`(x86)/`160`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "rackAndPinion": {
          "title": "C++ Info",
          "description": "- name: `rackAndPinion`(ctype: `struct hkpRackAndPinionConstraintAtom`)\n - offset: `144`(x86)/`144`(x86_64)\n - type_size: ` 12`(x86)/` 12`(x86_64)",
          "$ref": "#/$defs/hkpRackAndPinionConstraintAtom"
        },
        "transforms": {
          "title": "C++ Info",
          "description": "- name: `transforms`(ctype: `struct hkpSetLocalTransformsConstraintAtom`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `144`(x86)/`144`(x86_64)",
          "$ref": "#/$defs/hkpSetLocalTransformsConstraintAtom"
        }
      },
      "required": [
        "transforms",
        "rackAndPinion"
      ]
    },
    "hkpRagdollConstraintData": {
      "title": "C++ Info",
      "description": "- name: `hkpRagdollConstraintData`\n - version: `0`\n - signature: `0x8fb5dd29`\n - size: `352`(x86)/`384`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "atoms": {
          "title": "C++ Info",
          "description": "- name: `atoms`(ctype: `struct hkpRagdollConstraintDataAtoms`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: `336`(x86)/`352`(x86_64)\n - flags: `ALIGN_16`",
          "$ref": "#/$defs/hkpRagdollConstraintDataAtoms"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "userData",
        "atoms"
      ]
    },
    "hkpRagdollConstraintDataAtoms": {
      "title": "C++ Info",
      "description": "- name: `hkpRagdollConstraintDataAtoms`\n - version: `1`\n - signature: `0xeed76b00`\n - size: `336`(x86)/`352`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "angFriction": {
          "title": "C++ Info",
          "description": "- name: `angFriction`(ctype: `struct hkpAngFrictionConstraintAtom`)\n - offset: `240`(x86)/`256`(x86_64)\n - type_size: ` 12`(x86)/` 12`(x86_64)",
          "$ref": "#/$defs/hkpAngFrictionConstraintAtom"
        },
        "ballSocket": {
          "title": "C++ Info",
          "description": "- name: `ballSocket`(ctype: `struct hkpBallSocketConstraintAtom`)\n - offset: `312`(x86)/`328`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/hkpBallSocketConstraintAtom"
        },
        "coneLimit": {
          "title": "C++ Info",
          "description": "- name: `coneLimit`(ctype: `struct hkpConeLimitConstraintAtom`)\n - offset: `272`(x86)/`288`(x86_64)\n - type_size: ` 20`(x86)/` 20`(x86_64)",
          "$ref": "#/$defs/hkpConeLimitConstraintAtom"
        },
        "planesLimit": {
          "title": "C++ Info",
          "description": "- name: `planesLimit`(ctype: `struct hkpConeLimitConstraintAtom`)\n - offset: `292`(x86)/`308`(x86_64)\n - type_size: ` 20`(x86)/` 20`(x86_64)",
          "$ref": "#/$defs/hkpConeLimitConstraintAtom"
        },
        "ragdollMotors": {
          "title": "C++ Info",
          "description": "- name: `ragdollMotors`(ctype: `struct hkpRagdollMotorConstraintAtom`)\n - offset: `160`(x86)/`160`(x86_64)\n - type_size: ` 80`(x86)/` 96`(x86_64)",
          "$ref": "#/$defs/hkpRagdollMotorConstraintAtom"
        },
        "setupStabilization": {
          "title": "C++ Info",
          "description": "- name: `setupStabilization`(ctype: `struct hkpSetupStabilizationAtom`)\n - offset: `144`(x86)/`144`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/hkpSetupStabilizationAtom"
        },
        "transforms": {
          "title": "C++ Info",
          "description": "- name: `transforms`(ctype: `struct hkpSetLocalTransformsConstraintAtom`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `144`(x86)/`144`(x86_64)",
          "$ref": "#/$defs/hkpSetLocalTransformsConstraintAtom"
        },
        "twistLimit": {
          "title": "C++ Info",
          "description": "- name: `twistLimit`(ctype: `struct hkpTwistLimitConstraintAtom`)\n - offset: `252`(x86)/`268`(x86_64)\n - type_size: ` 20`(x86)/` 20`(x86_64)",
          "$ref": "#/$defs/hkpTwistLimitConstraintAtom"
        }
      },
      "required": [
        "transforms",
        "setupStabilization",
        "ragdollMotors",
        "angFriction",
        "twistLimit",
        "coneLimit",
        "planesLimit",
        "ballSocket"
      ]
    },
    "hkpRagdollLimitsData": {
      "title": "C++ Info",
      "description": "- name: `hkpRagdollLimitsData`\n - version: `0`\n - signature: `0xcbdb44aa`\n - size: `192`(x86)/`208`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "atoms": {
          "title": "C++ Info",
          "description": "- name: `atoms`(ctype: `struct hkpRagdollLimitsDataAtoms`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: `176`(x86)/`176`(x86_64)\n - flags: `ALIGN_16`",
          "$ref": "#/$defs/hkpRagdollLimitsDataAtoms"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "userData",
        "atoms"
      ]
    },
    "hkpRagdollLimitsDataAtoms": {
      "title": "C++ Info",
      "description": "- name: `hkpRagdollLimitsDataAtoms`\n - version: `0`\n - signature: `0x82b894c3`\n - size: `176`(x86)/`176`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "coneLimit": {
          "title": "C++ Info",
          "description": "- name: `coneLimit`(ctype: `struct hkpConeLimitConstraintAtom`)\n - offset: `132`(x86)/`132`(x86_64)\n - type_size: ` 20`(x86)/` 20`(x86_64)",
          "$ref": "#/$defs/hkpConeLimitConstraintAtom"
        },
        "planesLimit": {
          "title": "C++ Info",
          "description": "- name: `planesLimit`(ctype: `struct hkpConeLimitConstraintAtom`)\n - offset: `152`(x86)/`152`(x86_64)\n - type_size: ` 20`(x86)/` 20`(x86_64)",
          "$ref": "#/$defs/hkpConeLimitConstraintAtom"
        },
        "rotations": {
          "title": "C++ Info",
          "description": "- name: `rotations`(ctype: `struct hkpSetLocalRotationsConstraintAtom`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `112`(x86)/`112`(x86_64)",
          "$ref": "#/$defs/hkpSetLocalRotationsConstraintAtom"
        },
        "twistLimit": {
          "title": "C++ Info",
          "description": "- name: `twistLimit`(ctype: `struct hkpTwistLimitConstraintAtom`)\n - offset: `112`(x86)/`112`(x86_64)\n - type_size: ` 20`(x86)/` 20`(x86_64)",
          "$ref": "#/$defs/hkpTwistLimitConstraintAtom"
        }
      },
      "required": [
        "rotations",
        "twistLimit",
        "coneLimit",
        "planesLimit"
      ]
    },
    "hkpRagdollMotorConstraintAtom": {
      "title": "C++ Info",
      "description": "- name: `hkpRagdollMotorConstraintAtom`\n - version: `0`\n - signature: `0x71013826`\n - size: ` 80`(x86)/` 96`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum AtomType`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "$ref": "#/$defs/AtomType"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "initializedOffset": {
          "title": "C++ Info",
          "description": "- name: `initializedOffset`(ctype: `hkInt16`)\n - offset: `  4`(x86)/`  4`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "int16"
        },
        "isEnabled": {
          "title": "C++ Info",
          "description": "- name: `isEnabled`(ctype: `hkBool`)\n - offset: `  2`(x86)/`  2`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "motors": {
          "title": "C++ Info",
          "description": "- name: `motors`(ctype: `struct hkpConstraintMotor*`)\n - offset: ` 64`(x86)/` 64`(x86_64)\n - type_size: ` 12`(x86)/` 24`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          },
          "maxItems": 3,
          "minItems": 3
        },
        "previousTargetAnglesOffset": {
          "title": "C++ Info",
          "description": "- name: `previousTargetAnglesOffset`(ctype: `hkInt16`)\n - offset: `  6`(x86)/`  6`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "int16"
        },
        "target_bRca": {
          "title": "C++ Info",
          "description": "- name: `target_bRca`(ctype: `hkMatrix3`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: ` 48`(x86)/` 48`(x86_64)",
          "$ref": "#/$defs/Matrix3"
        }
      },
      "required": [
        "type",
        "isEnabled",
        "initializedOffset",
        "previousTargetAnglesOffset",
        "target_bRca",
        "motors"
      ]
    },
    "hkpRayCollidableFilter": {
      "title": "C++ Info",
      "description": "- name: `hkpRayCollidableFilter`\n - version: `0`\n - signature: `0xe0708a00`\n - size: `  4`(x86)/`  8`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        }
      }
    },
    "hkpRayShapeCollectionFilter": {
      "title": "C++ Info",
      "description": "- name: `hkpRayShapeCollectionFilter`\n - version: `0`\n - signature: `0xe0708a00`\n - size: `  4`(x86)/`  8`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        }
      }
    },
    "hkpRejectChassisListener": {
      "title": "C++ Info",
      "description": "- name: `hkpRejectChassisListener`\n - version: `1`\n - signature: `0xc4fa16c9`\n - size: ` 16`(x86)/` 24`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "chassis": {
          "title": "C++ Info",
          "description": "- name: `chassis`(ctype: `void*`)\n - offset: ` 12`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "chassis"
      ]
    },
    "hkpRemoveTerminalsMoppModifier": {
      "title": "C++ Info",
      "description": "- name: `hkpRemoveTerminalsMoppModifier`\n - version: `0`\n - signature: `0x91367f03`\n - size: ` 28`(x86)/` 48`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "removeInfo": {
          "title": "C++ Info",
          "description": "- name: `removeInfo`(ctype: `hkArray<hkUint32>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          }
        },
        "tempShapesToRemove": {
          "title": "C++ Info",
          "description": "- name: `tempShapesToRemove`(ctype: `void*`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "removeInfo",
        "tempShapesToRemove"
      ]
    },
    "hkpReorientAction": {
      "title": "C++ Info",
      "description": "- name: `hkpReorientAction`\n - version: `0`\n - signature: `0x2dc0ec6a`\n - size: ` 80`(x86)/`112`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "damping": {
          "title": "C++ Info",
          "description": "- name: `damping`(ctype: `hkReal`)\n - offset: ` 68`(x86)/`100`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "entity": {
          "title": "C++ Info",
          "description": "- name: `entity`(ctype: `struct hkpEntity*`)\n - offset: ` 24`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "island": {
          "title": "C++ Info",
          "description": "- name: `island`(ctype: `void*`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 20`(x86)/` 40`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "rotationAxis": {
          "title": "C++ Info",
          "description": "- name: `rotationAxis`(ctype: `hkVector4`)\n - offset: ` 32`(x86)/` 64`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "strength": {
          "title": "C++ Info",
          "description": "- name: `strength`(ctype: `hkReal`)\n - offset: ` 64`(x86)/` 96`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "upAxis": {
          "title": "C++ Info",
          "description": "- name: `upAxis`(ctype: `hkVector4`)\n - offset: ` 48`(x86)/` 80`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "world": {
          "title": "C++ Info",
          "description": "- name: `world`(ctype: `void*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "world",
        "island",
        "userData",
        "entity",
        "rotationAxis",
        "upAxis",
        "strength",
        "damping"
      ]
    },
    "hkpRigidBody": {
      "title": "C++ Info",
      "description": "- name: `hkpRigidBody`\n - version: `0`\n - signature: `0x75f8d805`\n - size: `544`(x86)/`720`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "properties": {
          "title": "C++ Info",
          "description": "- name: `properties`(ctype: `hkArray<struct hkpProperty>`)\n - offset: `124`(x86)/`184`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkpProperty"
          }
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "actions": {
          "title": "C++ Info",
          "description": "- name: `actions`(ctype: `struct hkpEntitySmallArraySerializeOverrideType`)\n - offset: `520`(x86)/`672`(x86_64)\n - type_size: `  8`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "$ref": "#/$defs/hkpEntitySmallArraySerializeOverrideType"
        },
        "autoRemoveLevel": {
          "title": "C++ Info",
          "description": "- name: `autoRemoveLevel`(ctype: `hkInt8`)\n - offset: `208`(x86)/`312`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "int8"
        },
        "breakableBody": {
          "title": "C++ Info",
          "description": "- name: `breakableBody`(ctype: `void*`)\n - offset: `160`(x86)/`240`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "collidable": {
          "title": "C++ Info",
          "description": "- name: `collidable`(ctype: `struct hkpLinkedCollidable`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: ` 92`(x86)/`128`(x86_64)",
          "$ref": "#/$defs/hkpLinkedCollidable"
        },
        "constraintRuntime": {
          "title": "C++ Info",
          "description": "- name: `constraintRuntime`(ctype: `hkArray<hkUint8>`)\n - offset: `192`(x86)/`288`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint8",
            "minimum": 0
          }
        },
        "constraintsMaster": {
          "title": "C++ Info",
          "description": "- name: `constraintsMaster`(ctype: `struct hkpEntitySmallArraySerializeOverrideType`)\n - offset: `172`(x86)/`256`(x86_64)\n - type_size: `  8`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "$ref": "#/$defs/hkpEntitySmallArraySerializeOverrideType"
        },
        "constraintsSlave": {
          "title": "C++ Info",
          "description": "- name: `constraintsSlave`(ctype: `hkArray<hkpConstraintInstance*>`)\n - offset: `180`(x86)/`272`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `NOT_OWNED|SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "contactListeners": {
          "title": "C++ Info",
          "description": "- name: `contactListeners`(ctype: `struct hkpEntitySmallArraySerializeOverrideType`)\n - offset: `512`(x86)/`656`(x86_64)\n - type_size: `  8`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "$ref": "#/$defs/hkpEntitySmallArraySerializeOverrideType"
        },
        "contactPointCallbackDelay": {
          "title": "C++ Info",
          "description": "- name: `contactPointCallbackDelay`(ctype: `hkUint16`)\n - offset: `170`(x86)/`254`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "damageMultiplier": {
          "title": "C++ Info",
          "description": "- name: `damageMultiplier`(ctype: `hkReal`)\n - offset: `156`(x86)/`232`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "extendedListeners": {
          "title": "C++ Info",
          "description": "- name: `extendedListeners`(ctype: `struct hkpEntityExtendedListeners*`)\n - offset: `532`(x86)/`696`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "limitContactImpulseUtilAndFlag": {
          "title": "C++ Info",
          "description": "- name: `limitContactImpulseUtilAndFlag`(ctype: `void*`)\n - offset: `152`(x86)/`224`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "localFrame": {
          "title": "C++ Info",
          "description": "- name: `localFrame`(ctype: `struct hkLocalFrame*`)\n - offset: `528`(x86)/`688`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "material": {
          "title": "C++ Info",
          "description": "- name: `material`(ctype: `struct hkpMaterial`)\n - offset: `140`(x86)/`208`(x86_64)\n - type_size: ` 12`(x86)/` 12`(x86_64)",
          "$ref": "#/$defs/hkpMaterial"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "motion": {
          "title": "C++ Info",
          "description": "- name: `motion`(ctype: `struct hkpMaxSizeMotion`)\n - offset: `224`(x86)/`336`(x86_64)\n - type_size: `288`(x86)/`320`(x86_64)",
          "$ref": "#/$defs/hkpMaxSizeMotion"
        },
        "multiThreadCheck": {
          "title": "C++ Info",
          "description": "- name: `multiThreadCheck`(ctype: `struct hkMultiThreadCheck`)\n - offset: `108`(x86)/`160`(x86_64)\n - type_size: ` 12`(x86)/` 12`(x86_64)",
          "$ref": "#/$defs/hkMultiThreadCheck"
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: `120`(x86)/`176`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "npData": {
          "title": "C++ Info",
          "description": "- name: `npData`(ctype: `hkUint32`)\n - offset: `536`(x86)/`704`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "numShapeKeysInContactPointProperties": {
          "title": "C++ Info",
          "description": "- name: `numShapeKeysInContactPointProperties`(ctype: `hkUint8`)\n - offset: `209`(x86)/`313`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "responseModifierFlags": {
          "title": "C++ Info",
          "description": "- name: `responseModifierFlags`(ctype: `hkUint8`)\n - offset: `210`(x86)/`314`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        },
        "simulationIsland": {
          "title": "C++ Info",
          "description": "- name: `simulationIsland`(ctype: `void*`)\n - offset: `204`(x86)/`304`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "solverData": {
          "title": "C++ Info",
          "description": "- name: `solverData`(ctype: `hkUint32`)\n - offset: `164`(x86)/`248`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "spuCollisionCallback": {
          "title": "C++ Info",
          "description": "- name: `spuCollisionCallback`(ctype: `struct hkpEntitySpuCollisionCallback`)\n - offset: `216`(x86)/`320`(x86_64)\n - type_size: `  8`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/hkpEntitySpuCollisionCallback"
        },
        "storageIndex": {
          "title": "C++ Info",
          "description": "- name: `storageIndex`(ctype: `hkUint16`)\n - offset: `168`(x86)/`252`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "treeData": {
          "title": "C++ Info",
          "description": "- name: `treeData`(ctype: `void*`)\n - offset: `136`(x86)/`200`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "uid": {
          "title": "C++ Info",
          "description": "- name: `uid`(ctype: `hkUint32`)\n - offset: `212`(x86)/`316`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "world": {
          "title": "C++ Info",
          "description": "- name: `world`(ctype: `void*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "world",
        "userData",
        "collidable",
        "multiThreadCheck",
        "properties",
        "treeData",
        "material",
        "limitContactImpulseUtilAndFlag",
        "damageMultiplier",
        "breakableBody",
        "solverData",
        "storageIndex",
        "contactPointCallbackDelay",
        "constraintsMaster",
        "constraintsSlave",
        "constraintRuntime",
        "simulationIsland",
        "autoRemoveLevel",
        "numShapeKeysInContactPointProperties",
        "responseModifierFlags",
        "uid",
        "spuCollisionCallback",
        "motion",
        "contactListeners",
        "actions",
        "localFrame",
        "extendedListeners",
        "npData"
      ]
    },
    "hkpRotationalConstraintData": {
      "title": "C++ Info",
      "description": "- name: `hkpRotationalConstraintData`\n - version: `0`\n - signature: `0x74867d9e`\n - size: `144`(x86)/`160`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "atoms": {
          "title": "C++ Info",
          "description": "- name: `atoms`(ctype: `struct hkpRotationalConstraintDataAtoms`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: `128`(x86)/`128`(x86_64)\n - flags: `ALIGN_16`",
          "$ref": "#/$defs/hkpRotationalConstraintDataAtoms"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "userData",
        "atoms"
      ]
    },
    "hkpRotationalConstraintDataAtoms": {
      "title": "C++ Info",
      "description": "- name: `hkpRotationalConstraintDataAtoms`\n - version: `0`\n - signature: `0xa0c64586`\n - size: `128`(x86)/`128`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "ang": {
          "title": "C++ Info",
          "description": "- name: `ang`(ctype: `struct hkpAngConstraintAtom`)\n - offset: `112`(x86)/`112`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "$ref": "#/$defs/hkpAngConstraintAtom"
        },
        "rotations": {
          "title": "C++ Info",
          "description": "- name: `rotations`(ctype: `struct hkpSetLocalRotationsConstraintAtom`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `112`(x86)/`112`(x86_64)",
          "$ref": "#/$defs/hkpSetLocalRotationsConstraintAtom"
        }
      },
      "required": [
        "rotations",
        "ang"
      ]
    },
    "hkpSampledHeightFieldShape": {
      "title": "C++ Info",
      "description": "- name: `hkpSampledHeightFieldShape`\n - version: `0`\n - signature: `0x11213421`\n - size: ` 96`(x86)/`112`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum unknown`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "extents": {
          "title": "C++ Info",
          "description": "- name: `extents`(ctype: `hkVector4`)\n - offset: ` 80`(x86)/` 96`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "floatToIntOffsetFloorCorrected": {
          "title": "C++ Info",
          "description": "- name: `floatToIntOffsetFloorCorrected`(ctype: `hkVector4`)\n - offset: ` 64`(x86)/` 80`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "floatToIntScale": {
          "title": "C++ Info",
          "description": "- name: `floatToIntScale`(ctype: `hkVector4`)\n - offset: ` 48`(x86)/` 64`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "heightCenter": {
          "title": "C++ Info",
          "description": "- name: `heightCenter`(ctype: `hkReal`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "heightfieldType": {
          "title": "C++ Info",
          "description": "- name: `heightfieldType`(ctype: `enum HeightFieldType`)\n - offset: ` 29`(x86)/` 45`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/HeightFieldType"
        },
        "intToFloatScale": {
          "title": "C++ Info",
          "description": "- name: `intToFloatScale`(ctype: `hkVector4`)\n - offset: ` 32`(x86)/` 48`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "useProjectionBasedHeight": {
          "title": "C++ Info",
          "description": "- name: `useProjectionBasedHeight`(ctype: `hkBool`)\n - offset: ` 28`(x86)/` 44`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "xRes": {
          "title": "C++ Info",
          "description": "- name: `xRes`(ctype: `hkInt32`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "zRes": {
          "title": "C++ Info",
          "description": "- name: `zRes`(ctype: `hkInt32`)\n - offset: ` 20`(x86)/` 36`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "userData",
        "type",
        "xRes",
        "zRes",
        "heightCenter",
        "useProjectionBasedHeight",
        "heightfieldType",
        "intToFloatScale",
        "floatToIntScale",
        "floatToIntOffsetFloorCorrected",
        "extents"
      ]
    },
    "hkpSerializedAgentNnEntry": {
      "title": "C++ Info",
      "description": "- name: `hkpSerializedAgentNnEntry`\n - version: `0`\n - signature: `0x49ec7de3`\n - size: `320`(x86)/`368`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "agentType": {
          "title": "C++ Info",
          "description": "- name: `agentType`(ctype: `enum SerializedAgentType`)\n - offset: ` 25`(x86)/` 49`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/SerializedAgentType"
        },
        "atom": {
          "title": "C++ Info",
          "description": "- name: `atom`(ctype: `struct hkpSimpleContactConstraintAtom`)\n - offset: ` 32`(x86)/` 64`(x86_64)\n - type_size: ` 48`(x86)/` 48`(x86_64)",
          "$ref": "#/$defs/hkpSimpleContactConstraintAtom"
        },
        "bodyA": {
          "title": "C++ Info",
          "description": "- name: `bodyA`(ctype: `struct hkpEntity*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "bodyAId": {
          "title": "C++ Info",
          "description": "- name: `bodyAId`(ctype: `hkUlong`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "bodyB": {
          "title": "C++ Info",
          "description": "- name: `bodyB`(ctype: `struct hkpEntity*`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "bodyBId": {
          "title": "C++ Info",
          "description": "- name: `bodyBId`(ctype: `hkUlong`)\n - offset: ` 20`(x86)/` 40`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "contactPoints": {
          "title": "C++ Info",
          "description": "- name: `contactPoints`(ctype: `hkArray<struct hkContactPoint>`)\n - offset: ` 92`(x86)/`128`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkContactPoint"
          }
        },
        "cpIdMgr": {
          "title": "C++ Info",
          "description": "- name: `cpIdMgr`(ctype: `hkArray<hkUint8>`)\n - offset: `104`(x86)/`144`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint8",
            "minimum": 0
          }
        },
        "endianCheckBuffer": {
          "title": "C++ Info",
          "description": "- name: `endianCheckBuffer`(ctype: `hkUint8[4]`)\n - offset: `300`(x86)/`352`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint8",
            "minimum": 0
          },
          "maxItems": 4,
          "minItems": 4
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "nnEntryData": {
          "title": "C++ Info",
          "description": "- name: `nnEntryData`(ctype: `hkUint8[160]`)\n - offset: `116`(x86)/`160`(x86_64)\n - type_size: `160`(x86)/`160`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "propertiesStream": {
          "title": "C++ Info",
          "description": "- name: `propertiesStream`(ctype: `hkArray<hkUint8>`)\n - offset: ` 80`(x86)/`112`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint8",
            "minimum": 0
          }
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "trackInfo": {
          "title": "C++ Info",
          "description": "- name: `trackInfo`(ctype: `struct hkpSerializedTrack1nInfo`)\n - offset: `276`(x86)/`320`(x86_64)\n - type_size: ` 24`(x86)/` 32`(x86_64)",
          "$ref": "#/$defs/hkpSerializedTrack1nInfo"
        },
        "useEntityIds": {
          "title": "C++ Info",
          "description": "- name: `useEntityIds`(ctype: `hkBool`)\n - offset: ` 24`(x86)/` 48`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "version": {
          "title": "C++ Info",
          "description": "- name: `version`(ctype: `hkUint32`)\n - offset: `304`(x86)/`356`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "bodyA",
        "bodyB",
        "bodyAId",
        "bodyBId",
        "useEntityIds",
        "agentType",
        "atom",
        "propertiesStream",
        "contactPoints",
        "cpIdMgr",
        "nnEntryData",
        "trackInfo",
        "endianCheckBuffer",
        "version"
      ]
    },
    "hkpSerializedDisplayMarker": {
      "title": "C++ Info",
      "description": "- name: `hkpSerializedDisplayMarker`\n - version: `0`\n - signature: `0xd7c8c54f`\n - size: ` 80`(x86)/` 80`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "transform": {
          "title": "C++ Info",
          "description": "- name: `transform`(ctype: `hkTransform`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: ` 64`(x86)/` 64`(x86_64)",
          "$ref": "#/$defs/Transform"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "transform"
      ]
    },
    "hkpSerializedDisplayMarkerList": {
      "title": "C++ Info",
      "description": "- name: `hkpSerializedDisplayMarkerList`\n - version: `0`\n - signature: `0x54785c77`\n - size: ` 20`(x86)/` 32`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "markers": {
          "title": "C++ Info",
          "description": "- name: `markers`(ctype: `hkArray<hkpSerializedDisplayMarker*>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "markers"
      ]
    },
    "hkpSerializedDisplayRbTransforms": {
      "title": "C++ Info",
      "description": "- name: `hkpSerializedDisplayRbTransforms`\n - version: `0`\n - signature: `0xc18650ac`\n - size: ` 20`(x86)/` 32`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "transforms": {
          "title": "C++ Info",
          "description": "- name: `transforms`(ctype: `hkArray<struct hkpSerializedDisplayRbTransformsDisplayTransformPair>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkpSerializedDisplayRbTransformsDisplayTransformPair"
          }
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "transforms"
      ]
    },
    "hkpSerializedDisplayRbTransformsDisplayTransformPair": {
      "title": "C++ Info",
      "description": "- name: `hkpSerializedDisplayRbTransformsDisplayTransformPair`\n - version: `0`\n - signature: `0x94ac5bec`\n - size: ` 80`(x86)/` 80`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "localToDisplay": {
          "title": "C++ Info",
          "description": "- name: `localToDisplay`(ctype: `hkTransform`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: ` 64`(x86)/` 64`(x86_64)",
          "$ref": "#/$defs/Transform"
        },
        "rb": {
          "title": "C++ Info",
          "description": "- name: `rb`(ctype: `struct hkpRigidBody*`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "rb",
        "localToDisplay"
      ]
    },
    "hkpSerializedSubTrack1nInfo": {
      "title": "C++ Info",
      "description": "- name: `hkpSerializedSubTrack1nInfo`\n - version: `0`\n - signature: `0x10155a`\n - size: ` 32`(x86)/` 40`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "offsetInSector": {
          "title": "C++ Info",
          "description": "- name: `offsetInSector`(ctype: `hkInt32`)\n - offset: ` 28`(x86)/` 36`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "sectorIndex": {
          "title": "C++ Info",
          "description": "- name: `sectorIndex`(ctype: `hkInt32`)\n - offset: ` 24`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "sectors": {
          "title": "C++ Info",
          "description": "- name: `sectors`(ctype: `hkArray<hkpAgent1nSector*>`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "subTracks": {
          "title": "C++ Info",
          "description": "- name: `subTracks`(ctype: `hkArray<hkpSerializedSubTrack1nInfo*>`)\n - offset: ` 12`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "sectors",
        "subTracks",
        "sectorIndex",
        "offsetInSector"
      ]
    },
    "hkpSerializedTrack1nInfo": {
      "title": "C++ Info",
      "description": "- name: `hkpSerializedTrack1nInfo`\n - version: `0`\n - signature: `0xf12d48d9`\n - size: ` 24`(x86)/` 32`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "sectors": {
          "title": "C++ Info",
          "description": "- name: `sectors`(ctype: `hkArray<hkpAgent1nSector*>`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "subTracks": {
          "title": "C++ Info",
          "description": "- name: `subTracks`(ctype: `hkArray<hkpSerializedSubTrack1nInfo*>`)\n - offset: ` 12`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "sectors",
        "subTracks"
      ]
    },
    "hkpSetLocalRotationsConstraintAtom": {
      "title": "C++ Info",
      "description": "- name: `hkpSetLocalRotationsConstraintAtom`\n - version: `0`\n - signature: `0xf81db8e`\n - size: `112`(x86)/`112`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum AtomType`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "$ref": "#/$defs/AtomType"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "rotationA": {
          "title": "C++ Info",
          "description": "- name: `rotationA`(ctype: `hkRotation`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: ` 48`(x86)/` 48`(x86_64)",
          "$ref": "#/$defs/Rotation"
        },
        "rotationB": {
          "title": "C++ Info",
          "description": "- name: `rotationB`(ctype: `hkRotation`)\n - offset: ` 64`(x86)/` 64`(x86_64)\n - type_size: ` 48`(x86)/` 48`(x86_64)",
          "$ref": "#/$defs/Rotation"
        }
      },
      "required": [
        "type",
        "rotationA",
        "rotationB"
      ]
    },
    "hkpSetLocalTransformsConstraintAtom": {
      "title": "C++ Info",
      "description": "- name: `hkpSetLocalTransformsConstraintAtom`\n - version: `0`\n - signature: `0x6e2a5198`\n - size: `144`(x86)/`144`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum AtomType`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "$ref": "#/$defs/AtomType"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "transformA": {
          "title": "C++ Info",
          "description": "- name: `transformA`(ctype: `hkTransform`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: ` 64`(x86)/` 64`(x86_64)",
          "$ref": "#/$defs/Transform"
        },
        "transformB": {
          "title": "C++ Info",
          "description": "- name: `transformB`(ctype: `hkTransform`)\n - offset: ` 80`(x86)/` 80`(x86_64)\n - type_size: ` 64`(x86)/` 64`(x86_64)",
          "$ref": "#/$defs/Transform"
        }
      },
      "required": [
        "type",
        "transformA",
        "transformB"
      ]
    },
    "hkpSetLocalTranslationsConstraintAtom": {
      "title": "C++ Info",
      "description": "- name: `hkpSetLocalTranslationsConstraintAtom`\n - version: `0`\n - signature: `0x5cbfcf4a`\n - size: ` 48`(x86)/` 48`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum AtomType`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "$ref": "#/$defs/AtomType"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "translationA": {
          "title": "C++ Info",
          "description": "- name: `translationA`(ctype: `hkVector4`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "translationB": {
          "title": "C++ Info",
          "description": "- name: `translationB`(ctype: `hkVector4`)\n - offset: ` 32`(x86)/` 32`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        }
      },
      "required": [
        "type",
        "translationA",
        "translationB"
      ]
    },
    "hkpSetupStabilizationAtom": {
      "title": "C++ Info",
      "description": "- name: `hkpSetupStabilizationAtom`\n - version: `1`\n - signature: `0xf05d137e`\n - size: ` 16`(x86)/` 16`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum AtomType`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "$ref": "#/$defs/AtomType"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "enabled": {
          "title": "C++ Info",
          "description": "- name: `enabled`(ctype: `hkBool`)\n - offset: `  2`(x86)/`  2`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "maxAngle": {
          "title": "C++ Info",
          "description": "- name: `maxAngle`(ctype: `hkReal`)\n - offset: `  4`(x86)/`  4`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "padding": {
          "title": "C++ Info",
          "description": "- name: `padding`(ctype: `hkUint8[8]`)\n - offset: `  8`(x86)/`  8`(x86_64)\n - type_size: `  8`(x86)/`  8`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint8",
            "minimum": 0
          },
          "maxItems": 8,
          "minItems": 8
        }
      },
      "required": [
        "type",
        "enabled",
        "maxAngle",
        "padding"
      ]
    },
    "hkpShape": {
      "title": "C++ Info",
      "description": "- name: `hkpShape`\n - version: `0`\n - signature: `0x666490a1`\n - size: ` 16`(x86)/` 32`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum unknown`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "userData",
        "type"
      ]
    },
    "hkpShapeCollection": {
      "title": "C++ Info",
      "description": "- name: `hkpShapeCollection`\n - version: `0`\n - signature: `0xe8c3991d`\n - size: ` 24`(x86)/` 48`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum unknown`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "collectionType": {
          "title": "C++ Info",
          "description": "- name: `collectionType`(ctype: `enum CollectionType`)\n - offset: ` 21`(x86)/` 41`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/CollectionType"
        },
        "disableWelding": {
          "title": "C++ Info",
          "description": "- name: `disableWelding`(ctype: `hkBool`)\n - offset: ` 20`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "userData",
        "type",
        "disableWelding",
        "collectionType"
      ]
    },
    "hkpShapeCollectionFilter": {
      "title": "C++ Info",
      "description": "- name: `hkpShapeCollectionFilter`\n - version: `0`\n - signature: `0xe0708a00`\n - size: `  4`(x86)/`  8`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        }
      }
    },
    "hkpShapeContainer": {
      "title": "C++ Info",
      "description": "- name: `hkpShapeContainer`\n - version: `0`\n - signature: `0xe0708a00`\n - size: `  4`(x86)/`  8`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        }
      }
    },
    "hkpShapeInfo": {
      "title": "C++ Info",
      "description": "- name: `hkpShapeInfo`\n - version: `0`\n - signature: `0xea7f1d08`\n - size: `112`(x86)/`128`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "childShapeNames": {
          "title": "C++ Info",
          "description": "- name: `childShapeNames`(ctype: `hkArray<hkStringPtr>`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "childTransforms": {
          "title": "C++ Info",
          "description": "- name: `childTransforms`(ctype: `hkArray<hkTransform>`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/Transform"
          }
        },
        "hkdShapesCollected": {
          "title": "C++ Info",
          "description": "- name: `hkdShapesCollected`(ctype: `hkBool`)\n - offset: ` 13`(x86)/` 25`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "isHierarchicalCompound": {
          "title": "C++ Info",
          "description": "- name: `isHierarchicalCompound`(ctype: `hkBool`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "shape": {
          "title": "C++ Info",
          "description": "- name: `shape`(ctype: `struct hkpShape*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "transform": {
          "title": "C++ Info",
          "description": "- name: `transform`(ctype: `hkTransform`)\n - offset: ` 48`(x86)/` 64`(x86_64)\n - type_size: ` 64`(x86)/` 64`(x86_64)",
          "$ref": "#/$defs/Transform"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "shape",
        "isHierarchicalCompound",
        "hkdShapesCollected",
        "childShapeNames",
        "childTransforms",
        "transform"
      ]
    },
    "hkpShapeModifier": {
      "title": "C++ Info",
      "description": "- name: `hkpShapeModifier`\n - version: `0`\n - signature: `0xda8c7d7d`\n - size: `  8`(x86)/` 16`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount"
      ]
    },
    "hkpShapePhantom": {
      "title": "C++ Info",
      "description": "- name: `hkpShapePhantom`\n - version: `0`\n - signature: `0xcb22fbcd`\n - size: `352`(x86)/`416`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "properties": {
          "title": "C++ Info",
          "description": "- name: `properties`(ctype: `hkArray<struct hkpProperty>`)\n - offset: `124`(x86)/`184`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkpProperty"
          }
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "collidable": {
          "title": "C++ Info",
          "description": "- name: `collidable`(ctype: `struct hkpLinkedCollidable`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: ` 92`(x86)/`128`(x86_64)",
          "$ref": "#/$defs/hkpLinkedCollidable"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "motionState": {
          "title": "C++ Info",
          "description": "- name: `motionState`(ctype: `struct hkMotionState`)\n - offset: `176`(x86)/`240`(x86_64)\n - type_size: `176`(x86)/`176`(x86_64)",
          "$ref": "#/$defs/hkMotionState"
        },
        "multiThreadCheck": {
          "title": "C++ Info",
          "description": "- name: `multiThreadCheck`(ctype: `struct hkMultiThreadCheck`)\n - offset: `108`(x86)/`160`(x86_64)\n - type_size: ` 12`(x86)/` 12`(x86_64)",
          "$ref": "#/$defs/hkMultiThreadCheck"
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: `120`(x86)/`176`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "overlapListeners": {
          "title": "C++ Info",
          "description": "- name: `overlapListeners`(ctype: `hkArray<void*>`)\n - offset: `140`(x86)/`208`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "phantomListeners": {
          "title": "C++ Info",
          "description": "- name: `phantomListeners`(ctype: `hkArray<void*>`)\n - offset: `152`(x86)/`224`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "treeData": {
          "title": "C++ Info",
          "description": "- name: `treeData`(ctype: `void*`)\n - offset: `136`(x86)/`200`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "world": {
          "title": "C++ Info",
          "description": "- name: `world`(ctype: `void*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "world",
        "userData",
        "collidable",
        "multiThreadCheck",
        "properties",
        "treeData",
        "overlapListeners",
        "phantomListeners",
        "motionState"
      ]
    },
    "hkpSimpleContactConstraintAtom": {
      "title": "C++ Info",
      "description": "- name: `hkpSimpleContactConstraintAtom`\n - version: `0`\n - signature: `0x920df11a`\n - size: ` 48`(x86)/` 48`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum AtomType`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "$ref": "#/$defs/AtomType"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "contactPointPropertiesStriding": {
          "title": "C++ Info",
          "description": "- name: `contactPointPropertiesStriding`(ctype: `hkUint8`)\n - offset: ` 10`(x86)/` 10`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        },
        "info": {
          "title": "C++ Info",
          "description": "- name: `info`(ctype: `struct hkpSimpleContactConstraintDataInfo`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: ` 32`(x86)/` 32`(x86_64)\n - flags: `ALIGN_16`",
          "$ref": "#/$defs/hkpSimpleContactConstraintDataInfo"
        },
        "maxNumContactPoints": {
          "title": "C++ Info",
          "description": "- name: `maxNumContactPoints`(ctype: `hkUint16`)\n - offset: ` 12`(x86)/` 12`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "numContactPoints": {
          "title": "C++ Info",
          "description": "- name: `numContactPoints`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  4`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "numReservedContactPoints": {
          "title": "C++ Info",
          "description": "- name: `numReservedContactPoints`(ctype: `hkUint16`)\n - offset: `  6`(x86)/`  6`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "numUserDatasForBodyA": {
          "title": "C++ Info",
          "description": "- name: `numUserDatasForBodyA`(ctype: `hkUint8`)\n - offset: `  8`(x86)/`  8`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        },
        "numUserDatasForBodyB": {
          "title": "C++ Info",
          "description": "- name: `numUserDatasForBodyB`(ctype: `hkUint8`)\n - offset: `  9`(x86)/`  9`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        },
        "sizeOfAllAtoms": {
          "title": "C++ Info",
          "description": "- name: `sizeOfAllAtoms`(ctype: `hkUint16`)\n - offset: `  2`(x86)/`  2`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        }
      },
      "required": [
        "type",
        "sizeOfAllAtoms",
        "numContactPoints",
        "numReservedContactPoints",
        "numUserDatasForBodyA",
        "numUserDatasForBodyB",
        "contactPointPropertiesStriding",
        "maxNumContactPoints",
        "info"
      ]
    },
    "hkpSimpleContactConstraintDataInfo": {
      "title": "C++ Info",
      "description": "- name: `hkpSimpleContactConstraintDataInfo`\n - version: `1`\n - signature: `0xb59d1734`\n - size: ` 32`(x86)/` 32`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "data": {
          "title": "C++ Info",
          "description": "- name: `data`(ctype: `hkUint32[5]`)\n - offset: ` 12`(x86)/` 12`(x86_64)\n - type_size: ` 20`(x86)/` 20`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          },
          "maxItems": 5,
          "minItems": 5
        },
        "flags": {
          "title": "C++ Info",
          "description": "- name: `flags`(ctype: `hkUint16`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `ALIGN_16`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "index": {
          "title": "C++ Info",
          "description": "- name: `index`(ctype: `hkUint16`)\n - offset: `  2`(x86)/`  2`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "internalData0": {
          "title": "C++ Info",
          "description": "- name: `internalData0`(ctype: `hkReal`)\n - offset: `  4`(x86)/`  4`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "internalData1": {
          "title": "C++ Info",
          "description": "- name: `internalData1`(ctype: `hkHalf`)\n - offset: ` 10`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "rollingFrictionMultiplier": {
          "title": "C++ Info",
          "description": "- name: `rollingFrictionMultiplier`(ctype: `hkHalf`)\n - offset: `  8`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "number",
          "format": "float"
        }
      },
      "required": [
        "flags",
        "index",
        "internalData0",
        "rollingFrictionMultiplier",
        "internalData1",
        "data"
      ]
    },
    "hkpSimpleMeshShape": {
      "title": "C++ Info",
      "description": "- name: `hkpSimpleMeshShape`\n - version: `0`\n - signature: `0x16b3c811`\n - size: ` 68`(x86)/`104`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum unknown`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "collectionType": {
          "title": "C++ Info",
          "description": "- name: `collectionType`(ctype: `enum CollectionType`)\n - offset: ` 21`(x86)/` 41`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/CollectionType"
        },
        "disableWelding": {
          "title": "C++ Info",
          "description": "- name: `disableWelding`(ctype: `hkBool`)\n - offset: ` 20`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "materialIndices": {
          "title": "C++ Info",
          "description": "- name: `materialIndices`(ctype: `hkArray<hkUint8>`)\n - offset: ` 48`(x86)/` 80`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint8",
            "minimum": 0
          }
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "radius": {
          "title": "C++ Info",
          "description": "- name: `radius`(ctype: `hkReal`)\n - offset: ` 60`(x86)/` 96`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "triangles": {
          "title": "C++ Info",
          "description": "- name: `triangles`(ctype: `hkArray<struct hkpSimpleMeshShapeTriangle>`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkpSimpleMeshShapeTriangle"
          }
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "vertices": {
          "title": "C++ Info",
          "description": "- name: `vertices`(ctype: `hkArray<hkVector4>`)\n - offset: ` 24`(x86)/` 48`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/Vector4"
          }
        },
        "weldingType": {
          "title": "C++ Info",
          "description": "- name: `weldingType`(ctype: `enum WeldingType`)\n - offset: ` 64`(x86)/`100`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/WeldingType"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "userData",
        "type",
        "disableWelding",
        "collectionType",
        "vertices",
        "triangles",
        "materialIndices",
        "radius",
        "weldingType"
      ]
    },
    "hkpSimpleMeshShapeTriangle": {
      "title": "C++ Info",
      "description": "- name: `hkpSimpleMeshShapeTriangle`\n - version: `0`\n - signature: `0xd38738c1`\n - size: ` 16`(x86)/` 16`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "a": {
          "title": "C++ Info",
          "description": "- name: `a`(ctype: `hkInt32`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "b": {
          "title": "C++ Info",
          "description": "- name: `b`(ctype: `hkInt32`)\n - offset: `  4`(x86)/`  4`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "c": {
          "title": "C++ Info",
          "description": "- name: `c`(ctype: `hkInt32`)\n - offset: `  8`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "weldingInfo": {
          "title": "C++ Info",
          "description": "- name: `weldingInfo`(ctype: `hkUint16`)\n - offset: ` 12`(x86)/` 12`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        }
      },
      "required": [
        "a",
        "b",
        "c",
        "weldingInfo"
      ]
    },
    "hkpSimpleShapePhantom": {
      "title": "C++ Info",
      "description": "- name: `hkpSimpleShapePhantom`\n - version: `0`\n - signature: `0x32a2a8a8`\n - size: `368`(x86)/`448`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "properties": {
          "title": "C++ Info",
          "description": "- name: `properties`(ctype: `hkArray<struct hkpProperty>`)\n - offset: `124`(x86)/`184`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkpProperty"
          }
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "collidable": {
          "title": "C++ Info",
          "description": "- name: `collidable`(ctype: `struct hkpLinkedCollidable`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: ` 92`(x86)/`128`(x86_64)",
          "$ref": "#/$defs/hkpLinkedCollidable"
        },
        "collisionDetails": {
          "title": "C++ Info",
          "description": "- name: `collisionDetails`(ctype: `hkArray<struct hkpSimpleShapePhantomCollisionDetail>`)\n - offset: `352`(x86)/`416`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkpSimpleShapePhantomCollisionDetail"
          }
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "motionState": {
          "title": "C++ Info",
          "description": "- name: `motionState`(ctype: `struct hkMotionState`)\n - offset: `176`(x86)/`240`(x86_64)\n - type_size: `176`(x86)/`176`(x86_64)",
          "$ref": "#/$defs/hkMotionState"
        },
        "multiThreadCheck": {
          "title": "C++ Info",
          "description": "- name: `multiThreadCheck`(ctype: `struct hkMultiThreadCheck`)\n - offset: `108`(x86)/`160`(x86_64)\n - type_size: ` 12`(x86)/` 12`(x86_64)",
          "$ref": "#/$defs/hkMultiThreadCheck"
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: `120`(x86)/`176`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "orderDirty": {
          "title": "C++ Info",
          "description": "- name: `orderDirty`(ctype: `hkBool`)\n - offset: `364`(x86)/`432`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "overlapListeners": {
          "title": "C++ Info",
          "description": "- name: `overlapListeners`(ctype: `hkArray<void*>`)\n - offset: `140`(x86)/`208`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "phantomListeners": {
          "title": "C++ Info",
          "description": "- name: `phantomListeners`(ctype: `hkArray<void*>`)\n - offset: `152`(x86)/`224`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "treeData": {
          "title": "C++ Info",
          "description": "- name: `treeData`(ctype: `void*`)\n - offset: `136`(x86)/`200`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "world": {
          "title": "C++ Info",
          "description": "- name: `world`(ctype: `void*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "world",
        "userData",
        "collidable",
        "multiThreadCheck",
        "properties",
        "treeData",
        "overlapListeners",
        "phantomListeners",
        "motionState",
        "collisionDetails",
        "orderDirty"
      ]
    },
    "hkpSimpleShapePhantomCollisionDetail": {
      "title": "C++ Info",
      "description": "- name: `hkpSimpleShapePhantomCollisionDetail`\n - version: `0`\n - signature: `0x98bfa6ce`\n - size: `  4`(x86)/`  8`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "collidable": {
          "title": "C++ Info",
          "description": "- name: `collidable`(ctype: `struct hkpCollidable*`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "collidable"
      ]
    },
    "hkpSimulation": {
      "title": "C++ Info",
      "description": "- name: `hkpSimulation`\n - version: `0`\n - signature: `0x97aba922`\n - size: ` 44`(x86)/` 64`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "currentPsiTime": {
          "title": "C++ Info",
          "description": "- name: `currentPsiTime`(ctype: `hkReal`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "currentTime": {
          "title": "C++ Info",
          "description": "- name: `currentTime`(ctype: `hkReal`)\n - offset: ` 20`(x86)/` 36`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "determinismCheckFrameCounter": {
          "title": "C++ Info",
          "description": "- name: `determinismCheckFrameCounter`(ctype: `hkUint32`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "frameMarkerPsiSnap": {
          "title": "C++ Info",
          "description": "- name: `frameMarkerPsiSnap`(ctype: `hkReal`)\n - offset: ` 36`(x86)/` 52`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "lastProcessingStep": {
          "title": "C++ Info",
          "description": "- name: `lastProcessingStep`(ctype: `enum LastProcessingStep`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/LastProcessingStep"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "physicsDeltaTime": {
          "title": "C++ Info",
          "description": "- name: `physicsDeltaTime`(ctype: `hkReal`)\n - offset: ` 28`(x86)/` 44`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "previousStepResult": {
          "title": "C++ Info",
          "description": "- name: `previousStepResult`(ctype: `hkUint32`)\n - offset: ` 40`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "simulateUntilTime": {
          "title": "C++ Info",
          "description": "- name: `simulateUntilTime`(ctype: `hkReal`)\n - offset: ` 32`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "world": {
          "title": "C++ Info",
          "description": "- name: `world`(ctype: `struct hkpWorld*`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "determinismCheckFrameCounter",
        "world",
        "lastProcessingStep",
        "currentTime",
        "currentPsiTime",
        "physicsDeltaTime",
        "simulateUntilTime",
        "frameMarkerPsiSnap",
        "previousStepResult"
      ]
    },
    "hkpSingleShapeContainer": {
      "title": "C++ Info",
      "description": "- name: `hkpSingleShapeContainer`\n - version: `0`\n - signature: `0x73aa1d38`\n - size: `  8`(x86)/` 16`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "childShape": {
          "title": "C++ Info",
          "description": "- name: `childShape`(ctype: `struct hkpShape*`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "childShape"
      ]
    },
    "hkpSoftContactModifierConstraintAtom": {
      "title": "C++ Info",
      "description": "- name: `hkpSoftContactModifierConstraintAtom`\n - version: `0`\n - signature: `0xecb34e27`\n - size: ` 48`(x86)/` 64`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum AtomType`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "$ref": "#/$defs/AtomType"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "child": {
          "title": "C++ Info",
          "description": "- name: `child`(ctype: `struct hkpConstraintAtom*`)\n - offset: ` 20`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "childSize": {
          "title": "C++ Info",
          "description": "- name: `childSize`(ctype: `hkUint16`)\n - offset: ` 18`(x86)/` 18`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "maxAcceleration": {
          "title": "C++ Info",
          "description": "- name: `maxAcceleration`(ctype: `hkReal`)\n - offset: ` 36`(x86)/` 52`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "modifierAtomSize": {
          "title": "C++ Info",
          "description": "- name: `modifierAtomSize`(ctype: `hkUint16`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `ALIGN_16`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "pad": {
          "title": "C++ Info",
          "description": "- name: `pad`(ctype: `hkUint32[2]`)\n - offset: ` 24`(x86)/` 32`(x86_64)\n - type_size: `  8`(x86)/`  8`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          },
          "maxItems": 2,
          "minItems": 2
        },
        "tau": {
          "title": "C++ Info",
          "description": "- name: `tau`(ctype: `hkReal`)\n - offset: ` 32`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        }
      },
      "required": [
        "type",
        "modifierAtomSize",
        "childSize",
        "child",
        "pad",
        "tau",
        "maxAcceleration"
      ]
    },
    "hkpSphereMotion": {
      "title": "C++ Info",
      "description": "- name: `hkpSphereMotion`\n - version: `0`\n - signature: `0xbafa2bb7`\n - size: `288`(x86)/`320`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum MotionType`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/MotionType"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "angularVelocity": {
          "title": "C++ Info",
          "description": "- name: `angularVelocity`(ctype: `hkVector4`)\n - offset: `224`(x86)/`240`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "deactivationIntegrateCounter": {
          "title": "C++ Info",
          "description": "- name: `deactivationIntegrateCounter`(ctype: `hkUint8`)\n - offset: `  9`(x86)/` 17`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        },
        "deactivationNumInactiveFrames": {
          "title": "C++ Info",
          "description": "- name: `deactivationNumInactiveFrames`(ctype: `hkUint16[2]`)\n - offset: ` 10`(x86)/` 18`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint16",
            "minimum": 0
          },
          "maxItems": 2,
          "minItems": 2
        },
        "deactivationRefOrientation": {
          "title": "C++ Info",
          "description": "- name: `deactivationRefOrientation`(ctype: `hkUint32[2]`)\n - offset: `272`(x86)/`288`(x86_64)\n - type_size: `  8`(x86)/`  8`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          },
          "maxItems": 2,
          "minItems": 2
        },
        "deactivationRefPosition": {
          "title": "C++ Info",
          "description": "- name: `deactivationRefPosition`(ctype: `hkVector4[2]`)\n - offset: `240`(x86)/`256`(x86_64)\n - type_size: ` 32`(x86)/` 32`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/Vector4"
          },
          "maxItems": 2,
          "minItems": 2
        },
        "gravityFactor": {
          "title": "C++ Info",
          "description": "- name: `gravityFactor`(ctype: `hkHalf`)\n - offset: `286`(x86)/`306`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "inertiaAndMassInv": {
          "title": "C++ Info",
          "description": "- name: `inertiaAndMassInv`(ctype: `hkVector4`)\n - offset: `192`(x86)/`208`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "linearVelocity": {
          "title": "C++ Info",
          "description": "- name: `linearVelocity`(ctype: `hkVector4`)\n - offset: `208`(x86)/`224`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "motionState": {
          "title": "C++ Info",
          "description": "- name: `motionState`(ctype: `struct hkMotionState`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: `176`(x86)/`176`(x86_64)",
          "$ref": "#/$defs/hkMotionState"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "savedMotion": {
          "title": "C++ Info",
          "description": "- name: `savedMotion`(ctype: `struct hkpMaxSizeMotion*`)\n - offset: `280`(x86)/`296`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "savedQualityTypeIndex": {
          "title": "C++ Info",
          "description": "- name: `savedQualityTypeIndex`(ctype: `hkUint16`)\n - offset: `284`(x86)/`304`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "type",
        "deactivationIntegrateCounter",
        "deactivationNumInactiveFrames",
        "motionState",
        "inertiaAndMassInv",
        "linearVelocity",
        "angularVelocity",
        "deactivationRefPosition",
        "deactivationRefOrientation",
        "savedMotion",
        "savedQualityTypeIndex",
        "gravityFactor"
      ]
    },
    "hkpSphereRepShape": {
      "title": "C++ Info",
      "description": "- name: `hkpSphereRepShape`\n - version: `0`\n - signature: `0xe7eca7eb`\n - size: ` 16`(x86)/` 32`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum unknown`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "userData",
        "type"
      ]
    },
    "hkpSphereShape": {
      "title": "C++ Info",
      "description": "- name: `hkpSphereShape`\n - version: `0`\n - signature: `0x795d9fa`\n - size: ` 32`(x86)/` 56`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum unknown`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "pad16": {
          "title": "C++ Info",
          "description": "- name: `pad16`(ctype: `hkUint32[3]`)\n - offset: ` 20`(x86)/` 40`(x86_64)\n - type_size: ` 12`(x86)/` 12`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          },
          "maxItems": 3,
          "minItems": 3
        },
        "radius": {
          "title": "C++ Info",
          "description": "- name: `radius`(ctype: `hkReal`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "userData",
        "type",
        "radius",
        "pad16"
      ]
    },
    "hkpSpringAction": {
      "title": "C++ Info",
      "description": "- name: `hkpSpringAction`\n - version: `0`\n - signature: `0x88fc09fa`\n - size: ` 96`(x86)/`128`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "damping": {
          "title": "C++ Info",
          "description": "- name: `damping`(ctype: `hkReal`)\n - offset: ` 88`(x86)/`120`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "entityA": {
          "title": "C++ Info",
          "description": "- name: `entityA`(ctype: `struct hkpEntity*`)\n - offset: ` 24`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "entityB": {
          "title": "C++ Info",
          "description": "- name: `entityB`(ctype: `struct hkpEntity*`)\n - offset: ` 28`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "island": {
          "title": "C++ Info",
          "description": "- name: `island`(ctype: `void*`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "lastForce": {
          "title": "C++ Info",
          "description": "- name: `lastForce`(ctype: `hkVector4`)\n - offset: ` 32`(x86)/` 64`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 20`(x86)/` 40`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "onCompression": {
          "title": "C++ Info",
          "description": "- name: `onCompression`(ctype: `hkBool`)\n - offset: ` 92`(x86)/`124`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "onExtension": {
          "title": "C++ Info",
          "description": "- name: `onExtension`(ctype: `hkBool`)\n - offset: ` 93`(x86)/`125`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "positionAinA": {
          "title": "C++ Info",
          "description": "- name: `positionAinA`(ctype: `hkVector4`)\n - offset: ` 48`(x86)/` 80`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "positionBinB": {
          "title": "C++ Info",
          "description": "- name: `positionBinB`(ctype: `hkVector4`)\n - offset: ` 64`(x86)/` 96`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "restLength": {
          "title": "C++ Info",
          "description": "- name: `restLength`(ctype: `hkReal`)\n - offset: ` 80`(x86)/`112`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "strength": {
          "title": "C++ Info",
          "description": "- name: `strength`(ctype: `hkReal`)\n - offset: ` 84`(x86)/`116`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "world": {
          "title": "C++ Info",
          "description": "- name: `world`(ctype: `void*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "world",
        "island",
        "userData",
        "entityA",
        "entityB",
        "lastForce",
        "positionAinA",
        "positionBinB",
        "restLength",
        "strength",
        "damping",
        "onCompression",
        "onExtension"
      ]
    },
    "hkpSpringDamperConstraintMotor": {
      "title": "C++ Info",
      "description": "- name: `hkpSpringDamperConstraintMotor`\n - version: `0`\n - signature: `0x7ead26f6`\n - size: ` 28`(x86)/` 40`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum MotorType`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/MotorType"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "maxForce": {
          "title": "C++ Info",
          "description": "- name: `maxForce`(ctype: `hkReal`)\n - offset: ` 16`(x86)/` 28`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "minForce": {
          "title": "C++ Info",
          "description": "- name: `minForce`(ctype: `hkReal`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "springConstant": {
          "title": "C++ Info",
          "description": "- name: `springConstant`(ctype: `hkReal`)\n - offset: ` 20`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "springDamping": {
          "title": "C++ Info",
          "description": "- name: `springDamping`(ctype: `hkReal`)\n - offset: ` 24`(x86)/` 36`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "type",
        "minForce",
        "maxForce",
        "springConstant",
        "springDamping"
      ]
    },
    "hkpStiffSpringChainData": {
      "title": "C++ Info",
      "description": "- name: `hkpStiffSpringChainData`\n - version: `0`\n - signature: `0xf170356b`\n - size: ` 48`(x86)/` 80`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "atoms": {
          "title": "C++ Info",
          "description": "- name: `atoms`(ctype: `struct hkpBridgeAtoms`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 24`(x86_64)",
          "$ref": "#/$defs/hkpBridgeAtoms"
        },
        "cfm": {
          "title": "C++ Info",
          "description": "- name: `cfm`(ctype: `hkReal`)\n - offset: ` 44`(x86)/` 72`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "damping": {
          "title": "C++ Info",
          "description": "- name: `damping`(ctype: `hkReal`)\n - offset: ` 40`(x86)/` 68`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "infos": {
          "title": "C++ Info",
          "description": "- name: `infos`(ctype: `hkArray<struct hkpStiffSpringChainDataConstraintInfo>`)\n - offset: ` 24`(x86)/` 48`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkpStiffSpringChainDataConstraintInfo"
          }
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "tau": {
          "title": "C++ Info",
          "description": "- name: `tau`(ctype: `hkReal`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "userData",
        "atoms",
        "infos",
        "tau",
        "damping",
        "cfm"
      ]
    },
    "hkpStiffSpringChainDataConstraintInfo": {
      "title": "C++ Info",
      "description": "- name: `hkpStiffSpringChainDataConstraintInfo`\n - version: `0`\n - signature: `0xc624a180`\n - size: ` 48`(x86)/` 48`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "pivotInA": {
          "title": "C++ Info",
          "description": "- name: `pivotInA`(ctype: `hkVector4`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "pivotInB": {
          "title": "C++ Info",
          "description": "- name: `pivotInB`(ctype: `hkVector4`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "springLength": {
          "title": "C++ Info",
          "description": "- name: `springLength`(ctype: `hkReal`)\n - offset: ` 32`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        }
      },
      "required": [
        "pivotInA",
        "pivotInB",
        "springLength"
      ]
    },
    "hkpStiffSpringConstraintAtom": {
      "title": "C++ Info",
      "description": "- name: `hkpStiffSpringConstraintAtom`\n - version: `0`\n - signature: `0x6c128096`\n - size: `  8`(x86)/`  8`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum AtomType`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "$ref": "#/$defs/AtomType"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "length": {
          "title": "C++ Info",
          "description": "- name: `length`(ctype: `hkReal`)\n - offset: `  4`(x86)/`  4`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        }
      },
      "required": [
        "type",
        "length"
      ]
    },
    "hkpStiffSpringConstraintData": {
      "title": "C++ Info",
      "description": "- name: `hkpStiffSpringConstraintData`\n - version: `0`\n - signature: `0xb98f66f4`\n - size: ` 80`(x86)/` 96`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "atoms": {
          "title": "C++ Info",
          "description": "- name: `atoms`(ctype: `struct hkpStiffSpringConstraintDataAtoms`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: ` 64`(x86)/` 64`(x86_64)\n - flags: `ALIGN_16`",
          "$ref": "#/$defs/hkpStiffSpringConstraintDataAtoms"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "userData",
        "atoms"
      ]
    },
    "hkpStiffSpringConstraintDataAtoms": {
      "title": "C++ Info",
      "description": "- name: `hkpStiffSpringConstraintDataAtoms`\n - version: `0`\n - signature: `0x207eb376`\n - size: ` 64`(x86)/` 64`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "pivots": {
          "title": "C++ Info",
          "description": "- name: `pivots`(ctype: `struct hkpSetLocalTranslationsConstraintAtom`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: ` 48`(x86)/` 48`(x86_64)",
          "$ref": "#/$defs/hkpSetLocalTranslationsConstraintAtom"
        },
        "spring": {
          "title": "C++ Info",
          "description": "- name: `spring`(ctype: `struct hkpStiffSpringConstraintAtom`)\n - offset: ` 48`(x86)/` 48`(x86_64)\n - type_size: `  8`(x86)/`  8`(x86_64)",
          "$ref": "#/$defs/hkpStiffSpringConstraintAtom"
        }
      },
      "required": [
        "pivots",
        "spring"
      ]
    },
    "hkpStorageExtendedMeshShape": {
      "title": "C++ Info",
      "description": "- name: `hkpStorageExtendedMeshShape`\n - version: `0`\n - signature: `0xb469efbc`\n - size: `272`(x86)/`368`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum unknown`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "aabbCenter": {
          "title": "C++ Info",
          "description": "- name: `aabbCenter`(ctype: `hkVector4`)\n - offset: `160`(x86)/`224`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "aabbHalfExtents": {
          "title": "C++ Info",
          "description": "- name: `aabbHalfExtents`(ctype: `hkVector4`)\n - offset: `144`(x86)/`208`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "cachedNumChildShapes": {
          "title": "C++ Info",
          "description": "- name: `cachedNumChildShapes`(ctype: `hkInt32`)\n - offset: `228`(x86)/`312`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "collectionType": {
          "title": "C++ Info",
          "description": "- name: `collectionType`(ctype: `enum CollectionType`)\n - offset: ` 21`(x86)/` 41`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/CollectionType"
        },
        "defaultCollisionFilterInfo": {
          "title": "C++ Info",
          "description": "- name: `defaultCollisionFilterInfo`(ctype: `hkUint32`)\n - offset: `224`(x86)/`308`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "disableWelding": {
          "title": "C++ Info",
          "description": "- name: `disableWelding`(ctype: `hkBool`)\n - offset: ` 20`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "embeddedTrianglesSubpart": {
          "title": "C++ Info",
          "description": "- name: `embeddedTrianglesSubpart`(ctype: `struct hkpExtendedMeshShapeTrianglesSubpart`)\n - offset: ` 32`(x86)/` 48`(x86_64)\n - type_size: `112`(x86)/`160`(x86_64)",
          "$ref": "#/$defs/hkpExtendedMeshShapeTrianglesSubpart"
        },
        "materialClass": {
          "title": "C++ Info",
          "description": "- name: `materialClass`(ctype: `void*`)\n - offset: `176`(x86)/`240`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "meshstorage": {
          "title": "C++ Info",
          "description": "- name: `meshstorage`(ctype: `hkArray<hkpStorageExtendedMeshShapeMeshSubpartStorage*>`)\n - offset: `240`(x86)/`336`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "numBitsForSubpartIndex": {
          "title": "C++ Info",
          "description": "- name: `numBitsForSubpartIndex`(ctype: `hkInt32`)\n - offset: `180`(x86)/`248`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "padding": {
          "title": "C++ Info",
          "description": "- name: `padding`(ctype: `hkInt32`)\n - offset: `236`(x86)/`320`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int32"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "shapesSubparts": {
          "title": "C++ Info",
          "description": "- name: `shapesSubparts`(ctype: `hkArray<struct hkpExtendedMeshShapeShapesSubpart>`)\n - offset: `196`(x86)/`272`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkpExtendedMeshShapeShapesSubpart"
          }
        },
        "shapestorage": {
          "title": "C++ Info",
          "description": "- name: `shapestorage`(ctype: `hkArray<hkpStorageExtendedMeshShapeShapeSubpartStorage*>`)\n - offset: `252`(x86)/`352`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "triangleRadius": {
          "title": "C++ Info",
          "description": "- name: `triangleRadius`(ctype: `hkReal`)\n - offset: `232`(x86)/`316`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "trianglesSubparts": {
          "title": "C++ Info",
          "description": "- name: `trianglesSubparts`(ctype: `hkArray<struct hkpExtendedMeshShapeTrianglesSubpart>`)\n - offset: `184`(x86)/`256`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkpExtendedMeshShapeTrianglesSubpart"
          }
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "weldingInfo": {
          "title": "C++ Info",
          "description": "- name: `weldingInfo`(ctype: `hkArray<hkUint16>`)\n - offset: `208`(x86)/`288`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint16",
            "minimum": 0
          }
        },
        "weldingType": {
          "title": "C++ Info",
          "description": "- name: `weldingType`(ctype: `enum WeldingType`)\n - offset: `220`(x86)/`304`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/WeldingType"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "userData",
        "type",
        "disableWelding",
        "collectionType",
        "embeddedTrianglesSubpart",
        "aabbHalfExtents",
        "aabbCenter",
        "materialClass",
        "numBitsForSubpartIndex",
        "trianglesSubparts",
        "shapesSubparts",
        "weldingInfo",
        "weldingType",
        "defaultCollisionFilterInfo",
        "cachedNumChildShapes",
        "triangleRadius",
        "padding",
        "meshstorage",
        "shapestorage"
      ]
    },
    "hkpStorageExtendedMeshShapeMaterial": {
      "title": "C++ Info",
      "description": "- name: `hkpStorageExtendedMeshShapeMaterial`\n - version: `1`\n - signature: `0x2ca3e906`\n - size: ` 12`(x86)/` 16`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "filterInfo": {
          "title": "C++ Info",
          "description": "- name: `filterInfo`(ctype: `hkUint32`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "friction": {
          "title": "C++ Info",
          "description": "- name: `friction`(ctype: `hkHalf`)\n - offset: `  6`(x86)/`  6`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "restitution": {
          "title": "C++ Info",
          "description": "- name: `restitution`(ctype: `hkHalf`)\n - offset: `  4`(x86)/`  4`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: `  8`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        }
      },
      "required": [
        "filterInfo",
        "restitution",
        "friction",
        "userData"
      ]
    },
    "hkpStorageExtendedMeshShapeMeshSubpartStorage": {
      "title": "C++ Info",
      "description": "- name: `hkpStorageExtendedMeshShapeMeshSubpartStorage`\n - version: `3`\n - signature: `0x5aad4de6`\n - size: `104`(x86)/`144`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "indices16": {
          "title": "C++ Info",
          "description": "- name: `indices16`(ctype: `hkArray<hkUint16>`)\n - offset: ` 32`(x86)/` 48`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint16",
            "minimum": 0
          }
        },
        "indices32": {
          "title": "C++ Info",
          "description": "- name: `indices32`(ctype: `hkArray<hkUint32>`)\n - offset: ` 44`(x86)/` 64`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          }
        },
        "indices8": {
          "title": "C++ Info",
          "description": "- name: `indices8`(ctype: `hkArray<hkUint8>`)\n - offset: ` 20`(x86)/` 32`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint8",
            "minimum": 0
          }
        },
        "materialIndices": {
          "title": "C++ Info",
          "description": "- name: `materialIndices`(ctype: `hkArray<hkUint8>`)\n - offset: ` 56`(x86)/` 80`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint8",
            "minimum": 0
          }
        },
        "materialIndices16": {
          "title": "C++ Info",
          "description": "- name: `materialIndices16`(ctype: `hkArray<hkUint16>`)\n - offset: ` 92`(x86)/`128`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint16",
            "minimum": 0
          }
        },
        "materials": {
          "title": "C++ Info",
          "description": "- name: `materials`(ctype: `hkArray<struct hkpStorageExtendedMeshShapeMaterial>`)\n - offset: ` 68`(x86)/` 96`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkpStorageExtendedMeshShapeMaterial"
          }
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "namedMaterials": {
          "title": "C++ Info",
          "description": "- name: `namedMaterials`(ctype: `hkArray<struct hkpNamedMeshMaterial>`)\n - offset: ` 80`(x86)/`112`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkpNamedMeshMaterial"
          }
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "vertices": {
          "title": "C++ Info",
          "description": "- name: `vertices`(ctype: `hkArray<hkVector4>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/Vector4"
          }
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "vertices",
        "indices8",
        "indices16",
        "indices32",
        "materialIndices",
        "materials",
        "namedMaterials",
        "materialIndices16"
      ]
    },
    "hkpStorageExtendedMeshShapeShapeSubpartStorage": {
      "title": "C++ Info",
      "description": "- name: `hkpStorageExtendedMeshShapeShapeSubpartStorage`\n - version: `2`\n - signature: `0x3f7d804c`\n - size: ` 44`(x86)/` 64`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "materialIndices": {
          "title": "C++ Info",
          "description": "- name: `materialIndices`(ctype: `hkArray<hkUint8>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint8",
            "minimum": 0
          }
        },
        "materialIndices16": {
          "title": "C++ Info",
          "description": "- name: `materialIndices16`(ctype: `hkArray<hkUint16>`)\n - offset: ` 32`(x86)/` 48`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint16",
            "minimum": 0
          }
        },
        "materials": {
          "title": "C++ Info",
          "description": "- name: `materials`(ctype: `hkArray<struct hkpStorageExtendedMeshShapeMaterial>`)\n - offset: ` 20`(x86)/` 32`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkpStorageExtendedMeshShapeMaterial"
          }
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "materialIndices",
        "materials",
        "materialIndices16"
      ]
    },
    "hkpStorageMeshShape": {
      "title": "C++ Info",
      "description": "- name: `hkpStorageMeshShape`\n - version: `0`\n - signature: `0xbefd8b39`\n - size: `112`(x86)/`144`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum unknown`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "collectionType": {
          "title": "C++ Info",
          "description": "- name: `collectionType`(ctype: `enum CollectionType`)\n - offset: ` 21`(x86)/` 41`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/CollectionType"
        },
        "disableWelding": {
          "title": "C++ Info",
          "description": "- name: `disableWelding`(ctype: `hkBool`)\n - offset: ` 20`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "numBitsForSubpartIndex": {
          "title": "C++ Info",
          "description": "- name: `numBitsForSubpartIndex`(ctype: `hkInt32`)\n - offset: ` 48`(x86)/` 64`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "pad": {
          "title": "C++ Info",
          "description": "- name: `pad`(ctype: `hkInt32[3]`)\n - offset: ` 84`(x86)/`112`(x86_64)\n - type_size: ` 12`(x86)/` 12`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "maxItems": 3,
          "minItems": 3
        },
        "radius": {
          "title": "C++ Info",
          "description": "- name: `radius`(ctype: `hkReal`)\n - offset: ` 80`(x86)/`108`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "scaling": {
          "title": "C++ Info",
          "description": "- name: `scaling`(ctype: `hkVector4`)\n - offset: ` 32`(x86)/` 48`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "storage": {
          "title": "C++ Info",
          "description": "- name: `storage`(ctype: `hkArray<hkpStorageMeshShapeSubpartStorage*>`)\n - offset: ` 96`(x86)/`128`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "subparts": {
          "title": "C++ Info",
          "description": "- name: `subparts`(ctype: `hkArray<struct hkpMeshShapeSubpart>`)\n - offset: ` 52`(x86)/` 72`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkpMeshShapeSubpart"
          }
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "weldingInfo": {
          "title": "C++ Info",
          "description": "- name: `weldingInfo`(ctype: `hkArray<hkUint16>`)\n - offset: ` 64`(x86)/` 88`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint16",
            "minimum": 0
          }
        },
        "weldingType": {
          "title": "C++ Info",
          "description": "- name: `weldingType`(ctype: `enum WeldingType`)\n - offset: ` 76`(x86)/`104`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/WeldingType"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "userData",
        "type",
        "disableWelding",
        "collectionType",
        "scaling",
        "numBitsForSubpartIndex",
        "subparts",
        "weldingInfo",
        "weldingType",
        "radius",
        "pad",
        "storage"
      ]
    },
    "hkpStorageMeshShapeSubpartStorage": {
      "title": "C++ Info",
      "description": "- name: `hkpStorageMeshShapeSubpartStorage`\n - version: `0`\n - signature: `0xbf27438`\n - size: ` 80`(x86)/`112`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "indices16": {
          "title": "C++ Info",
          "description": "- name: `indices16`(ctype: `hkArray<hkUint16>`)\n - offset: ` 20`(x86)/` 32`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint16",
            "minimum": 0
          }
        },
        "indices32": {
          "title": "C++ Info",
          "description": "- name: `indices32`(ctype: `hkArray<hkUint32>`)\n - offset: ` 32`(x86)/` 48`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          }
        },
        "materialIndices": {
          "title": "C++ Info",
          "description": "- name: `materialIndices`(ctype: `hkArray<hkUint8>`)\n - offset: ` 44`(x86)/` 64`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint8",
            "minimum": 0
          }
        },
        "materialIndices16": {
          "title": "C++ Info",
          "description": "- name: `materialIndices16`(ctype: `hkArray<hkUint16>`)\n - offset: ` 68`(x86)/` 96`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint16",
            "minimum": 0
          }
        },
        "materials": {
          "title": "C++ Info",
          "description": "- name: `materials`(ctype: `hkArray<hkUint32>`)\n - offset: ` 56`(x86)/` 80`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          }
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "vertices": {
          "title": "C++ Info",
          "description": "- name: `vertices`(ctype: `hkArray<hkReal>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          }
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "vertices",
        "indices16",
        "indices32",
        "materialIndices",
        "materials",
        "materialIndices16"
      ]
    },
    "hkpStorageSampledHeightFieldShape": {
      "title": "C++ Info",
      "description": "- name: `hkpStorageSampledHeightFieldShape`\n - version: `0`\n - signature: `0x15ff414b`\n - size: `112`(x86)/`144`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum unknown`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "extents": {
          "title": "C++ Info",
          "description": "- name: `extents`(ctype: `hkVector4`)\n - offset: ` 80`(x86)/` 96`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "floatToIntOffsetFloorCorrected": {
          "title": "C++ Info",
          "description": "- name: `floatToIntOffsetFloorCorrected`(ctype: `hkVector4`)\n - offset: ` 64`(x86)/` 80`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "floatToIntScale": {
          "title": "C++ Info",
          "description": "- name: `floatToIntScale`(ctype: `hkVector4`)\n - offset: ` 48`(x86)/` 64`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "heightCenter": {
          "title": "C++ Info",
          "description": "- name: `heightCenter`(ctype: `hkReal`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "heightfieldType": {
          "title": "C++ Info",
          "description": "- name: `heightfieldType`(ctype: `enum HeightFieldType`)\n - offset: ` 29`(x86)/` 45`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/HeightFieldType"
        },
        "intToFloatScale": {
          "title": "C++ Info",
          "description": "- name: `intToFloatScale`(ctype: `hkVector4`)\n - offset: ` 32`(x86)/` 48`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "storage": {
          "title": "C++ Info",
          "description": "- name: `storage`(ctype: `hkArray<hkReal>`)\n - offset: ` 96`(x86)/`112`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "triangleFlip": {
          "title": "C++ Info",
          "description": "- name: `triangleFlip`(ctype: `hkBool`)\n - offset: `108`(x86)/`128`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "useProjectionBasedHeight": {
          "title": "C++ Info",
          "description": "- name: `useProjectionBasedHeight`(ctype: `hkBool`)\n - offset: ` 28`(x86)/` 44`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "xRes": {
          "title": "C++ Info",
          "description": "- name: `xRes`(ctype: `hkInt32`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "zRes": {
          "title": "C++ Info",
          "description": "- name: `zRes`(ctype: `hkInt32`)\n - offset: ` 20`(x86)/` 36`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "userData",
        "type",
        "xRes",
        "zRes",
        "heightCenter",
        "useProjectionBasedHeight",
        "heightfieldType",
        "intToFloatScale",
        "floatToIntScale",
        "floatToIntOffsetFloorCorrected",
        "extents",
        "storage",
        "triangleFlip"
      ]
    },
    "hkpThinBoxMotion": {
      "title": "C++ Info",
      "description": "- name: `hkpThinBoxMotion`\n - version: `0`\n - signature: `0x64abf85c`\n - size: `288`(x86)/`320`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum MotionType`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/MotionType"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "angularVelocity": {
          "title": "C++ Info",
          "description": "- name: `angularVelocity`(ctype: `hkVector4`)\n - offset: `224`(x86)/`240`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "deactivationIntegrateCounter": {
          "title": "C++ Info",
          "description": "- name: `deactivationIntegrateCounter`(ctype: `hkUint8`)\n - offset: `  9`(x86)/` 17`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        },
        "deactivationNumInactiveFrames": {
          "title": "C++ Info",
          "description": "- name: `deactivationNumInactiveFrames`(ctype: `hkUint16[2]`)\n - offset: ` 10`(x86)/` 18`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint16",
            "minimum": 0
          },
          "maxItems": 2,
          "minItems": 2
        },
        "deactivationRefOrientation": {
          "title": "C++ Info",
          "description": "- name: `deactivationRefOrientation`(ctype: `hkUint32[2]`)\n - offset: `272`(x86)/`288`(x86_64)\n - type_size: `  8`(x86)/`  8`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          },
          "maxItems": 2,
          "minItems": 2
        },
        "deactivationRefPosition": {
          "title": "C++ Info",
          "description": "- name: `deactivationRefPosition`(ctype: `hkVector4[2]`)\n - offset: `240`(x86)/`256`(x86_64)\n - type_size: ` 32`(x86)/` 32`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/Vector4"
          },
          "maxItems": 2,
          "minItems": 2
        },
        "gravityFactor": {
          "title": "C++ Info",
          "description": "- name: `gravityFactor`(ctype: `hkHalf`)\n - offset: `286`(x86)/`306`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "inertiaAndMassInv": {
          "title": "C++ Info",
          "description": "- name: `inertiaAndMassInv`(ctype: `hkVector4`)\n - offset: `192`(x86)/`208`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "linearVelocity": {
          "title": "C++ Info",
          "description": "- name: `linearVelocity`(ctype: `hkVector4`)\n - offset: `208`(x86)/`224`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "motionState": {
          "title": "C++ Info",
          "description": "- name: `motionState`(ctype: `struct hkMotionState`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: `176`(x86)/`176`(x86_64)",
          "$ref": "#/$defs/hkMotionState"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "savedMotion": {
          "title": "C++ Info",
          "description": "- name: `savedMotion`(ctype: `struct hkpMaxSizeMotion*`)\n - offset: `280`(x86)/`296`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "savedQualityTypeIndex": {
          "title": "C++ Info",
          "description": "- name: `savedQualityTypeIndex`(ctype: `hkUint16`)\n - offset: `284`(x86)/`304`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "type",
        "deactivationIntegrateCounter",
        "deactivationNumInactiveFrames",
        "motionState",
        "inertiaAndMassInv",
        "linearVelocity",
        "angularVelocity",
        "deactivationRefPosition",
        "deactivationRefOrientation",
        "savedMotion",
        "savedQualityTypeIndex",
        "gravityFactor"
      ]
    },
    "hkpTransformShape": {
      "title": "C++ Info",
      "description": "- name: `hkpTransformShape`\n - version: `0`\n - signature: `0x787ef513`\n - size: `112`(x86)/`144`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum unknown`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "childShape": {
          "title": "C++ Info",
          "description": "- name: `childShape`(ctype: `struct hkpSingleShapeContainer`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: `  8`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/hkpSingleShapeContainer"
        },
        "childShapeSize": {
          "title": "C++ Info",
          "description": "- name: `childShapeSize`(ctype: `hkInt32`)\n - offset: ` 24`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int32"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "rotation": {
          "title": "C++ Info",
          "description": "- name: `rotation`(ctype: `hkQuaternion`)\n - offset: ` 32`(x86)/` 64`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Quaternion"
        },
        "transform": {
          "title": "C++ Info",
          "description": "- name: `transform`(ctype: `hkTransform`)\n - offset: ` 48`(x86)/` 80`(x86_64)\n - type_size: ` 64`(x86)/` 64`(x86_64)",
          "$ref": "#/$defs/Transform"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "userData",
        "type",
        "childShape",
        "childShapeSize",
        "rotation",
        "transform"
      ]
    },
    "hkpTriSampledHeightFieldBvTreeShape": {
      "title": "C++ Info",
      "description": "- name: `hkpTriSampledHeightFieldBvTreeShape`\n - version: `0`\n - signature: `0x58e1e585`\n - size: ` 48`(x86)/` 80`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum unknown`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "bvTreeType": {
          "title": "C++ Info",
          "description": "- name: `bvTreeType`(ctype: `enum BvTreeType`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/BvTreeType"
        },
        "childContainer": {
          "title": "C++ Info",
          "description": "- name: `childContainer`(ctype: `struct hkpSingleShapeContainer`)\n - offset: ` 20`(x86)/` 40`(x86_64)\n - type_size: `  8`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/hkpSingleShapeContainer"
        },
        "childSize": {
          "title": "C++ Info",
          "description": "- name: `childSize`(ctype: `hkInt32`)\n - offset: ` 28`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int32"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "padding": {
          "title": "C++ Info",
          "description": "- name: `padding`(ctype: `hkUint8[12]`)\n - offset: ` 33`(x86)/` 61`(x86_64)\n - type_size: ` 12`(x86)/` 12`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint8",
            "minimum": 0
          },
          "maxItems": 12,
          "minItems": 12
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "wantAabbRejectionTest": {
          "title": "C++ Info",
          "description": "- name: `wantAabbRejectionTest`(ctype: `hkBool`)\n - offset: ` 32`(x86)/` 60`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "userData",
        "type",
        "bvTreeType",
        "childContainer",
        "childSize",
        "wantAabbRejectionTest",
        "padding"
      ]
    },
    "hkpTriSampledHeightFieldCollection": {
      "title": "C++ Info",
      "description": "- name: `hkpTriSampledHeightFieldCollection`\n - version: `0`\n - signature: `0xc291ddde`\n - size: ` 64`(x86)/` 96`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum unknown`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "childSize": {
          "title": "C++ Info",
          "description": "- name: `childSize`(ctype: `hkInt32`)\n - offset: ` 28`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int32"
        },
        "collectionType": {
          "title": "C++ Info",
          "description": "- name: `collectionType`(ctype: `enum CollectionType`)\n - offset: ` 21`(x86)/` 41`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/CollectionType"
        },
        "disableWelding": {
          "title": "C++ Info",
          "description": "- name: `disableWelding`(ctype: `hkBool`)\n - offset: ` 20`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "heightfield": {
          "title": "C++ Info",
          "description": "- name: `heightfield`(ctype: `struct hkpSampledHeightFieldShape*`)\n - offset: ` 24`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "radius": {
          "title": "C++ Info",
          "description": "- name: `radius`(ctype: `hkReal`)\n - offset: ` 32`(x86)/` 60`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "triangleExtrusion": {
          "title": "C++ Info",
          "description": "- name: `triangleExtrusion`(ctype: `hkVector4`)\n - offset: ` 48`(x86)/` 80`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "weldingInfo": {
          "title": "C++ Info",
          "description": "- name: `weldingInfo`(ctype: `hkArray<hkUint16>`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint16",
            "minimum": 0
          }
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "userData",
        "type",
        "disableWelding",
        "collectionType",
        "heightfield",
        "childSize",
        "radius",
        "weldingInfo",
        "triangleExtrusion"
      ]
    },
    "hkpTriangleShape": {
      "title": "C++ Info",
      "description": "- name: `hkpTriangleShape`\n - version: `0`\n - signature: `0x95ad1a25`\n - size: ` 96`(x86)/`112`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum unknown`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "extrusion": {
          "title": "C++ Info",
          "description": "- name: `extrusion`(ctype: `hkVector4`)\n - offset: ` 80`(x86)/` 96`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "isExtruded": {
          "title": "C++ Info",
          "description": "- name: `isExtruded`(ctype: `hkUint8`)\n - offset: ` 23`(x86)/` 43`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "radius": {
          "title": "C++ Info",
          "description": "- name: `radius`(ctype: `hkReal`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "vertexA": {
          "title": "C++ Info",
          "description": "- name: `vertexA`(ctype: `hkVector4`)\n - offset: ` 32`(x86)/` 48`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "vertexB": {
          "title": "C++ Info",
          "description": "- name: `vertexB`(ctype: `hkVector4`)\n - offset: ` 48`(x86)/` 64`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "vertexC": {
          "title": "C++ Info",
          "description": "- name: `vertexC`(ctype: `hkVector4`)\n - offset: ` 64`(x86)/` 80`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "weldingInfo": {
          "title": "C++ Info",
          "description": "- name: `weldingInfo`(ctype: `hkUint16`)\n - offset: ` 20`(x86)/` 40`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "weldingType": {
          "title": "C++ Info",
          "description": "- name: `weldingType`(ctype: `enum WeldingType`)\n - offset: ` 22`(x86)/` 42`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/WeldingType"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "userData",
        "type",
        "radius",
        "weldingInfo",
        "weldingType",
        "isExtruded",
        "vertexA",
        "vertexB",
        "vertexC",
        "extrusion"
      ]
    },
    "hkpTriggerVolume": {
      "title": "C++ Info",
      "description": "- name: `hkpTriggerVolume`\n - version: `0`\n - signature: `0xa29a8d1a`\n - size: ` 52`(x86)/` 88`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "eventQueue": {
          "title": "C++ Info",
          "description": "- name: `eventQueue`(ctype: `hkArray<struct hkpTriggerVolumeEventInfo>`)\n - offset: ` 32`(x86)/` 56`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkpTriggerVolumeEventInfo"
          }
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "overlappingBodies": {
          "title": "C++ Info",
          "description": "- name: `overlappingBodies`(ctype: `hkArray<hkpRigidBody*>`)\n - offset: ` 20`(x86)/` 40`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "sequenceNumber": {
          "title": "C++ Info",
          "description": "- name: `sequenceNumber`(ctype: `hkUint32`)\n - offset: ` 48`(x86)/` 80`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "triggerBody": {
          "title": "C++ Info",
          "description": "- name: `triggerBody`(ctype: `struct hkpRigidBody*`)\n - offset: ` 44`(x86)/` 72`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "overlappingBodies",
        "eventQueue",
        "triggerBody",
        "sequenceNumber"
      ]
    },
    "hkpTriggerVolumeEventInfo": {
      "title": "C++ Info",
      "description": "- name: `hkpTriggerVolumeEventInfo`\n - version: `0`\n - signature: `0xeb60f431`\n - size: ` 16`(x86)/` 24`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "body": {
          "title": "C++ Info",
          "description": "- name: `body`(ctype: `struct hkpRigidBody*`)\n - offset: `  8`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "operation": {
          "title": "C++ Info",
          "description": "- name: `operation`(ctype: `enum Operation`)\n - offset: ` 12`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "$ref": "#/$defs/Operation"
        },
        "sortValue": {
          "title": "C++ Info",
          "description": "- name: `sortValue`(ctype: `hkUint64`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  8`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        }
      },
      "required": [
        "sortValue",
        "body",
        "operation"
      ]
    },
    "hkpTwistLimitConstraintAtom": {
      "title": "C++ Info",
      "description": "- name: `hkpTwistLimitConstraintAtom`\n - version: `0`\n - signature: `0x7c9b1052`\n - size: ` 20`(x86)/` 20`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum AtomType`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "$ref": "#/$defs/AtomType"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "angularLimitsTauFactor": {
          "title": "C++ Info",
          "description": "- name: `angularLimitsTauFactor`(ctype: `hkReal`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "isEnabled": {
          "title": "C++ Info",
          "description": "- name: `isEnabled`(ctype: `hkUint8`)\n - offset: `  2`(x86)/`  2`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        },
        "maxAngle": {
          "title": "C++ Info",
          "description": "- name: `maxAngle`(ctype: `hkReal`)\n - offset: ` 12`(x86)/` 12`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "minAngle": {
          "title": "C++ Info",
          "description": "- name: `minAngle`(ctype: `hkReal`)\n - offset: `  8`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "refAxis": {
          "title": "C++ Info",
          "description": "- name: `refAxis`(ctype: `hkUint8`)\n - offset: `  4`(x86)/`  4`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        },
        "twistAxis": {
          "title": "C++ Info",
          "description": "- name: `twistAxis`(ctype: `hkUint8`)\n - offset: `  3`(x86)/`  3`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        }
      },
      "required": [
        "type",
        "isEnabled",
        "twistAxis",
        "refAxis",
        "minAngle",
        "maxAngle",
        "angularLimitsTauFactor"
      ]
    },
    "hkpTypedBroadPhaseHandle": {
      "title": "C++ Info",
      "description": "- name: `hkpTypedBroadPhaseHandle`\n - version: `0`\n - signature: `0xf4b0f799`\n - size: ` 12`(x86)/` 12`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `hkInt8`)\n - offset: `  4`(x86)/`  4`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "int8"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "collisionFilterInfo": {
          "title": "C++ Info",
          "description": "- name: `collisionFilterInfo`(ctype: `hkUint32`)\n - offset: `  8`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "id": {
          "title": "C++ Info",
          "description": "- name: `id`(ctype: `hkUint32`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "objectQualityType": {
          "title": "C++ Info",
          "description": "- name: `objectQualityType`(ctype: `hkInt8`)\n - offset: `  6`(x86)/`  6`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "int8"
        },
        "ownerOffset": {
          "title": "C++ Info",
          "description": "- name: `ownerOffset`(ctype: `hkInt8`)\n - offset: `  5`(x86)/`  5`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        }
      },
      "required": [
        "id",
        "type",
        "ownerOffset",
        "objectQualityType",
        "collisionFilterInfo"
      ]
    },
    "hkpTyremarkPoint": {
      "title": "C++ Info",
      "description": "- name: `hkpTyremarkPoint`\n - version: `0`\n - signature: `0x6bb7c5e8`\n - size: ` 32`(x86)/` 32`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "pointLeft": {
          "title": "C++ Info",
          "description": "- name: `pointLeft`(ctype: `hkVector4`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "pointRight": {
          "title": "C++ Info",
          "description": "- name: `pointRight`(ctype: `hkVector4`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        }
      },
      "required": [
        "pointLeft",
        "pointRight"
      ]
    },
    "hkpTyremarksInfo": {
      "title": "C++ Info",
      "description": "- name: `hkpTyremarksInfo`\n - version: `0`\n - signature: `0x3d0433d6`\n - size: ` 28`(x86)/` 40`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "maxTyremarkEnergy": {
          "title": "C++ Info",
          "description": "- name: `maxTyremarkEnergy`(ctype: `hkReal`)\n - offset: ` 12`(x86)/` 20`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "minTyremarkEnergy": {
          "title": "C++ Info",
          "description": "- name: `minTyremarkEnergy`(ctype: `hkReal`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "tyremarksWheel": {
          "title": "C++ Info",
          "description": "- name: `tyremarksWheel`(ctype: `hkArray<hkpTyremarksWheel*>`)\n - offset: ` 16`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "minTyremarkEnergy",
        "maxTyremarkEnergy",
        "tyremarksWheel"
      ]
    },
    "hkpTyremarksWheel": {
      "title": "C++ Info",
      "description": "- name: `hkpTyremarksWheel`\n - version: `0`\n - signature: `0x1eaef041`\n - size: ` 28`(x86)/` 40`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "currentPosition": {
          "title": "C++ Info",
          "description": "- name: `currentPosition`(ctype: `hkInt32`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "numPoints": {
          "title": "C++ Info",
          "description": "- name: `numPoints`(ctype: `hkInt32`)\n - offset: ` 12`(x86)/` 20`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "tyremarkPoints": {
          "title": "C++ Info",
          "description": "- name: `tyremarkPoints`(ctype: `hkArray<struct hkpTyremarkPoint>`)\n - offset: ` 16`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkpTyremarkPoint"
          }
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "currentPosition",
        "numPoints",
        "tyremarkPoints"
      ]
    },
    "hkpUnaryAction": {
      "title": "C++ Info",
      "description": "- name: `hkpUnaryAction`\n - version: `0`\n - signature: `0x895532c0`\n - size: ` 28`(x86)/` 56`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "entity": {
          "title": "C++ Info",
          "description": "- name: `entity`(ctype: `struct hkpEntity*`)\n - offset: ` 24`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "island": {
          "title": "C++ Info",
          "description": "- name: `island`(ctype: `void*`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 20`(x86)/` 40`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "world": {
          "title": "C++ Info",
          "description": "- name: `world`(ctype: `void*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "world",
        "island",
        "userData",
        "entity"
      ]
    },
    "hkpVehicleAerodynamics": {
      "title": "C++ Info",
      "description": "- name: `hkpVehicleAerodynamics`\n - version: `0`\n - signature: `0xda8c7d7d`\n - size: `  8`(x86)/` 16`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount"
      ]
    },
    "hkpVehicleBrake": {
      "title": "C++ Info",
      "description": "- name: `hkpVehicleBrake`\n - version: `0`\n - signature: `0xda8c7d7d`\n - size: `  8`(x86)/` 16`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount"
      ]
    },
    "hkpVehicleCastBatchingManager": {
      "title": "C++ Info",
      "description": "- name: `hkpVehicleCastBatchingManager`\n - version: `0`\n - signature: `0x53340a9`\n - size: ` 24`(x86)/` 40`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "registeredVehicles": {
          "title": "C++ Info",
          "description": "- name: `registeredVehicles`(ctype: `hkArray<hkpVehicleInstance*>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "totalNumWheels": {
          "title": "C++ Info",
          "description": "- name: `totalNumWheels`(ctype: `hkUint16`)\n - offset: ` 20`(x86)/` 32`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "registeredVehicles",
        "totalNumWheels"
      ]
    },
    "hkpVehicleData": {
      "title": "C++ Info",
      "description": "- name: `hkpVehicleData`\n - version: `1`\n - signature: `0x173feb43`\n - size: `416`(x86)/`416`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "alreadyInitialised": {
          "title": "C++ Info",
          "description": "- name: `alreadyInitialised`(ctype: `hkBool`)\n - offset: `400`(x86)/`400`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "chassisFrictionInertiaInvDiag": {
          "title": "C++ Info",
          "description": "- name: `chassisFrictionInertiaInvDiag`(ctype: `hkVector4`)\n - offset: `384`(x86)/`384`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "chassisOrientation": {
          "title": "C++ Info",
          "description": "- name: `chassisOrientation`(ctype: `hkRotation`)\n - offset: ` 48`(x86)/` 48`(x86_64)\n - type_size: ` 48`(x86)/` 48`(x86_64)",
          "$ref": "#/$defs/Rotation"
        },
        "chassisUnitInertiaPitch": {
          "title": "C++ Info",
          "description": "- name: `chassisUnitInertiaPitch`(ctype: `hkReal`)\n - offset: `124`(x86)/`124`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "chassisUnitInertiaRoll": {
          "title": "C++ Info",
          "description": "- name: `chassisUnitInertiaRoll`(ctype: `hkReal`)\n - offset: `120`(x86)/`120`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "chassisUnitInertiaYaw": {
          "title": "C++ Info",
          "description": "- name: `chassisUnitInertiaYaw`(ctype: `hkReal`)\n - offset: `116`(x86)/`116`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "extraTorqueFactor": {
          "title": "C++ Info",
          "description": "- name: `extraTorqueFactor`(ctype: `hkReal`)\n - offset: `108`(x86)/`108`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "frictionDescription": {
          "title": "C++ Info",
          "description": "- name: `frictionDescription`(ctype: `struct hkpVehicleFrictionDescription`)\n - offset: `164`(x86)/`176`(x86_64)\n - type_size: `208`(x86)/`208`(x86_64)",
          "$ref": "#/$defs/hkpVehicleFrictionDescription"
        },
        "frictionEqualizer": {
          "title": "C++ Info",
          "description": "- name: `frictionEqualizer`(ctype: `hkReal`)\n - offset: `128`(x86)/`128`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "gravity": {
          "title": "C++ Info",
          "description": "- name: `gravity`(ctype: `hkVector4`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "maxFrictionSolverMassRatio": {
          "title": "C++ Info",
          "description": "- name: `maxFrictionSolverMassRatio`(ctype: `hkReal`)\n - offset: `136`(x86)/`136`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "maxVelocityForPositionalFriction": {
          "title": "C++ Info",
          "description": "- name: `maxVelocityForPositionalFriction`(ctype: `hkReal`)\n - offset: `112`(x86)/`112`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "normalClippingAngleCos": {
          "title": "C++ Info",
          "description": "- name: `normalClippingAngleCos`(ctype: `hkReal`)\n - offset: `132`(x86)/`132`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "numWheels": {
          "title": "C++ Info",
          "description": "- name: `numWheels`(ctype: `hkInt8`)\n - offset: ` 32`(x86)/` 32`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "int8"
        },
        "numWheelsPerAxle": {
          "title": "C++ Info",
          "description": "- name: `numWheelsPerAxle`(ctype: `hkArray<hkInt8>`)\n - offset: `152`(x86)/`160`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int8"
          }
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "torquePitchFactor": {
          "title": "C++ Info",
          "description": "- name: `torquePitchFactor`(ctype: `hkReal`)\n - offset: `100`(x86)/`100`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "torqueRollFactor": {
          "title": "C++ Info",
          "description": "- name: `torqueRollFactor`(ctype: `hkReal`)\n - offset: ` 96`(x86)/` 96`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "torqueYawFactor": {
          "title": "C++ Info",
          "description": "- name: `torqueYawFactor`(ctype: `hkReal`)\n - offset: `104`(x86)/`104`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "wheelParams": {
          "title": "C++ Info",
          "description": "- name: `wheelParams`(ctype: `hkArray<struct hkpVehicleDataWheelComponentParams>`)\n - offset: `140`(x86)/`144`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkpVehicleDataWheelComponentParams"
          }
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "gravity",
        "numWheels",
        "chassisOrientation",
        "torqueRollFactor",
        "torquePitchFactor",
        "torqueYawFactor",
        "extraTorqueFactor",
        "maxVelocityForPositionalFriction",
        "chassisUnitInertiaYaw",
        "chassisUnitInertiaRoll",
        "chassisUnitInertiaPitch",
        "frictionEqualizer",
        "normalClippingAngleCos",
        "maxFrictionSolverMassRatio",
        "wheelParams",
        "numWheelsPerAxle",
        "frictionDescription",
        "chassisFrictionInertiaInvDiag",
        "alreadyInitialised"
      ]
    },
    "hkpVehicleDataWheelComponentParams": {
      "title": "C++ Info",
      "description": "- name: `hkpVehicleDataWheelComponentParams`\n - version: `0`\n - signature: `0x82fe40e0`\n - size: ` 40`(x86)/` 40`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "axle": {
          "title": "C++ Info",
          "description": "- name: `axle`(ctype: `hkInt8`)\n - offset: ` 36`(x86)/` 36`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "int8"
        },
        "forceFeedbackMultiplier": {
          "title": "C++ Info",
          "description": "- name: `forceFeedbackMultiplier`(ctype: `hkReal`)\n - offset: ` 28`(x86)/` 28`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "friction": {
          "title": "C++ Info",
          "description": "- name: `friction`(ctype: `hkReal`)\n - offset: ` 12`(x86)/` 12`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "mass": {
          "title": "C++ Info",
          "description": "- name: `mass`(ctype: `hkReal`)\n - offset: `  4`(x86)/`  4`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "maxContactBodyAcceleration": {
          "title": "C++ Info",
          "description": "- name: `maxContactBodyAcceleration`(ctype: `hkReal`)\n - offset: ` 32`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "maxFriction": {
          "title": "C++ Info",
          "description": "- name: `maxFriction`(ctype: `hkReal`)\n - offset: ` 20`(x86)/` 20`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "radius": {
          "title": "C++ Info",
          "description": "- name: `radius`(ctype: `hkReal`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "slipAngle": {
          "title": "C++ Info",
          "description": "- name: `slipAngle`(ctype: `hkReal`)\n - offset: ` 24`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "viscosityFriction": {
          "title": "C++ Info",
          "description": "- name: `viscosityFriction`(ctype: `hkReal`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "width": {
          "title": "C++ Info",
          "description": "- name: `width`(ctype: `hkReal`)\n - offset: `  8`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        }
      },
      "required": [
        "radius",
        "mass",
        "width",
        "friction",
        "viscosityFriction",
        "maxFriction",
        "slipAngle",
        "forceFeedbackMultiplier",
        "maxContactBodyAcceleration",
        "axle"
      ]
    },
    "hkpVehicleDefaultAerodynamics": {
      "title": "C++ Info",
      "description": "- name: `hkpVehicleDefaultAerodynamics`\n - version: `0`\n - signature: `0x42fc5bbd`\n - size: ` 48`(x86)/` 48`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "airDensity": {
          "title": "C++ Info",
          "description": "- name: `airDensity`(ctype: `hkReal`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "dragCoefficient": {
          "title": "C++ Info",
          "description": "- name: `dragCoefficient`(ctype: `hkReal`)\n - offset: ` 16`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "extraGravityws": {
          "title": "C++ Info",
          "description": "- name: `extraGravityws`(ctype: `hkVector4`)\n - offset: ` 32`(x86)/` 32`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "frontalArea": {
          "title": "C++ Info",
          "description": "- name: `frontalArea`(ctype: `hkReal`)\n - offset: ` 12`(x86)/` 20`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "liftCoefficient": {
          "title": "C++ Info",
          "description": "- name: `liftCoefficient`(ctype: `hkReal`)\n - offset: ` 20`(x86)/` 28`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "airDensity",
        "frontalArea",
        "dragCoefficient",
        "liftCoefficient",
        "extraGravityws"
      ]
    },
    "hkpVehicleDefaultAnalogDriverInput": {
      "title": "C++ Info",
      "description": "- name: `hkpVehicleDefaultAnalogDriverInput`\n - version: `0`\n - signature: `0x123a5d50`\n - size: ` 24`(x86)/` 32`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "autoReverse": {
          "title": "C++ Info",
          "description": "- name: `autoReverse`(ctype: `hkBool`)\n - offset: ` 20`(x86)/` 28`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "deadZone": {
          "title": "C++ Info",
          "description": "- name: `deadZone`(ctype: `hkReal`)\n - offset: ` 16`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "initialSlope": {
          "title": "C++ Info",
          "description": "- name: `initialSlope`(ctype: `hkReal`)\n - offset: ` 12`(x86)/` 20`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "slopeChangePointX": {
          "title": "C++ Info",
          "description": "- name: `slopeChangePointX`(ctype: `hkReal`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "slopeChangePointX",
        "initialSlope",
        "deadZone",
        "autoReverse"
      ]
    },
    "hkpVehicleDefaultBrake": {
      "title": "C++ Info",
      "description": "- name: `hkpVehicleDefaultBrake`\n - version: `0`\n - signature: `0x4b4f8816`\n - size: ` 24`(x86)/` 40`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "wheelBrakingProperties": {
          "title": "C++ Info",
          "description": "- name: `wheelBrakingProperties`(ctype: `hkArray<struct hkpVehicleDefaultBrakeWheelBrakingProperties>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkpVehicleDefaultBrakeWheelBrakingProperties"
          }
        },
        "wheelsMinTimeToBlock": {
          "title": "C++ Info",
          "description": "- name: `wheelsMinTimeToBlock`(ctype: `hkReal`)\n - offset: ` 20`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "wheelBrakingProperties",
        "wheelsMinTimeToBlock"
      ]
    },
    "hkpVehicleDefaultBrakeWheelBrakingProperties": {
      "title": "C++ Info",
      "description": "- name: `hkpVehicleDefaultBrakeWheelBrakingProperties`\n - version: `0`\n - signature: `0x1ffad971`\n - size: ` 12`(x86)/` 12`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "isConnectedToHandbrake": {
          "title": "C++ Info",
          "description": "- name: `isConnectedToHandbrake`(ctype: `hkBool`)\n - offset: `  8`(x86)/`  8`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "maxBreakingTorque": {
          "title": "C++ Info",
          "description": "- name: `maxBreakingTorque`(ctype: `hkReal`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "minPedalInputToBlock": {
          "title": "C++ Info",
          "description": "- name: `minPedalInputToBlock`(ctype: `hkReal`)\n - offset: `  4`(x86)/`  4`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        }
      },
      "required": [
        "maxBreakingTorque",
        "minPedalInputToBlock",
        "isConnectedToHandbrake"
      ]
    },
    "hkpVehicleDefaultEngine": {
      "title": "C++ Info",
      "description": "- name: `hkpVehicleDefaultEngine`\n - version: `0`\n - signature: `0x56f8ca24`\n - size: ` 48`(x86)/` 56`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "clutchSlipRPM": {
          "title": "C++ Info",
          "description": "- name: `clutchSlipRPM`(ctype: `hkReal`)\n - offset: ` 44`(x86)/` 52`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "maxRPM": {
          "title": "C++ Info",
          "description": "- name: `maxRPM`(ctype: `hkReal`)\n - offset: ` 16`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "maxTorque": {
          "title": "C++ Info",
          "description": "- name: `maxTorque`(ctype: `hkReal`)\n - offset: ` 20`(x86)/` 28`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "minRPM": {
          "title": "C++ Info",
          "description": "- name: `minRPM`(ctype: `hkReal`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "optRPM": {
          "title": "C++ Info",
          "description": "- name: `optRPM`(ctype: `hkReal`)\n - offset: ` 12`(x86)/` 20`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "resistanceFactorAtMaxRPM": {
          "title": "C++ Info",
          "description": "- name: `resistanceFactorAtMaxRPM`(ctype: `hkReal`)\n - offset: ` 40`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "resistanceFactorAtMinRPM": {
          "title": "C++ Info",
          "description": "- name: `resistanceFactorAtMinRPM`(ctype: `hkReal`)\n - offset: ` 32`(x86)/` 40`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "resistanceFactorAtOptRPM": {
          "title": "C++ Info",
          "description": "- name: `resistanceFactorAtOptRPM`(ctype: `hkReal`)\n - offset: ` 36`(x86)/` 44`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "torqueFactorAtMaxRPM": {
          "title": "C++ Info",
          "description": "- name: `torqueFactorAtMaxRPM`(ctype: `hkReal`)\n - offset: ` 28`(x86)/` 36`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "torqueFactorAtMinRPM": {
          "title": "C++ Info",
          "description": "- name: `torqueFactorAtMinRPM`(ctype: `hkReal`)\n - offset: ` 24`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "minRPM",
        "optRPM",
        "maxRPM",
        "maxTorque",
        "torqueFactorAtMinRPM",
        "torqueFactorAtMaxRPM",
        "resistanceFactorAtMinRPM",
        "resistanceFactorAtOptRPM",
        "resistanceFactorAtMaxRPM",
        "clutchSlipRPM"
      ]
    },
    "hkpVehicleDefaultSteering": {
      "title": "C++ Info",
      "description": "- name: `hkpVehicleDefaultSteering`\n - version: `0`\n - signature: `0x8f0411c8`\n - size: ` 28`(x86)/` 40`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "doesWheelSteer": {
          "title": "C++ Info",
          "description": "- name: `doesWheelSteer`(ctype: `hkArray<hkBool>`)\n - offset: ` 16`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "boolean"
          }
        },
        "maxSpeedFullSteeringAngle": {
          "title": "C++ Info",
          "description": "- name: `maxSpeedFullSteeringAngle`(ctype: `hkReal`)\n - offset: ` 12`(x86)/` 20`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "maxSteeringAngle": {
          "title": "C++ Info",
          "description": "- name: `maxSteeringAngle`(ctype: `hkReal`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "maxSteeringAngle",
        "maxSpeedFullSteeringAngle",
        "doesWheelSteer"
      ]
    },
    "hkpVehicleDefaultSuspension": {
      "title": "C++ Info",
      "description": "- name: `hkpVehicleDefaultSuspension`\n - version: `0`\n - signature: `0x21735a24`\n - size: ` 32`(x86)/` 48`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "wheelParams": {
          "title": "C++ Info",
          "description": "- name: `wheelParams`(ctype: `hkArray<struct hkpVehicleSuspensionSuspensionWheelParameters>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkpVehicleSuspensionSuspensionWheelParameters"
          }
        },
        "wheelSpringParams": {
          "title": "C++ Info",
          "description": "- name: `wheelSpringParams`(ctype: `hkArray<struct hkpVehicleDefaultSuspensionWheelSpringSuspensionParameters>`)\n - offset: ` 20`(x86)/` 32`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkpVehicleDefaultSuspensionWheelSpringSuspensionParameters"
          }
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "wheelParams",
        "wheelSpringParams"
      ]
    },
    "hkpVehicleDefaultSuspensionWheelSpringSuspensionParameters": {
      "title": "C++ Info",
      "description": "- name: `hkpVehicleDefaultSuspensionWheelSpringSuspensionParameters`\n - version: `0`\n - signature: `0x7be5bed1`\n - size: ` 12`(x86)/` 12`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "dampingCompression": {
          "title": "C++ Info",
          "description": "- name: `dampingCompression`(ctype: `hkReal`)\n - offset: `  4`(x86)/`  4`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "dampingRelaxation": {
          "title": "C++ Info",
          "description": "- name: `dampingRelaxation`(ctype: `hkReal`)\n - offset: `  8`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "strength": {
          "title": "C++ Info",
          "description": "- name: `strength`(ctype: `hkReal`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        }
      },
      "required": [
        "strength",
        "dampingCompression",
        "dampingRelaxation"
      ]
    },
    "hkpVehicleDefaultTransmission": {
      "title": "C++ Info",
      "description": "- name: `hkpVehicleDefaultTransmission`\n - version: `0`\n - signature: `0x235d5d6b`\n - size: ` 52`(x86)/` 72`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "clutchDelayTime": {
          "title": "C++ Info",
          "description": "- name: `clutchDelayTime`(ctype: `hkReal`)\n - offset: ` 20`(x86)/` 28`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "downshiftRPM": {
          "title": "C++ Info",
          "description": "- name: `downshiftRPM`(ctype: `hkReal`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "gearsRatio": {
          "title": "C++ Info",
          "description": "- name: `gearsRatio`(ctype: `hkArray<hkReal>`)\n - offset: ` 28`(x86)/` 40`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "primaryTransmissionRatio": {
          "title": "C++ Info",
          "description": "- name: `primaryTransmissionRatio`(ctype: `hkReal`)\n - offset: ` 16`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "reverseGearRatio": {
          "title": "C++ Info",
          "description": "- name: `reverseGearRatio`(ctype: `hkReal`)\n - offset: ` 24`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "upshiftRPM": {
          "title": "C++ Info",
          "description": "- name: `upshiftRPM`(ctype: `hkReal`)\n - offset: ` 12`(x86)/` 20`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "wheelsTorqueRatio": {
          "title": "C++ Info",
          "description": "- name: `wheelsTorqueRatio`(ctype: `hkArray<hkReal>`)\n - offset: ` 40`(x86)/` 56`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          }
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "downshiftRPM",
        "upshiftRPM",
        "primaryTransmissionRatio",
        "clutchDelayTime",
        "reverseGearRatio",
        "gearsRatio",
        "wheelsTorqueRatio"
      ]
    },
    "hkpVehicleDefaultVelocityDamper": {
      "title": "C++ Info",
      "description": "- name: `hkpVehicleDefaultVelocityDamper`\n - version: `0`\n - signature: `0x741b8d9e`\n - size: ` 20`(x86)/` 32`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "collisionSpinDamping": {
          "title": "C++ Info",
          "description": "- name: `collisionSpinDamping`(ctype: `hkReal`)\n - offset: ` 12`(x86)/` 20`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "collisionThreshold": {
          "title": "C++ Info",
          "description": "- name: `collisionThreshold`(ctype: `hkReal`)\n - offset: ` 16`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "normalSpinDamping": {
          "title": "C++ Info",
          "description": "- name: `normalSpinDamping`(ctype: `hkReal`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "normalSpinDamping",
        "collisionSpinDamping",
        "collisionThreshold"
      ]
    },
    "hkpVehicleDriverInput": {
      "title": "C++ Info",
      "description": "- name: `hkpVehicleDriverInput`\n - version: `0`\n - signature: `0xda8c7d7d`\n - size: `  8`(x86)/` 16`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount"
      ]
    },
    "hkpVehicleDriverInputAnalogStatus": {
      "title": "C++ Info",
      "description": "- name: `hkpVehicleDriverInputAnalogStatus`\n - version: `0`\n - signature: `0x2b4a5803`\n - size: ` 20`(x86)/` 32`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "handbrakeButtonPressed": {
          "title": "C++ Info",
          "description": "- name: `handbrakeButtonPressed`(ctype: `hkBool`)\n - offset: ` 16`(x86)/` 24`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "positionX": {
          "title": "C++ Info",
          "description": "- name: `positionX`(ctype: `hkReal`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "positionY": {
          "title": "C++ Info",
          "description": "- name: `positionY`(ctype: `hkReal`)\n - offset: ` 12`(x86)/` 20`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "reverseButtonPressed": {
          "title": "C++ Info",
          "description": "- name: `reverseButtonPressed`(ctype: `hkBool`)\n - offset: ` 17`(x86)/` 25`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "positionX",
        "positionY",
        "handbrakeButtonPressed",
        "reverseButtonPressed"
      ]
    },
    "hkpVehicleDriverInputStatus": {
      "title": "C++ Info",
      "description": "- name: `hkpVehicleDriverInputStatus`\n - version: `0`\n - signature: `0xda8c7d7d`\n - size: `  8`(x86)/` 16`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount"
      ]
    },
    "hkpVehicleEngine": {
      "title": "C++ Info",
      "description": "- name: `hkpVehicleEngine`\n - version: `0`\n - signature: `0xda8c7d7d`\n - size: `  8`(x86)/` 16`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount"
      ]
    },
    "hkpVehicleFrictionDescription": {
      "title": "C++ Info",
      "description": "- name: `hkpVehicleFrictionDescription`\n - version: `0`\n - signature: `0x1034549a`\n - size: `208`(x86)/`208`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "axleDescr": {
          "title": "C++ Info",
          "description": "- name: `axleDescr`(ctype: `struct hkpVehicleFrictionDescriptionAxisDescription[2]`)\n - offset: `  8`(x86)/`  8`(x86_64)\n - type_size: `200`(x86)/`200`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkpVehicleFrictionDescriptionAxisDescription"
          },
          "maxItems": 2,
          "minItems": 2
        },
        "chassisMassInv": {
          "title": "C++ Info",
          "description": "- name: `chassisMassInv`(ctype: `hkReal`)\n - offset: `  4`(x86)/`  4`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "wheelDistance": {
          "title": "C++ Info",
          "description": "- name: `wheelDistance`(ctype: `hkReal`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        }
      },
      "required": [
        "wheelDistance",
        "chassisMassInv",
        "axleDescr"
      ]
    },
    "hkpVehicleFrictionDescriptionAxisDescription": {
      "title": "C++ Info",
      "description": "- name: `hkpVehicleFrictionDescriptionAxisDescription`\n - version: `0`\n - signature: `0x59ce153f`\n - size: `100`(x86)/`100`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "frictionCircleYtab": {
          "title": "C++ Info",
          "description": "- name: `frictionCircleYtab`(ctype: `hkReal[16]`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: ` 64`(x86)/` 64`(x86_64)",
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          },
          "maxItems": 16,
          "minItems": 16
        },
        "wheelChassisMassRatio": {
          "title": "C++ Info",
          "description": "- name: `wheelChassisMassRatio`(ctype: `hkReal`)\n - offset: ` 80`(x86)/` 80`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "wheelDownForceFactor": {
          "title": "C++ Info",
          "description": "- name: `wheelDownForceFactor`(ctype: `hkReal`)\n - offset: ` 92`(x86)/` 92`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "wheelDownForceSumFactor": {
          "title": "C++ Info",
          "description": "- name: `wheelDownForceSumFactor`(ctype: `hkReal`)\n - offset: ` 96`(x86)/` 96`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "wheelRadius": {
          "title": "C++ Info",
          "description": "- name: `wheelRadius`(ctype: `hkReal`)\n - offset: ` 84`(x86)/` 84`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "wheelRadiusInv": {
          "title": "C++ Info",
          "description": "- name: `wheelRadiusInv`(ctype: `hkReal`)\n - offset: ` 88`(x86)/` 88`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "wheelSurfaceInertia": {
          "title": "C++ Info",
          "description": "- name: `wheelSurfaceInertia`(ctype: `hkReal`)\n - offset: ` 72`(x86)/` 72`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "wheelSurfaceInertiaInv": {
          "title": "C++ Info",
          "description": "- name: `wheelSurfaceInertiaInv`(ctype: `hkReal`)\n - offset: ` 76`(x86)/` 76`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "xStart": {
          "title": "C++ Info",
          "description": "- name: `xStart`(ctype: `hkReal`)\n - offset: ` 68`(x86)/` 68`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "xStep": {
          "title": "C++ Info",
          "description": "- name: `xStep`(ctype: `hkReal`)\n - offset: ` 64`(x86)/` 64`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        }
      },
      "required": [
        "frictionCircleYtab",
        "xStep",
        "xStart",
        "wheelSurfaceInertia",
        "wheelSurfaceInertiaInv",
        "wheelChassisMassRatio",
        "wheelRadius",
        "wheelRadiusInv",
        "wheelDownForceFactor",
        "wheelDownForceSumFactor"
      ]
    },
    "hkpVehicleFrictionStatus": {
      "title": "C++ Info",
      "description": "- name: `hkpVehicleFrictionStatus`\n - version: `0`\n - signature: `0x1c076a84`\n - size: ` 72`(x86)/` 72`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "axis": {
          "title": "C++ Info",
          "description": "- name: `axis`(ctype: `struct hkpVehicleFrictionStatusAxisStatus[2]`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: ` 72`(x86)/` 72`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkpVehicleFrictionStatusAxisStatus"
          },
          "maxItems": 2,
          "minItems": 2
        }
      },
      "required": [
        "axis"
      ]
    },
    "hkpVehicleFrictionStatusAxisStatus": {
      "title": "C++ Info",
      "description": "- name: `hkpVehicleFrictionStatusAxisStatus`\n - version: `0`\n - signature: `0xe70e2bb4`\n - size: ` 36`(x86)/` 36`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "delayed_forward_impulse": {
          "title": "C++ Info",
          "description": "- name: `delayed_forward_impulse`(ctype: `hkReal`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "forwardRhs": {
          "title": "C++ Info",
          "description": "- name: `forwardRhs`(ctype: `hkReal`)\n - offset: ` 24`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "forward_slip_velocity": {
          "title": "C++ Info",
          "description": "- name: `forward_slip_velocity`(ctype: `hkReal`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "relativeForwardForce": {
          "title": "C++ Info",
          "description": "- name: `relativeForwardForce`(ctype: `hkReal`)\n - offset: ` 32`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "relativeSideForce": {
          "title": "C++ Info",
          "description": "- name: `relativeSideForce`(ctype: `hkReal`)\n - offset: ` 28`(x86)/` 28`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "sideRhs": {
          "title": "C++ Info",
          "description": "- name: `sideRhs`(ctype: `hkReal`)\n - offset: ` 20`(x86)/` 20`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "side_force": {
          "title": "C++ Info",
          "description": "- name: `side_force`(ctype: `hkReal`)\n - offset: ` 12`(x86)/` 12`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "side_slip_velocity": {
          "title": "C++ Info",
          "description": "- name: `side_slip_velocity`(ctype: `hkReal`)\n - offset: `  4`(x86)/`  4`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "skid_energy_density": {
          "title": "C++ Info",
          "description": "- name: `skid_energy_density`(ctype: `hkReal`)\n - offset: `  8`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        }
      },
      "required": [
        "forward_slip_velocity",
        "side_slip_velocity",
        "skid_energy_density",
        "side_force",
        "delayed_forward_impulse",
        "sideRhs",
        "forwardRhs",
        "relativeSideForce",
        "relativeForwardForce"
      ]
    },
    "hkpVehicleInstance": {
      "title": "C++ Info",
      "description": "- name: `hkpVehicleInstance`\n - version: `0`\n - signature: `0x877bb579`\n - size: `212`(x86)/`304`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "aerodynamics": {
          "title": "C++ Info",
          "description": "- name: `aerodynamics`(ctype: `struct hkpVehicleAerodynamics*`)\n - offset: ` 56`(x86)/`112`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "brake": {
          "title": "C++ Info",
          "description": "- name: `brake`(ctype: `struct hkpVehicleBrake*`)\n - offset: ` 48`(x86)/` 96`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "clutchDelayCountdown": {
          "title": "C++ Info",
          "description": "- name: `clutchDelayCountdown`(ctype: `hkReal`)\n - offset: `208`(x86)/`300`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "currentGear": {
          "title": "C++ Info",
          "description": "- name: `currentGear`(ctype: `hkInt8`)\n - offset: `205`(x86)/`297`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "int8"
        },
        "data": {
          "title": "C++ Info",
          "description": "- name: `data`(ctype: `struct hkpVehicleData*`)\n - offset: ` 28`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "delayed": {
          "title": "C++ Info",
          "description": "- name: `delayed`(ctype: `hkBool`)\n - offset: `206`(x86)/`298`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "deviceStatus": {
          "title": "C++ Info",
          "description": "- name: `deviceStatus`(ctype: `struct hkpVehicleDriverInputStatus*`)\n - offset: `156`(x86)/`232`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "driverInput": {
          "title": "C++ Info",
          "description": "- name: `driverInput`(ctype: `struct hkpVehicleDriverInput*`)\n - offset: ` 32`(x86)/` 64`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "engine": {
          "title": "C++ Info",
          "description": "- name: `engine`(ctype: `struct hkpVehicleEngine*`)\n - offset: ` 40`(x86)/` 80`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "entity": {
          "title": "C++ Info",
          "description": "- name: `entity`(ctype: `struct hkpEntity*`)\n - offset: ` 24`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "frictionStatus": {
          "title": "C++ Info",
          "description": "- name: `frictionStatus`(ctype: `struct hkpVehicleFrictionStatus`)\n - offset: ` 84`(x86)/`160`(x86_64)\n - type_size: ` 72`(x86)/` 72`(x86_64)",
          "$ref": "#/$defs/hkpVehicleFrictionStatus"
        },
        "isFixed": {
          "title": "C++ Info",
          "description": "- name: `isFixed`(ctype: `hkArray<hkBool>`)\n - offset: `160`(x86)/`240`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "boolean"
          }
        },
        "isReversing": {
          "title": "C++ Info",
          "description": "- name: `isReversing`(ctype: `hkBool`)\n - offset: `204`(x86)/`296`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "island": {
          "title": "C++ Info",
          "description": "- name: `island`(ctype: `void*`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "mainSteeringAngle": {
          "title": "C++ Info",
          "description": "- name: `mainSteeringAngle`(ctype: `hkReal`)\n - offset: `188`(x86)/`272`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 20`(x86)/` 40`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "rpm": {
          "title": "C++ Info",
          "description": "- name: `rpm`(ctype: `hkReal`)\n - offset: `184`(x86)/`268`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "steering": {
          "title": "C++ Info",
          "description": "- name: `steering`(ctype: `struct hkpVehicleSteering*`)\n - offset: ` 36`(x86)/` 72`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "suspension": {
          "title": "C++ Info",
          "description": "- name: `suspension`(ctype: `struct hkpVehicleSuspension*`)\n - offset: ` 52`(x86)/`104`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "torque": {
          "title": "C++ Info",
          "description": "- name: `torque`(ctype: `hkReal`)\n - offset: `180`(x86)/`264`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "transmission": {
          "title": "C++ Info",
          "description": "- name: `transmission`(ctype: `struct hkpVehicleTransmission*`)\n - offset: ` 44`(x86)/` 88`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "tryingToReverse": {
          "title": "C++ Info",
          "description": "- name: `tryingToReverse`(ctype: `hkBool`)\n - offset: `176`(x86)/`260`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "tyreMarks": {
          "title": "C++ Info",
          "description": "- name: `tyreMarks`(ctype: `struct hkpTyremarksInfo*`)\n - offset: ` 64`(x86)/`128`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "velocityDamper": {
          "title": "C++ Info",
          "description": "- name: `velocityDamper`(ctype: `struct hkpVehicleVelocityDamper*`)\n - offset: ` 68`(x86)/`136`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "wheelCollide": {
          "title": "C++ Info",
          "description": "- name: `wheelCollide`(ctype: `struct hkpVehicleWheelCollide*`)\n - offset: ` 60`(x86)/`120`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "wheelsInfo": {
          "title": "C++ Info",
          "description": "- name: `wheelsInfo`(ctype: `hkArray<struct hkpVehicleInstanceWheelInfo>`)\n - offset: ` 72`(x86)/`144`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkpVehicleInstanceWheelInfo"
          }
        },
        "wheelsSteeringAngle": {
          "title": "C++ Info",
          "description": "- name: `wheelsSteeringAngle`(ctype: `hkArray<hkReal>`)\n - offset: `192`(x86)/`280`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "wheelsTimeSinceMaxPedalInput": {
          "title": "C++ Info",
          "description": "- name: `wheelsTimeSinceMaxPedalInput`(ctype: `hkReal`)\n - offset: `172`(x86)/`256`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "world": {
          "title": "C++ Info",
          "description": "- name: `world`(ctype: `void*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "world",
        "island",
        "userData",
        "entity",
        "data",
        "driverInput",
        "steering",
        "engine",
        "transmission",
        "brake",
        "suspension",
        "aerodynamics",
        "wheelCollide",
        "tyreMarks",
        "velocityDamper",
        "wheelsInfo",
        "frictionStatus",
        "deviceStatus",
        "isFixed",
        "wheelsTimeSinceMaxPedalInput",
        "tryingToReverse",
        "torque",
        "rpm",
        "mainSteeringAngle",
        "wheelsSteeringAngle",
        "isReversing",
        "currentGear",
        "delayed",
        "clutchDelayCountdown"
      ]
    },
    "hkpVehicleInstanceWheelInfo": {
      "title": "C++ Info",
      "description": "- name: `hkpVehicleInstanceWheelInfo`\n - version: `1`\n - signature: `0x99f693f0`\n - size: `224`(x86)/`224`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "contactBody": {
          "title": "C++ Info",
          "description": "- name: `contactBody`(ctype: `void*`)\n - offset: ` 36`(x86)/` 40`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "contactFriction": {
          "title": "C++ Info",
          "description": "- name: `contactFriction`(ctype: `hkReal`)\n - offset: ` 32`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "contactPoint": {
          "title": "C++ Info",
          "description": "- name: `contactPoint`(ctype: `struct hkContactPoint`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: ` 32`(x86)/` 32`(x86_64)",
          "$ref": "#/$defs/hkContactPoint"
        },
        "contactShapeKey": {
          "title": "C++ Info",
          "description": "- name: `contactShapeKey`(ctype: `hkUint32[8]`)\n - offset: ` 40`(x86)/` 48`(x86_64)\n - type_size: ` 32`(x86)/` 32`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          },
          "maxItems": 8,
          "minItems": 8
        },
        "currentSuspensionLength": {
          "title": "C++ Info",
          "description": "- name: `currentSuspensionLength`(ctype: `hkReal`)\n - offset: `112`(x86)/`112`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "forwardSlipVelocity": {
          "title": "C++ Info",
          "description": "- name: `forwardSlipVelocity`(ctype: `hkReal`)\n - offset: `208`(x86)/`208`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "hardPointWs": {
          "title": "C++ Info",
          "description": "- name: `hardPointWs`(ctype: `hkVector4`)\n - offset: ` 80`(x86)/` 80`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "rayEndPointWs": {
          "title": "C++ Info",
          "description": "- name: `rayEndPointWs`(ctype: `hkVector4`)\n - offset: ` 96`(x86)/` 96`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "sideForce": {
          "title": "C++ Info",
          "description": "- name: `sideForce`(ctype: `hkReal`)\n - offset: `204`(x86)/`204`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "sideSlipVelocity": {
          "title": "C++ Info",
          "description": "- name: `sideSlipVelocity`(ctype: `hkReal`)\n - offset: `212`(x86)/`212`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "skidEnergyDensity": {
          "title": "C++ Info",
          "description": "- name: `skidEnergyDensity`(ctype: `hkReal`)\n - offset: `200`(x86)/`200`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "spinAngle": {
          "title": "C++ Info",
          "description": "- name: `spinAngle`(ctype: `hkReal`)\n - offset: `196`(x86)/`196`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "spinAxisChassisSpace": {
          "title": "C++ Info",
          "description": "- name: `spinAxisChassisSpace`(ctype: `hkVector4`)\n - offset: `144`(x86)/`144`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "spinAxisWs": {
          "title": "C++ Info",
          "description": "- name: `spinAxisWs`(ctype: `hkVector4`)\n - offset: `160`(x86)/`160`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "spinVelocity": {
          "title": "C++ Info",
          "description": "- name: `spinVelocity`(ctype: `hkReal`)\n - offset: `192`(x86)/`192`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "steeringOrientationChassisSpace": {
          "title": "C++ Info",
          "description": "- name: `steeringOrientationChassisSpace`(ctype: `hkQuaternion`)\n - offset: `176`(x86)/`176`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Quaternion"
        },
        "suspensionDirectionWs": {
          "title": "C++ Info",
          "description": "- name: `suspensionDirectionWs`(ctype: `hkVector4`)\n - offset: `128`(x86)/`128`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        }
      },
      "required": [
        "contactPoint",
        "contactFriction",
        "contactBody",
        "contactShapeKey",
        "hardPointWs",
        "rayEndPointWs",
        "currentSuspensionLength",
        "suspensionDirectionWs",
        "spinAxisChassisSpace",
        "spinAxisWs",
        "steeringOrientationChassisSpace",
        "spinVelocity",
        "spinAngle",
        "skidEnergyDensity",
        "sideForce",
        "forwardSlipVelocity",
        "sideSlipVelocity"
      ]
    },
    "hkpVehicleLinearCastBatchingManager": {
      "title": "C++ Info",
      "description": "- name: `hkpVehicleLinearCastBatchingManager`\n - version: `0`\n - signature: `0xed529f13`\n - size: ` 24`(x86)/` 40`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "registeredVehicles": {
          "title": "C++ Info",
          "description": "- name: `registeredVehicles`(ctype: `hkArray<hkpVehicleInstance*>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "totalNumWheels": {
          "title": "C++ Info",
          "description": "- name: `totalNumWheels`(ctype: `hkUint16`)\n - offset: ` 20`(x86)/` 32`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "registeredVehicles",
        "totalNumWheels"
      ]
    },
    "hkpVehicleLinearCastWheelCollide": {
      "title": "C++ Info",
      "description": "- name: `hkpVehicleLinearCastWheelCollide`\n - version: `0`\n - signature: `0xc59399d0`\n - size: ` 52`(x86)/` 80`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum unknown`)\n - offset: `  9`(x86)/` 17`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "alreadyUsed": {
          "title": "C++ Info",
          "description": "- name: `alreadyUsed`(ctype: `hkBool`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "maxExtraPenetration": {
          "title": "C++ Info",
          "description": "- name: `maxExtraPenetration`(ctype: `hkReal`)\n - offset: ` 44`(x86)/` 72`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "rejectChassisListener": {
          "title": "C++ Info",
          "description": "- name: `rejectChassisListener`(ctype: `struct hkpRejectChassisListener`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: ` 16`(x86)/` 24`(x86_64)",
          "$ref": "#/$defs/hkpRejectChassisListener"
        },
        "startPointTolerance": {
          "title": "C++ Info",
          "description": "- name: `startPointTolerance`(ctype: `hkReal`)\n - offset: ` 48`(x86)/` 76`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "wheelCollisionFilterInfo": {
          "title": "C++ Info",
          "description": "- name: `wheelCollisionFilterInfo`(ctype: `hkUint32`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "wheelStates": {
          "title": "C++ Info",
          "description": "- name: `wheelStates`(ctype: `hkArray<struct hkpVehicleLinearCastWheelCollideWheelState>`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkpVehicleLinearCastWheelCollideWheelState"
          }
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "alreadyUsed",
        "type",
        "wheelCollisionFilterInfo",
        "wheelStates",
        "rejectChassisListener",
        "maxExtraPenetration",
        "startPointTolerance"
      ]
    },
    "hkpVehicleLinearCastWheelCollideWheelState": {
      "title": "C++ Info",
      "description": "- name: `hkpVehicleLinearCastWheelCollideWheelState`\n - version: `0`\n - signature: `0x2a9acf98`\n - size: ` 96`(x86)/` 96`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "phantom": {
          "title": "C++ Info",
          "description": "- name: `phantom`(ctype: `struct hkpAabbPhantom*`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "shape": {
          "title": "C++ Info",
          "description": "- name: `shape`(ctype: `struct hkpShape*`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "to": {
          "title": "C++ Info",
          "description": "- name: `to`(ctype: `hkVector4`)\n - offset: ` 80`(x86)/` 80`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "transform": {
          "title": "C++ Info",
          "description": "- name: `transform`(ctype: `hkTransform`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: ` 64`(x86)/` 64`(x86_64)",
          "$ref": "#/$defs/Transform"
        }
      },
      "required": [
        "phantom",
        "shape",
        "transform",
        "to"
      ]
    },
    "hkpVehicleManager": {
      "title": "C++ Info",
      "description": "- name: `hkpVehicleManager`\n - version: `0`\n - signature: `0xe2f7d6a7`\n - size: ` 20`(x86)/` 32`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "registeredVehicles": {
          "title": "C++ Info",
          "description": "- name: `registeredVehicles`(ctype: `hkArray<hkpVehicleInstance*>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "registeredVehicles"
      ]
    },
    "hkpVehicleRayCastBatchingManager": {
      "title": "C++ Info",
      "description": "- name: `hkpVehicleRayCastBatchingManager`\n - version: `0`\n - signature: `0xed529f13`\n - size: ` 24`(x86)/` 40`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "registeredVehicles": {
          "title": "C++ Info",
          "description": "- name: `registeredVehicles`(ctype: `hkArray<hkpVehicleInstance*>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "totalNumWheels": {
          "title": "C++ Info",
          "description": "- name: `totalNumWheels`(ctype: `hkUint16`)\n - offset: ` 20`(x86)/` 32`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "registeredVehicles",
        "totalNumWheels"
      ]
    },
    "hkpVehicleRayCastWheelCollide": {
      "title": "C++ Info",
      "description": "- name: `hkpVehicleRayCastWheelCollide`\n - version: `1`\n - signature: `0x41efd9e3`\n - size: ` 36`(x86)/` 64`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum unknown`)\n - offset: `  9`(x86)/` 17`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "alreadyUsed": {
          "title": "C++ Info",
          "description": "- name: `alreadyUsed`(ctype: `hkBool`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "phantom": {
          "title": "C++ Info",
          "description": "- name: `phantom`(ctype: `struct hkpAabbPhantom*`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "rejectRayChassisListener": {
          "title": "C++ Info",
          "description": "- name: `rejectRayChassisListener`(ctype: `struct hkpRejectChassisListener`)\n - offset: ` 20`(x86)/` 40`(x86_64)\n - type_size: ` 16`(x86)/` 24`(x86_64)",
          "$ref": "#/$defs/hkpRejectChassisListener"
        },
        "wheelCollisionFilterInfo": {
          "title": "C++ Info",
          "description": "- name: `wheelCollisionFilterInfo`(ctype: `hkUint32`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "alreadyUsed",
        "type",
        "wheelCollisionFilterInfo",
        "phantom",
        "rejectRayChassisListener"
      ]
    },
    "hkpVehicleSteering": {
      "title": "C++ Info",
      "description": "- name: `hkpVehicleSteering`\n - version: `0`\n - signature: `0xda8c7d7d`\n - size: `  8`(x86)/` 16`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount"
      ]
    },
    "hkpVehicleSuspension": {
      "title": "C++ Info",
      "description": "- name: `hkpVehicleSuspension`\n - version: `0`\n - signature: `0xaf5056fa`\n - size: ` 20`(x86)/` 32`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "wheelParams": {
          "title": "C++ Info",
          "description": "- name: `wheelParams`(ctype: `hkArray<struct hkpVehicleSuspensionSuspensionWheelParameters>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkpVehicleSuspensionSuspensionWheelParameters"
          }
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "wheelParams"
      ]
    },
    "hkpVehicleSuspensionSuspensionWheelParameters": {
      "title": "C++ Info",
      "description": "- name: `hkpVehicleSuspensionSuspensionWheelParameters`\n - version: `0`\n - signature: `0x358bfe9c`\n - size: ` 48`(x86)/` 48`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "directionChassisSpace": {
          "title": "C++ Info",
          "description": "- name: `directionChassisSpace`(ctype: `hkVector4`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "hardpointChassisSpace": {
          "title": "C++ Info",
          "description": "- name: `hardpointChassisSpace`(ctype: `hkVector4`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "length": {
          "title": "C++ Info",
          "description": "- name: `length`(ctype: `hkReal`)\n - offset: ` 32`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        }
      },
      "required": [
        "hardpointChassisSpace",
        "directionChassisSpace",
        "length"
      ]
    },
    "hkpVehicleTransmission": {
      "title": "C++ Info",
      "description": "- name: `hkpVehicleTransmission`\n - version: `0`\n - signature: `0xda8c7d7d`\n - size: `  8`(x86)/` 16`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount"
      ]
    },
    "hkpVehicleVelocityDamper": {
      "title": "C++ Info",
      "description": "- name: `hkpVehicleVelocityDamper`\n - version: `0`\n - signature: `0xda8c7d7d`\n - size: `  8`(x86)/` 16`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount"
      ]
    },
    "hkpVehicleWheelCollide": {
      "title": "C++ Info",
      "description": "- name: `hkpVehicleWheelCollide`\n - version: `0`\n - signature: `0x4a50fcb`\n - size: ` 12`(x86)/` 24`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum unknown`)\n - offset: `  9`(x86)/` 17`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "alreadyUsed": {
          "title": "C++ Info",
          "description": "- name: `alreadyUsed`(ctype: `hkBool`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "alreadyUsed",
        "type"
      ]
    },
    "hkpVelocityConstraintMotor": {
      "title": "C++ Info",
      "description": "- name: `hkpVelocityConstraintMotor`\n - version: `0`\n - signature: `0xfca2fcc3`\n - size: ` 32`(x86)/` 48`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum MotorType`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/MotorType"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "maxForce": {
          "title": "C++ Info",
          "description": "- name: `maxForce`(ctype: `hkReal`)\n - offset: ` 16`(x86)/` 28`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "minForce": {
          "title": "C++ Info",
          "description": "- name: `minForce`(ctype: `hkReal`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "tau": {
          "title": "C++ Info",
          "description": "- name: `tau`(ctype: `hkReal`)\n - offset: ` 20`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "useVelocityTargetFromConstraintTargets": {
          "title": "C++ Info",
          "description": "- name: `useVelocityTargetFromConstraintTargets`(ctype: `hkBool`)\n - offset: ` 28`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "velocityTarget": {
          "title": "C++ Info",
          "description": "- name: `velocityTarget`(ctype: `hkReal`)\n - offset: ` 24`(x86)/` 36`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "type",
        "minForce",
        "maxForce",
        "tau",
        "velocityTarget",
        "useVelocityTargetFromConstraintTargets"
      ]
    },
    "hkpViscousSurfaceModifierConstraintAtom": {
      "title": "C++ Info",
      "description": "- name: `hkpViscousSurfaceModifierConstraintAtom`\n - version: `0`\n - signature: `0x5c6aa14d`\n - size: ` 32`(x86)/` 48`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum AtomType`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "$ref": "#/$defs/AtomType"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "child": {
          "title": "C++ Info",
          "description": "- name: `child`(ctype: `struct hkpConstraintAtom*`)\n - offset: ` 20`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "childSize": {
          "title": "C++ Info",
          "description": "- name: `childSize`(ctype: `hkUint16`)\n - offset: ` 18`(x86)/` 18`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "modifierAtomSize": {
          "title": "C++ Info",
          "description": "- name: `modifierAtomSize`(ctype: `hkUint16`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `ALIGN_16`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "pad": {
          "title": "C++ Info",
          "description": "- name: `pad`(ctype: `hkUint32[2]`)\n - offset: ` 24`(x86)/` 32`(x86_64)\n - type_size: `  8`(x86)/`  8`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          },
          "maxItems": 2,
          "minItems": 2
        }
      },
      "required": [
        "type",
        "modifierAtomSize",
        "childSize",
        "child",
        "pad"
      ]
    },
    "hkpWeldingUtility": {
      "title": "C++ Info",
      "description": "- name: `hkpWeldingUtility`\n - version: `0`\n - signature: `0xb2b41feb`\n - size: `  1`(x86)/`  1`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        }
      }
    },
    "hkpWheelConstraintData": {
      "title": "C++ Info",
      "description": "- name: `hkpWheelConstraintData`\n - version: `0`\n - signature: `0xb4c46671`\n - size: `352`(x86)/`368`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "atoms": {
          "title": "C++ Info",
          "description": "- name: `atoms`(ctype: `struct hkpWheelConstraintDataAtoms`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: `304`(x86)/`304`(x86_64)\n - flags: `ALIGN_16`",
          "$ref": "#/$defs/hkpWheelConstraintDataAtoms"
        },
        "initialAxleInB": {
          "title": "C++ Info",
          "description": "- name: `initialAxleInB`(ctype: `hkVector4`)\n - offset: `320`(x86)/`336`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "initialSteeringAxisInB": {
          "title": "C++ Info",
          "description": "- name: `initialSteeringAxisInB`(ctype: `hkVector4`)\n - offset: `336`(x86)/`352`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "userData",
        "atoms",
        "initialAxleInB",
        "initialSteeringAxisInB"
      ]
    },
    "hkpWheelConstraintDataAtoms": {
      "title": "C++ Info",
      "description": "- name: `hkpWheelConstraintDataAtoms`\n - version: `0`\n - signature: `0x1188cbe1`\n - size: `304`(x86)/`304`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "2dAng": {
          "title": "C++ Info",
          "description": "- name: `2dAng`(ctype: `struct hkp2dAngConstraintAtom`)\n - offset: `288`(x86)/`288`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "$ref": "#/$defs/hkp2dAngConstraintAtom"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "lin0Limit": {
          "title": "C++ Info",
          "description": "- name: `lin0Limit`(ctype: `struct hkpLinLimitConstraintAtom`)\n - offset: `144`(x86)/`144`(x86_64)\n - type_size: ` 12`(x86)/` 12`(x86_64)",
          "$ref": "#/$defs/hkpLinLimitConstraintAtom"
        },
        "lin0Soft": {
          "title": "C++ Info",
          "description": "- name: `lin0Soft`(ctype: `struct hkpLinSoftConstraintAtom`)\n - offset: `156`(x86)/`156`(x86_64)\n - type_size: ` 12`(x86)/` 12`(x86_64)",
          "$ref": "#/$defs/hkpLinSoftConstraintAtom"
        },
        "lin1": {
          "title": "C++ Info",
          "description": "- name: `lin1`(ctype: `struct hkpLinConstraintAtom`)\n - offset: `168`(x86)/`168`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "$ref": "#/$defs/hkpLinConstraintAtom"
        },
        "lin2": {
          "title": "C++ Info",
          "description": "- name: `lin2`(ctype: `struct hkpLinConstraintAtom`)\n - offset: `172`(x86)/`172`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "$ref": "#/$defs/hkpLinConstraintAtom"
        },
        "steeringBase": {
          "title": "C++ Info",
          "description": "- name: `steeringBase`(ctype: `struct hkpSetLocalRotationsConstraintAtom`)\n - offset: `176`(x86)/`176`(x86_64)\n - type_size: `112`(x86)/`112`(x86_64)",
          "$ref": "#/$defs/hkpSetLocalRotationsConstraintAtom"
        },
        "suspensionBase": {
          "title": "C++ Info",
          "description": "- name: `suspensionBase`(ctype: `struct hkpSetLocalTransformsConstraintAtom`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `144`(x86)/`144`(x86_64)",
          "$ref": "#/$defs/hkpSetLocalTransformsConstraintAtom"
        }
      },
      "required": [
        "suspensionBase",
        "lin0Limit",
        "lin0Soft",
        "lin1",
        "lin2",
        "steeringBase",
        "2dAng"
      ]
    },
    "hkpWorld": {
      "title": "C++ Info",
      "description": "- name: `hkpWorld`\n - version: `0`\n - signature: `0xaadcec37`\n - size: `864`(x86)/`1072`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "actionListeners": {
          "title": "C++ Info",
          "description": "- name: `actionListeners`(ctype: `hkArray<void*>`)\n - offset: `296`(x86)/`424`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "activeSimulationIslands": {
          "title": "C++ Info",
          "description": "- name: `activeSimulationIslands`(ctype: `hkArray<void*>`)\n - offset: ` 40`(x86)/` 64`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allowIntegrationOfIslandsWithoutConstraintsInASeparateJob": {
          "title": "C++ Info",
          "description": "- name: `allowIntegrationOfIslandsWithoutConstraintsInASeparateJob`(ctype: `hkBool`)\n - offset: `181`(x86)/`289`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "assertOnRunningOutOfSolverMemory": {
          "title": "C++ Info",
          "description": "- name: `assertOnRunningOutOfSolverMemory`(ctype: `hkBool`)\n - offset: ` 84`(x86)/`128`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "autoUpdateTree": {
          "title": "C++ Info",
          "description": "- name: `autoUpdateTree`(ctype: `hkBool`)\n - offset: ` 96`(x86)/`152`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "blockExecutingPendingOperations": {
          "title": "C++ Info",
          "description": "- name: `blockExecutingPendingOperations`(ctype: `hkBool`)\n - offset: `156`(x86)/`256`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "broadPhase": {
          "title": "C++ Info",
          "description": "- name: `broadPhase`(ctype: `void*`)\n - offset: ` 88`(x86)/`136`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "broadPhaseBorder": {
          "title": "C++ Info",
          "description": "- name: `broadPhaseBorder`(ctype: `void*`)\n - offset: `468`(x86)/`656`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "broadPhaseBorderListener": {
          "title": "C++ Info",
          "description": "- name: `broadPhaseBorderListener`(ctype: `void*`)\n - offset: `112`(x86)/`184`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "broadPhaseDispatcher": {
          "title": "C++ Info",
          "description": "- name: `broadPhaseDispatcher`(ctype: `void*`)\n - offset: `100`(x86)/`160`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "broadPhaseExtents": {
          "title": "C++ Info",
          "description": "- name: `broadPhaseExtents`(ctype: `hkVector4[2]`)\n - offset: `800`(x86)/`1008`(x86_64)\n - type_size: ` 32`(x86)/` 32`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/Vector4"
          },
          "maxItems": 2,
          "minItems": 2
        },
        "broadPhaseNumMarkers": {
          "title": "C++ Info",
          "description": "- name: `broadPhaseNumMarkers`(ctype: `hkInt32`)\n - offset: `832`(x86)/`1040`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "broadPhaseQuerySize": {
          "title": "C++ Info",
          "description": "- name: `broadPhaseQuerySize`(ctype: `hkInt32`)\n - offset: `840`(x86)/`1048`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "broadPhaseUpdateSize": {
          "title": "C++ Info",
          "description": "- name: `broadPhaseUpdateSize`(ctype: `hkInt32`)\n - offset: `844`(x86)/`1052`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "collisionDispatcher": {
          "title": "C++ Info",
          "description": "- name: `collisionDispatcher`(ctype: `void*`)\n - offset: `128`(x86)/`216`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "collisionFilter": {
          "title": "C++ Info",
          "description": "- name: `collisionFilter`(ctype: `void*`)\n - offset: `124`(x86)/`208`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "collisionInput": {
          "title": "C++ Info",
          "description": "- name: `collisionInput`(ctype: `void*`)\n - offset: `120`(x86)/`200`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "constraintListeners": {
          "title": "C++ Info",
          "description": "- name: `constraintListeners`(ctype: `hkArray<void*>`)\n - offset: `332`(x86)/`472`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "contactImpulseLimitBreachedListeners": {
          "title": "C++ Info",
          "description": "- name: `contactImpulseLimitBreachedListeners`(ctype: `hkArray<void*>`)\n - offset: `440`(x86)/`616`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "contactListeners": {
          "title": "C++ Info",
          "description": "- name: `contactListeners`(ctype: `hkArray<void*>`)\n - offset: `428`(x86)/`600`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "contactPointGeneration": {
          "title": "C++ Info",
          "description": "- name: `contactPointGeneration`(ctype: `enum unknown`)\n - offset: `848`(x86)/`1056`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int8"
        },
        "convexListFilter": {
          "title": "C++ Info",
          "description": "- name: `convexListFilter`(ctype: `void*`)\n - offset: `132`(x86)/`224`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "criticalOperationsAllowed": {
          "title": "C++ Info",
          "description": "- name: `criticalOperationsAllowed`(ctype: `hkBool`)\n - offset: `157`(x86)/`257`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "criticalOperationsLockCount": {
          "title": "C++ Info",
          "description": "- name: `criticalOperationsLockCount`(ctype: `hkInt32`)\n - offset: `148`(x86)/`248`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "criticalOperationsLockCountForPhantoms": {
          "title": "C++ Info",
          "description": "- name: `criticalOperationsLockCountForPhantoms`(ctype: `hkInt32`)\n - offset: `152`(x86)/`252`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "deactivationReferenceDistance": {
          "title": "C++ Info",
          "description": "- name: `deactivationReferenceDistance`(ctype: `hkReal`)\n - offset: `220`(x86)/`344`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "destructionWorld": {
          "title": "C++ Info",
          "description": "- name: `destructionWorld`(ctype: `void*`)\n - offset: `472`(x86)/`664`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "dirtySimulationIslands": {
          "title": "C++ Info",
          "description": "- name: `dirtySimulationIslands`(ctype: `hkArray<void*>`)\n - offset: ` 64`(x86)/` 96`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "enableToiWeldRejection": {
          "title": "C++ Info",
          "description": "- name: `enableToiWeldRejection`(ctype: `hkBool`)\n - offset: `216`(x86)/`340`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "entityEntityBroadPhaseListener": {
          "title": "C++ Info",
          "description": "- name: `entityEntityBroadPhaseListener`(ctype: `void*`)\n - offset: `108`(x86)/`176`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "entityListeners": {
          "title": "C++ Info",
          "description": "- name: `entityListeners`(ctype: `hkArray<void*>`)\n - offset: `308`(x86)/`440`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "fixedIsland": {
          "title": "C++ Info",
          "description": "- name: `fixedIsland`(ctype: `void*`)\n - offset: ` 32`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "fixedRigidBody": {
          "title": "C++ Info",
          "description": "- name: `fixedRigidBody`(ctype: `struct hkpRigidBody*`)\n - offset: ` 36`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "gravity": {
          "title": "C++ Info",
          "description": "- name: `gravity`(ctype: `hkVector4`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "inactiveSimulationIslands": {
          "title": "C++ Info",
          "description": "- name: `inactiveSimulationIslands`(ctype: `hkArray<void*>`)\n - offset: ` 52`(x86)/` 80`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isLocked": {
          "title": "C++ Info",
          "description": "- name: `isLocked`(ctype: `hkInt32`)\n - offset: `192`(x86)/`304`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "islandActivationListeners": {
          "title": "C++ Info",
          "description": "- name: `islandActivationListeners`(ctype: `hkArray<void*>`)\n - offset: `356`(x86)/`504`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "islandDirtyListCriticalSection": {
          "title": "C++ Info",
          "description": "- name: `islandDirtyListCriticalSection`(ctype: `void*`)\n - offset: `196`(x86)/`312`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "islandPostCollideListeners": {
          "title": "C++ Info",
          "description": "- name: `islandPostCollideListeners`(ctype: `hkArray<void*>`)\n - offset: `416`(x86)/`584`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "islandPostIntegrateListeners": {
          "title": "C++ Info",
          "description": "- name: `islandPostIntegrateListeners`(ctype: `hkArray<void*>`)\n - offset: `404`(x86)/`568`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "kdTreeManager": {
          "title": "C++ Info",
          "description": "- name: `kdTreeManager`(ctype: `void*`)\n - offset: ` 92`(x86)/`144`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "lastConstraintUid": {
          "title": "C++ Info",
          "description": "- name: `lastConstraintUid`(ctype: `hkUint32`)\n - offset: `280`(x86)/`404`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "lastEntityUid": {
          "title": "C++ Info",
          "description": "- name: `lastEntityUid`(ctype: `hkUint32`)\n - offset: `272`(x86)/`396`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "lastIslandUid": {
          "title": "C++ Info",
          "description": "- name: `lastIslandUid`(ctype: `hkUint32`)\n - offset: `276`(x86)/`400`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "maintenanceMgr": {
          "title": "C++ Info",
          "description": "- name: `maintenanceMgr`(ctype: `void*`)\n - offset: ` 76`(x86)/`112`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "maxEntriesPerToiMidphaseCollideTask": {
          "title": "C++ Info",
          "description": "- name: `maxEntriesPerToiMidphaseCollideTask`(ctype: `hkInt32`)\n - offset: `240`(x86)/`364`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "maxEntriesPerToiNarrowphaseCollideTask": {
          "title": "C++ Info",
          "description": "- name: `maxEntriesPerToiNarrowphaseCollideTask`(ctype: `hkInt32`)\n - offset: `244`(x86)/`368`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "maxNumToiCollisionPairsSinglethreaded": {
          "title": "C++ Info",
          "description": "- name: `maxNumToiCollisionPairsSinglethreaded`(ctype: `hkInt32`)\n - offset: `248`(x86)/`372`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "maxSectorsPerMidphaseCollideTask": {
          "title": "C++ Info",
          "description": "- name: `maxSectorsPerMidphaseCollideTask`(ctype: `hkInt32`)\n - offset: `228`(x86)/`352`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "maxSectorsPerNarrowphaseCollideTask": {
          "title": "C++ Info",
          "description": "- name: `maxSectorsPerNarrowphaseCollideTask`(ctype: `hkInt32`)\n - offset: `232`(x86)/`356`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "memoryWatchDog": {
          "title": "C++ Info",
          "description": "- name: `memoryWatchDog`(ctype: `void*`)\n - offset: ` 80`(x86)/`120`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "minDesiredIslandSize": {
          "title": "C++ Info",
          "description": "- name: `minDesiredIslandSize`(ctype: `hkUint32`)\n - offset: `184`(x86)/`292`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "modifyConstraintCriticalSection": {
          "title": "C++ Info",
          "description": "- name: `modifyConstraintCriticalSection`(ctype: `void*`)\n - offset: `188`(x86)/`296`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "multiThreadCheck": {
          "title": "C++ Info",
          "description": "- name: `multiThreadCheck`(ctype: `struct hkMultiThreadCheck`)\n - offset: `168`(x86)/`276`(x86_64)\n - type_size: ` 12`(x86)/` 12`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "$ref": "#/$defs/hkMultiThreadCheck"
        },
        "multithreadedSimulationJobData": {
          "title": "C++ Info",
          "description": "- name: `multithreadedSimulationJobData`(ctype: `void*`)\n - offset: `116`(x86)/`192`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "npWorld": {
          "title": "C++ Info",
          "description": "- name: `npWorld`(ctype: `void*`)\n - offset: `476`(x86)/`672`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "numToisTillAllowedPenetrationSimplifiedToi": {
          "title": "C++ Info",
          "description": "- name: `numToisTillAllowedPenetrationSimplifiedToi`(ctype: `hkReal`)\n - offset: `256`(x86)/`380`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "numToisTillAllowedPenetrationToi": {
          "title": "C++ Info",
          "description": "- name: `numToisTillAllowedPenetrationToi`(ctype: `hkReal`)\n - offset: `260`(x86)/`384`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "numToisTillAllowedPenetrationToiForced": {
          "title": "C++ Info",
          "description": "- name: `numToisTillAllowedPenetrationToiForced`(ctype: `hkReal`)\n - offset: `268`(x86)/`392`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "numToisTillAllowedPenetrationToiHigher": {
          "title": "C++ Info",
          "description": "- name: `numToisTillAllowedPenetrationToiHigher`(ctype: `hkReal`)\n - offset: `264`(x86)/`388`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "pendingBodyOperationsCount": {
          "title": "C++ Info",
          "description": "- name: `pendingBodyOperationsCount`(ctype: `hkInt32`)\n - offset: `144`(x86)/`244`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int32"
        },
        "pendingOperationQueueCount": {
          "title": "C++ Info",
          "description": "- name: `pendingOperationQueueCount`(ctype: `hkInt32`)\n - offset: `164`(x86)/`272`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "pendingOperationQueues": {
          "title": "C++ Info",
          "description": "- name: `pendingOperationQueues`(ctype: `void*`)\n - offset: `160`(x86)/`264`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "pendingOperations": {
          "title": "C++ Info",
          "description": "- name: `pendingOperations`(ctype: `void*`)\n - offset: `136`(x86)/`232`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "pendingOperationsCount": {
          "title": "C++ Info",
          "description": "- name: `pendingOperationsCount`(ctype: `hkInt32`)\n - offset: `140`(x86)/`240`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "phantomBroadPhaseListener": {
          "title": "C++ Info",
          "description": "- name: `phantomBroadPhaseListener`(ctype: `void*`)\n - offset: `104`(x86)/`168`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "phantomListeners": {
          "title": "C++ Info",
          "description": "- name: `phantomListeners`(ctype: `hkArray<void*>`)\n - offset: `320`(x86)/`456`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "phantoms": {
          "title": "C++ Info",
          "description": "- name: `phantoms`(ctype: `hkArray<hkpPhantom*>`)\n - offset: `284`(x86)/`408`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "processActionsInSingleThread": {
          "title": "C++ Info",
          "description": "- name: `processActionsInSingleThread`(ctype: `hkBool`)\n - offset: `180`(x86)/`288`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "processToisMultithreaded": {
          "title": "C++ Info",
          "description": "- name: `processToisMultithreaded`(ctype: `hkBool`)\n - offset: `236`(x86)/`360`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "propertyMasterLock": {
          "title": "C++ Info",
          "description": "- name: `propertyMasterLock`(ctype: `void*`)\n - offset: `200`(x86)/`320`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "shouldActivateOnRigidBodyTransformChange": {
          "title": "C++ Info",
          "description": "- name: `shouldActivateOnRigidBodyTransformChange`(ctype: `hkBool`)\n - offset: `218`(x86)/`342`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "simulation": {
          "title": "C++ Info",
          "description": "- name: `simulation`(ctype: `struct hkpSimulation*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "simulationType": {
          "title": "C++ Info",
          "description": "- name: `simulationType`(ctype: `enum unknown`)\n - offset: `252`(x86)/`376`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int32"
        },
        "sizeOfToiEventQueue": {
          "title": "C++ Info",
          "description": "- name: `sizeOfToiEventQueue`(ctype: `hkInt32`)\n - offset: `836`(x86)/`1044`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "snapCollisionToConcaveEdgeThreshold": {
          "title": "C++ Info",
          "description": "- name: `snapCollisionToConcaveEdgeThreshold`(ctype: `hkReal`)\n - offset: `212`(x86)/`336`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "snapCollisionToConvexEdgeThreshold": {
          "title": "C++ Info",
          "description": "- name: `snapCollisionToConvexEdgeThreshold`(ctype: `hkReal`)\n - offset: `208`(x86)/`332`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "toiCollisionResponseRotateNormal": {
          "title": "C++ Info",
          "description": "- name: `toiCollisionResponseRotateNormal`(ctype: `hkReal`)\n - offset: `224`(x86)/`348`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "useHybridBroadphase": {
          "title": "C++ Info",
          "description": "- name: `useHybridBroadphase`(ctype: `hkBool`)\n - offset: `205`(x86)/`329`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "boolean"
        },
        "violatedConstraintArray": {
          "title": "C++ Info",
          "description": "- name: `violatedConstraintArray`(ctype: `void*`)\n - offset: `464`(x86)/`648`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "wantDeactivation": {
          "title": "C++ Info",
          "description": "- name: `wantDeactivation`(ctype: `hkBool`)\n - offset: `217`(x86)/`341`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "wantSimulationIslands": {
          "title": "C++ Info",
          "description": "- name: `wantSimulationIslands`(ctype: `hkBool`)\n - offset: `204`(x86)/`328`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "worldDeletionListeners": {
          "title": "C++ Info",
          "description": "- name: `worldDeletionListeners`(ctype: `hkArray<void*>`)\n - offset: `344`(x86)/`488`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "worldExtensions": {
          "title": "C++ Info",
          "description": "- name: `worldExtensions`(ctype: `hkArray<void*>`)\n - offset: `452`(x86)/`632`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "worldPostCollideListeners": {
          "title": "C++ Info",
          "description": "- name: `worldPostCollideListeners`(ctype: `hkArray<void*>`)\n - offset: `392`(x86)/`552`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "worldPostIntegrateListeners": {
          "title": "C++ Info",
          "description": "- name: `worldPostIntegrateListeners`(ctype: `hkArray<void*>`)\n - offset: `380`(x86)/`536`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "worldPostSimulationListeners": {
          "title": "C++ Info",
          "description": "- name: `worldPostSimulationListeners`(ctype: `hkArray<void*>`)\n - offset: `368`(x86)/`520`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "simulation",
        "gravity",
        "fixedIsland",
        "fixedRigidBody",
        "activeSimulationIslands",
        "inactiveSimulationIslands",
        "dirtySimulationIslands",
        "maintenanceMgr",
        "memoryWatchDog",
        "assertOnRunningOutOfSolverMemory",
        "broadPhase",
        "kdTreeManager",
        "autoUpdateTree",
        "broadPhaseDispatcher",
        "phantomBroadPhaseListener",
        "entityEntityBroadPhaseListener",
        "broadPhaseBorderListener",
        "multithreadedSimulationJobData",
        "collisionInput",
        "collisionFilter",
        "collisionDispatcher",
        "convexListFilter",
        "pendingOperations",
        "pendingOperationsCount",
        "pendingBodyOperationsCount",
        "criticalOperationsLockCount",
        "criticalOperationsLockCountForPhantoms",
        "blockExecutingPendingOperations",
        "criticalOperationsAllowed",
        "pendingOperationQueues",
        "pendingOperationQueueCount",
        "multiThreadCheck",
        "processActionsInSingleThread",
        "allowIntegrationOfIslandsWithoutConstraintsInASeparateJob",
        "minDesiredIslandSize",
        "modifyConstraintCriticalSection",
        "isLocked",
        "islandDirtyListCriticalSection",
        "propertyMasterLock",
        "wantSimulationIslands",
        "useHybridBroadphase",
        "snapCollisionToConvexEdgeThreshold",
        "snapCollisionToConcaveEdgeThreshold",
        "enableToiWeldRejection",
        "wantDeactivation",
        "shouldActivateOnRigidBodyTransformChange",
        "deactivationReferenceDistance",
        "toiCollisionResponseRotateNormal",
        "maxSectorsPerMidphaseCollideTask",
        "maxSectorsPerNarrowphaseCollideTask",
        "processToisMultithreaded",
        "maxEntriesPerToiMidphaseCollideTask",
        "maxEntriesPerToiNarrowphaseCollideTask",
        "maxNumToiCollisionPairsSinglethreaded",
        "simulationType",
        "numToisTillAllowedPenetrationSimplifiedToi",
        "numToisTillAllowedPenetrationToi",
        "numToisTillAllowedPenetrationToiHigher",
        "numToisTillAllowedPenetrationToiForced",
        "lastEntityUid",
        "lastIslandUid",
        "lastConstraintUid",
        "phantoms",
        "actionListeners",
        "entityListeners",
        "phantomListeners",
        "constraintListeners",
        "worldDeletionListeners",
        "islandActivationListeners",
        "worldPostSimulationListeners",
        "worldPostIntegrateListeners",
        "worldPostCollideListeners",
        "islandPostIntegrateListeners",
        "islandPostCollideListeners",
        "contactListeners",
        "contactImpulseLimitBreachedListeners",
        "worldExtensions",
        "violatedConstraintArray",
        "broadPhaseBorder",
        "destructionWorld",
        "npWorld",
        "broadPhaseExtents",
        "broadPhaseNumMarkers",
        "sizeOfToiEventQueue",
        "broadPhaseQuerySize",
        "broadPhaseUpdateSize",
        "contactPointGeneration"
      ]
    },
    "hkpWorldCinfo": {
      "title": "C++ Info",
      "description": "- name: `hkpWorldCinfo`\n - version: `11`\n - signature: `0xa5255445`\n - size: `240`(x86)/`256`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "allowIntegrationOfIslandsWithoutConstraintsInASeparateJob": {
          "title": "C++ Info",
          "description": "- name: `allowIntegrationOfIslandsWithoutConstraintsInASeparateJob`(ctype: `hkBool`)\n - offset: `225`(x86)/`241`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "allowToSkipConfirmedCallbacks": {
          "title": "C++ Info",
          "description": "- name: `allowToSkipConfirmedCallbacks`(ctype: `hkBool`)\n - offset: `117`(x86)/`133`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "autoUpdateKdTree": {
          "title": "C++ Info",
          "description": "- name: `autoUpdateKdTree`(ctype: `hkBool`)\n - offset: ` 83`(x86)/` 83`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "broadPhaseBorderBehaviour": {
          "title": "C++ Info",
          "description": "- name: `broadPhaseBorderBehaviour`(ctype: `enum BroadPhaseBorderBehaviour`)\n - offset: ` 40`(x86)/` 40`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/BroadPhaseBorderBehaviour"
        },
        "broadPhaseNumMarkers": {
          "title": "C++ Info",
          "description": "- name: `broadPhaseNumMarkers`(ctype: `hkInt32`)\n - offset: `112`(x86)/`128`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "broadPhaseQuerySize": {
          "title": "C++ Info",
          "description": "- name: `broadPhaseQuerySize`(ctype: `hkInt32`)\n - offset: ` 32`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "broadPhaseWorldAabb": {
          "title": "C++ Info",
          "description": "- name: `broadPhaseWorldAabb`(ctype: `struct hkAabb`)\n - offset: ` 48`(x86)/` 48`(x86_64)\n - type_size: ` 32`(x86)/` 32`(x86_64)",
          "$ref": "#/$defs/hkAabb"
        },
        "collisionFilter": {
          "title": "C++ Info",
          "description": "- name: `collisionFilter`(ctype: `struct hkpCollisionFilter*`)\n - offset: ` 88`(x86)/` 88`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "collisionTolerance": {
          "title": "C++ Info",
          "description": "- name: `collisionTolerance`(ctype: `hkReal`)\n - offset: ` 84`(x86)/` 84`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "contactPointGeneration": {
          "title": "C++ Info",
          "description": "- name: `contactPointGeneration`(ctype: `enum ContactPointGeneration`)\n - offset: `116`(x86)/`132`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/ContactPointGeneration"
        },
        "contactRestingVelocity": {
          "title": "C++ Info",
          "description": "- name: `contactRestingVelocity`(ctype: `hkReal`)\n - offset: ` 36`(x86)/` 36`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "convexListFilter": {
          "title": "C++ Info",
          "description": "- name: `convexListFilter`(ctype: `struct hkpConvexListFilter*`)\n - offset: ` 92`(x86)/` 96`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "deactivationIntegrateCounter": {
          "title": "C++ Info",
          "description": "- name: `deactivationIntegrateCounter`(ctype: `hkUint8`)\n - offset: `166`(x86)/`182`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        },
        "deactivationNumInactiveFramesSelectFlag0": {
          "title": "C++ Info",
          "description": "- name: `deactivationNumInactiveFramesSelectFlag0`(ctype: `hkUint8`)\n - offset: `164`(x86)/`180`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        },
        "deactivationNumInactiveFramesSelectFlag1": {
          "title": "C++ Info",
          "description": "- name: `deactivationNumInactiveFramesSelectFlag1`(ctype: `hkUint8`)\n - offset: `165`(x86)/`181`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        },
        "deactivationReferenceDistance": {
          "title": "C++ Info",
          "description": "- name: `deactivationReferenceDistance`(ctype: `hkReal`)\n - offset: `168`(x86)/`184`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "enableDeactivation": {
          "title": "C++ Info",
          "description": "- name: `enableDeactivation`(ctype: `hkBool`)\n - offset: `216`(x86)/`232`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "enableDeprecatedWelding": {
          "title": "C++ Info",
          "description": "- name: `enableDeprecatedWelding`(ctype: `hkBool`)\n - offset: `153`(x86)/`169`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "enableSimulationIslands": {
          "title": "C++ Info",
          "description": "- name: `enableSimulationIslands`(ctype: `hkBool`)\n - offset: `218`(x86)/`234`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "enableToiWeldRejection": {
          "title": "C++ Info",
          "description": "- name: `enableToiWeldRejection`(ctype: `hkBool`)\n - offset: `152`(x86)/`168`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "expectedMaxLinearVelocity": {
          "title": "C++ Info",
          "description": "- name: `expectedMaxLinearVelocity`(ctype: `hkReal`)\n - offset: ` 96`(x86)/`104`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "expectedMinPsiDeltaTime": {
          "title": "C++ Info",
          "description": "- name: `expectedMinPsiDeltaTime`(ctype: `hkReal`)\n - offset: `104`(x86)/`112`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "fireCollisionCallbacks": {
          "title": "C++ Info",
          "description": "- name: `fireCollisionCallbacks`(ctype: `hkBool`)\n - offset: `232`(x86)/`248`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "forceCoherentConstraintOrderingInSolver": {
          "title": "C++ Info",
          "description": "- name: `forceCoherentConstraintOrderingInSolver`(ctype: `hkBool`)\n - offset: `140`(x86)/`156`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "frameMarkerPsiSnap": {
          "title": "C++ Info",
          "description": "- name: `frameMarkerPsiSnap`(ctype: `hkReal`)\n - offset: `228`(x86)/`244`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "gravity": {
          "title": "C++ Info",
          "description": "- name: `gravity`(ctype: `hkVector4`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "iterativeLinearCastEarlyOutDistance": {
          "title": "C++ Info",
          "description": "- name: `iterativeLinearCastEarlyOutDistance`(ctype: `hkReal`)\n - offset: `156`(x86)/`172`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "iterativeLinearCastMaxIterations": {
          "title": "C++ Info",
          "description": "- name: `iterativeLinearCastMaxIterations`(ctype: `hkInt32`)\n - offset: `160`(x86)/`176`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "maxConstraintViolation": {
          "title": "C++ Info",
          "description": "- name: `maxConstraintViolation`(ctype: `hkReal`)\n - offset: `136`(x86)/`152`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "maxEntriesPerToiMidphaseCollideTask": {
          "title": "C++ Info",
          "description": "- name: `maxEntriesPerToiMidphaseCollideTask`(ctype: `hkInt32`)\n - offset: `188`(x86)/`204`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "maxEntriesPerToiNarrowphaseCollideTask": {
          "title": "C++ Info",
          "description": "- name: `maxEntriesPerToiNarrowphaseCollideTask`(ctype: `hkInt32`)\n - offset: `192`(x86)/`208`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "maxNumToiCollisionPairsSinglethreaded": {
          "title": "C++ Info",
          "description": "- name: `maxNumToiCollisionPairsSinglethreaded`(ctype: `hkInt32`)\n - offset: `196`(x86)/`212`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "maxSectorsPerMidphaseCollideTask": {
          "title": "C++ Info",
          "description": "- name: `maxSectorsPerMidphaseCollideTask`(ctype: `hkInt32`)\n - offset: `176`(x86)/`192`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "maxSectorsPerNarrowphaseCollideTask": {
          "title": "C++ Info",
          "description": "- name: `maxSectorsPerNarrowphaseCollideTask`(ctype: `hkInt32`)\n - offset: `180`(x86)/`196`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "memoryWatchDog": {
          "title": "C++ Info",
          "description": "- name: `memoryWatchDog`(ctype: `struct hkWorldMemoryAvailableWatchDog*`)\n - offset: `108`(x86)/`120`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "minDesiredIslandSize": {
          "title": "C++ Info",
          "description": "- name: `minDesiredIslandSize`(ctype: `hkUint32`)\n - offset: `220`(x86)/`236`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "mtPostponeAndSortBroadPhaseBorderCallbacks": {
          "title": "C++ Info",
          "description": "- name: `mtPostponeAndSortBroadPhaseBorderCallbacks`(ctype: `hkBool`)\n - offset: ` 41`(x86)/` 41`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "numToisTillAllowedPenetrationSimplifiedToi": {
          "title": "C++ Info",
          "description": "- name: `numToisTillAllowedPenetrationSimplifiedToi`(ctype: `hkReal`)\n - offset: `200`(x86)/`216`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "numToisTillAllowedPenetrationToi": {
          "title": "C++ Info",
          "description": "- name: `numToisTillAllowedPenetrationToi`(ctype: `hkReal`)\n - offset: `204`(x86)/`220`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "numToisTillAllowedPenetrationToiForced": {
          "title": "C++ Info",
          "description": "- name: `numToisTillAllowedPenetrationToiForced`(ctype: `hkReal`)\n - offset: `212`(x86)/`228`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "numToisTillAllowedPenetrationToiHigher": {
          "title": "C++ Info",
          "description": "- name: `numToisTillAllowedPenetrationToiHigher`(ctype: `hkReal`)\n - offset: `208`(x86)/`224`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "processActionsInSingleThread": {
          "title": "C++ Info",
          "description": "- name: `processActionsInSingleThread`(ctype: `hkBool`)\n - offset: `224`(x86)/`240`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "processToisMultithreaded": {
          "title": "C++ Info",
          "description": "- name: `processToisMultithreaded`(ctype: `hkBool`)\n - offset: `184`(x86)/`200`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "shouldActivateOnRigidBodyTransformChange": {
          "title": "C++ Info",
          "description": "- name: `shouldActivateOnRigidBodyTransformChange`(ctype: `hkBool`)\n - offset: `167`(x86)/`183`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "simulationType": {
          "title": "C++ Info",
          "description": "- name: `simulationType`(ctype: `enum SimulationType`)\n - offset: `217`(x86)/`233`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/SimulationType"
        },
        "sizeOfToiEventQueue": {
          "title": "C++ Info",
          "description": "- name: `sizeOfToiEventQueue`(ctype: `hkInt32`)\n - offset: `100`(x86)/`108`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "snapCollisionToConcaveEdgeThreshold": {
          "title": "C++ Info",
          "description": "- name: `snapCollisionToConcaveEdgeThreshold`(ctype: `hkReal`)\n - offset: `148`(x86)/`164`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "snapCollisionToConvexEdgeThreshold": {
          "title": "C++ Info",
          "description": "- name: `snapCollisionToConvexEdgeThreshold`(ctype: `hkReal`)\n - offset: `144`(x86)/`160`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "solverDamp": {
          "title": "C++ Info",
          "description": "- name: `solverDamp`(ctype: `hkReal`)\n - offset: `124`(x86)/`140`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "solverIterations": {
          "title": "C++ Info",
          "description": "- name: `solverIterations`(ctype: `hkInt32`)\n - offset: `128`(x86)/`144`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "solverMicrosteps": {
          "title": "C++ Info",
          "description": "- name: `solverMicrosteps`(ctype: `hkInt32`)\n - offset: `132`(x86)/`148`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "solverTau": {
          "title": "C++ Info",
          "description": "- name: `solverTau`(ctype: `hkReal`)\n - offset: `120`(x86)/`136`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "toiCollisionResponseRotateNormal": {
          "title": "C++ Info",
          "description": "- name: `toiCollisionResponseRotateNormal`(ctype: `hkReal`)\n - offset: `172`(x86)/`188`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "treeUpdateType": {
          "title": "C++ Info",
          "description": "- name: `treeUpdateType`(ctype: `enum TreeUpdateType`)\n - offset: ` 82`(x86)/` 82`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/TreeUpdateType"
        },
        "useHybridBroadphase": {
          "title": "C++ Info",
          "description": "- name: `useHybridBroadphase`(ctype: `hkBool`)\n - offset: `118`(x86)/`134`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "useKdTree": {
          "title": "C++ Info",
          "description": "- name: `useKdTree`(ctype: `hkBool`)\n - offset: ` 80`(x86)/` 80`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "useMultipleTree": {
          "title": "C++ Info",
          "description": "- name: `useMultipleTree`(ctype: `hkBool`)\n - offset: ` 81`(x86)/` 81`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "gravity",
        "broadPhaseQuerySize",
        "contactRestingVelocity",
        "broadPhaseBorderBehaviour",
        "mtPostponeAndSortBroadPhaseBorderCallbacks",
        "broadPhaseWorldAabb",
        "useKdTree",
        "useMultipleTree",
        "treeUpdateType",
        "autoUpdateKdTree",
        "collisionTolerance",
        "collisionFilter",
        "convexListFilter",
        "expectedMaxLinearVelocity",
        "sizeOfToiEventQueue",
        "expectedMinPsiDeltaTime",
        "memoryWatchDog",
        "broadPhaseNumMarkers",
        "contactPointGeneration",
        "allowToSkipConfirmedCallbacks",
        "useHybridBroadphase",
        "solverTau",
        "solverDamp",
        "solverIterations",
        "solverMicrosteps",
        "maxConstraintViolation",
        "forceCoherentConstraintOrderingInSolver",
        "snapCollisionToConvexEdgeThreshold",
        "snapCollisionToConcaveEdgeThreshold",
        "enableToiWeldRejection",
        "enableDeprecatedWelding",
        "iterativeLinearCastEarlyOutDistance",
        "iterativeLinearCastMaxIterations",
        "deactivationNumInactiveFramesSelectFlag0",
        "deactivationNumInactiveFramesSelectFlag1",
        "deactivationIntegrateCounter",
        "shouldActivateOnRigidBodyTransformChange",
        "deactivationReferenceDistance",
        "toiCollisionResponseRotateNormal",
        "maxSectorsPerMidphaseCollideTask",
        "maxSectorsPerNarrowphaseCollideTask",
        "processToisMultithreaded",
        "maxEntriesPerToiMidphaseCollideTask",
        "maxEntriesPerToiNarrowphaseCollideTask",
        "maxNumToiCollisionPairsSinglethreaded",
        "numToisTillAllowedPenetrationSimplifiedToi",
        "numToisTillAllowedPenetrationToi",
        "numToisTillAllowedPenetrationToiHigher",
        "numToisTillAllowedPenetrationToiForced",
        "enableDeactivation",
        "simulationType",
        "enableSimulationIslands",
        "minDesiredIslandSize",
        "processActionsInSingleThread",
        "allowIntegrationOfIslandsWithoutConstraintsInASeparateJob",
        "frameMarkerPsiSnap",
        "fireCollisionCallbacks"
      ]
    },
    "hkpWorldObject": {
      "title": "C++ Info",
      "description": "- name: `hkpWorldObject`\n - version: `0`\n - signature: `0x49fb6f2e`\n - size: `140`(x86)/`208`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "properties": {
          "title": "C++ Info",
          "description": "- name: `properties`(ctype: `hkArray<struct hkpProperty>`)\n - offset: `124`(x86)/`184`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkpProperty"
          }
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "collidable": {
          "title": "C++ Info",
          "description": "- name: `collidable`(ctype: `struct hkpLinkedCollidable`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: ` 92`(x86)/`128`(x86_64)",
          "$ref": "#/$defs/hkpLinkedCollidable"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "multiThreadCheck": {
          "title": "C++ Info",
          "description": "- name: `multiThreadCheck`(ctype: `struct hkMultiThreadCheck`)\n - offset: `108`(x86)/`160`(x86_64)\n - type_size: ` 12`(x86)/` 12`(x86_64)",
          "$ref": "#/$defs/hkMultiThreadCheck"
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: `120`(x86)/`176`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "treeData": {
          "title": "C++ Info",
          "description": "- name: `treeData`(ctype: `void*`)\n - offset: `136`(x86)/`200`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        },
        "userData": {
          "title": "C++ Info",
          "description": "- name: `userData`(ctype: `hkUlong`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "world": {
          "title": "C++ Info",
          "description": "- name: `world`(ctype: `void*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "world",
        "userData",
        "collidable",
        "multiThreadCheck",
        "properties",
        "treeData"
      ]
    },
    "hkxAnimatedFloat": {
      "title": "C++ Info",
      "description": "- name: `hkxAnimatedFloat`\n - version: `1`\n - signature: `0xce8b2fbd`\n - size: ` 24`(x86)/` 40`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "floats": {
          "title": "C++ Info",
          "description": "- name: `floats`(ctype: `hkArray<hkReal>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "hint": {
          "title": "C++ Info",
          "description": "- name: `hint`(ctype: `enum Hint`)\n - offset: ` 20`(x86)/` 32`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/Hint"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "floats",
        "hint"
      ]
    },
    "hkxAnimatedMatrix": {
      "title": "C++ Info",
      "description": "- name: `hkxAnimatedMatrix`\n - version: `1`\n - signature: `0x5838e337`\n - size: ` 24`(x86)/` 40`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "hint": {
          "title": "C++ Info",
          "description": "- name: `hint`(ctype: `enum Hint`)\n - offset: ` 20`(x86)/` 32`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/Hint"
        },
        "matrices": {
          "title": "C++ Info",
          "description": "- name: `matrices`(ctype: `hkArray<hkMatrix4>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/Matrix4"
          }
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "matrices",
        "hint"
      ]
    },
    "hkxAnimatedQuaternion": {
      "title": "C++ Info",
      "description": "- name: `hkxAnimatedQuaternion`\n - version: `1`\n - signature: `0xb4f01baa`\n - size: ` 20`(x86)/` 32`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "quaternions": {
          "title": "C++ Info",
          "description": "- name: `quaternions`(ctype: `hkArray<hkQuaternion>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/Quaternion"
          }
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "quaternions"
      ]
    },
    "hkxAnimatedVector": {
      "title": "C++ Info",
      "description": "- name: `hkxAnimatedVector`\n - version: `1`\n - signature: `0x34b1a197`\n - size: ` 24`(x86)/` 40`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "hint": {
          "title": "C++ Info",
          "description": "- name: `hint`(ctype: `enum Hint`)\n - offset: ` 20`(x86)/` 32`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/Hint"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "vectors": {
          "title": "C++ Info",
          "description": "- name: `vectors`(ctype: `hkArray<hkVector4>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/Vector4"
          }
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "vectors",
        "hint"
      ]
    },
    "hkxAttribute": {
      "title": "C++ Info",
      "description": "- name: `hkxAttribute`\n - version: `0`\n - signature: `0x7375cae3`\n - size: `  8`(x86)/` 16`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "value": {
          "title": "C++ Info",
          "description": "- name: `value`(ctype: `struct hkReferencedObject*`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "value"
      ]
    },
    "hkxAttributeGroup": {
      "title": "C++ Info",
      "description": "- name: `hkxAttributeGroup`\n - version: `0`\n - signature: `0x345ca95d`\n - size: ` 16`(x86)/` 24`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "attributes": {
          "title": "C++ Info",
          "description": "- name: `attributes`(ctype: `hkArray<struct hkxAttribute>`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkxAttribute"
          }
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "required": [
        "attributes"
      ]
    },
    "hkxAttributeHolder": {
      "title": "C++ Info",
      "description": "- name: `hkxAttributeHolder`\n - version: `1`\n - signature: `0x7468cc44`\n - size: ` 20`(x86)/` 32`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "attributeGroups": {
          "title": "C++ Info",
          "description": "- name: `attributeGroups`(ctype: `hkArray<struct hkxAttributeGroup>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkxAttributeGroup"
          }
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "attributeGroups"
      ]
    },
    "hkxCamera": {
      "title": "C++ Info",
      "description": "- name: `hkxCamera`\n - version: `1`\n - signature: `0xe3597b02`\n - size: ` 80`(x86)/` 80`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "far": {
          "title": "C++ Info",
          "description": "- name: `far`(ctype: `hkReal`)\n - offset: ` 68`(x86)/` 68`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "focus": {
          "title": "C++ Info",
          "description": "- name: `focus`(ctype: `hkVector4`)\n - offset: ` 32`(x86)/` 32`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "fov": {
          "title": "C++ Info",
          "description": "- name: `fov`(ctype: `hkReal`)\n - offset: ` 64`(x86)/` 64`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "from": {
          "title": "C++ Info",
          "description": "- name: `from`(ctype: `hkVector4`)\n - offset: ` 16`(x86)/` 16`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "leftHanded": {
          "title": "C++ Info",
          "description": "- name: `leftHanded`(ctype: `hkBool`)\n - offset: ` 76`(x86)/` 76`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "near": {
          "title": "C++ Info",
          "description": "- name: `near`(ctype: `hkReal`)\n - offset: ` 72`(x86)/` 72`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "up": {
          "title": "C++ Info",
          "description": "- name: `up`(ctype: `hkVector4`)\n - offset: ` 48`(x86)/` 48`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "from",
        "focus",
        "up",
        "fov",
        "far",
        "near",
        "leftHanded"
      ]
    },
    "hkxEdgeSelectionChannel": {
      "title": "C++ Info",
      "description": "- name: `hkxEdgeSelectionChannel`\n - version: `1`\n - signature: `0x9ad32a5e`\n - size: ` 20`(x86)/` 32`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "selectedEdges": {
          "title": "C++ Info",
          "description": "- name: `selectedEdges`(ctype: `hkArray<hkInt32>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "selectedEdges"
      ]
    },
    "hkxEnum": {
      "title": "C++ Info",
      "description": "- name: `hkxEnum`\n - version: `0`\n - signature: `0xc4e1211`\n - size: ` 20`(x86)/` 32`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "items": {
          "title": "C++ Info",
          "description": "- name: `items`(ctype: `hkArray<struct hkxEnumItem>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkxEnumItem"
          }
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "items"
      ]
    },
    "hkxEnumItem": {
      "title": "C++ Info",
      "description": "- name: `hkxEnumItem`\n - version: `0`\n - signature: `0xdf4cf1e9`\n - size: `  8`(x86)/` 16`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "value": {
          "title": "C++ Info",
          "description": "- name: `value`(ctype: `hkInt32`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "value"
      ]
    },
    "hkxEnvironment": {
      "title": "C++ Info",
      "description": "- name: `hkxEnvironment`\n - version: `1`\n - signature: `0x41e1aa5`\n - size: ` 20`(x86)/` 32`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "variables": {
          "title": "C++ Info",
          "description": "- name: `variables`(ctype: `hkArray<struct hkxEnvironmentVariable>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkxEnvironmentVariable"
          }
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "variables"
      ]
    },
    "hkxEnvironmentVariable": {
      "title": "C++ Info",
      "description": "- name: `hkxEnvironmentVariable`\n - version: `0`\n - signature: `0xa6815115`\n - size: `  8`(x86)/` 16`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "value": {
          "title": "C++ Info",
          "description": "- name: `value`(ctype: `hkStringPtr`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        }
      }
    },
    "hkxIndexBuffer": {
      "title": "C++ Info",
      "description": "- name: `hkxIndexBuffer`\n - version: `1`\n - signature: `0xc12c8197`\n - size: ` 44`(x86)/` 64`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "indexType": {
          "title": "C++ Info",
          "description": "- name: `indexType`(ctype: `enum IndexType`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/IndexType"
        },
        "indices16": {
          "title": "C++ Info",
          "description": "- name: `indices16`(ctype: `hkArray<hkUint16>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint16",
            "minimum": 0
          }
        },
        "indices32": {
          "title": "C++ Info",
          "description": "- name: `indices32`(ctype: `hkArray<hkUint32>`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          }
        },
        "length": {
          "title": "C++ Info",
          "description": "- name: `length`(ctype: `hkUint32`)\n - offset: ` 40`(x86)/` 60`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "vertexBaseOffset": {
          "title": "C++ Info",
          "description": "- name: `vertexBaseOffset`(ctype: `hkUint32`)\n - offset: ` 36`(x86)/` 56`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "indexType",
        "indices16",
        "indices32",
        "vertexBaseOffset",
        "length"
      ]
    },
    "hkxLight": {
      "title": "C++ Info",
      "description": "- name: `hkxLight`\n - version: `1`\n - signature: `0x81c86d42`\n - size: ` 64`(x86)/` 80`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum LightType`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/LightType"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "angle": {
          "title": "C++ Info",
          "description": "- name: `angle`(ctype: `hkReal`)\n - offset: ` 52`(x86)/` 68`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "color": {
          "title": "C++ Info",
          "description": "- name: `color`(ctype: `hkUint32`)\n - offset: ` 48`(x86)/` 64`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "direction": {
          "title": "C++ Info",
          "description": "- name: `direction`(ctype: `hkVector4`)\n - offset: ` 32`(x86)/` 48`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "position": {
          "title": "C++ Info",
          "description": "- name: `position`(ctype: `hkVector4`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "type",
        "position",
        "direction",
        "color",
        "angle"
      ]
    },
    "hkxMaterial": {
      "title": "C++ Info",
      "description": "- name: `hkxMaterial`\n - version: `1`\n - signature: `0x2954537a`\n - size: `144`(x86)/`176`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "properties": {
          "title": "C++ Info",
          "description": "- name: `properties`(ctype: `hkArray<struct hkxMaterialProperty>`)\n - offset: `128`(x86)/`152`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkxMaterialProperty"
          }
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "ambientColor": {
          "title": "C++ Info",
          "description": "- name: `ambientColor`(ctype: `hkVector4`)\n - offset: ` 64`(x86)/` 80`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "attributeGroups": {
          "title": "C++ Info",
          "description": "- name: `attributeGroups`(ctype: `hkArray<struct hkxAttributeGroup>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkxAttributeGroup"
          }
        },
        "diffuseColor": {
          "title": "C++ Info",
          "description": "- name: `diffuseColor`(ctype: `hkVector4`)\n - offset: ` 48`(x86)/` 64`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "emissiveColor": {
          "title": "C++ Info",
          "description": "- name: `emissiveColor`(ctype: `hkVector4`)\n - offset: ` 96`(x86)/`112`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "extraData": {
          "title": "C++ Info",
          "description": "- name: `extraData`(ctype: `struct hkReferencedObject*`)\n - offset: `124`(x86)/`144`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 20`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "specularColor": {
          "title": "C++ Info",
          "description": "- name: `specularColor`(ctype: `hkVector4`)\n - offset: ` 80`(x86)/` 96`(x86_64)\n - type_size: ` 16`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/Vector4"
        },
        "stages": {
          "title": "C++ Info",
          "description": "- name: `stages`(ctype: `hkArray<struct hkxMaterialTextureStage>`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkxMaterialTextureStage"
          }
        },
        "subMaterials": {
          "title": "C++ Info",
          "description": "- name: `subMaterials`(ctype: `hkArray<hkxMaterial*>`)\n - offset: `112`(x86)/`128`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "attributeGroups",
        "stages",
        "diffuseColor",
        "ambientColor",
        "specularColor",
        "emissiveColor",
        "subMaterials",
        "extraData",
        "properties"
      ]
    },
    "hkxMaterialEffect": {
      "title": "C++ Info",
      "description": "- name: `hkxMaterialEffect`\n - version: `1`\n - signature: `0x1d39f925`\n - size: ` 28`(x86)/` 48`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum EffectType`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/EffectType"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "data": {
          "title": "C++ Info",
          "description": "- name: `data`(ctype: `hkArray<hkUint8>`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint8",
            "minimum": 0
          }
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "type",
        "data"
      ]
    },
    "hkxMaterialProperty": {
      "title": "C++ Info",
      "description": "- name: `hkxMaterialProperty`\n - version: `0`\n - signature: `0xd295234d`\n - size: `  8`(x86)/`  8`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "key": {
          "title": "C++ Info",
          "description": "- name: `key`(ctype: `hkUint32`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "value": {
          "title": "C++ Info",
          "description": "- name: `value`(ctype: `hkUint32`)\n - offset: `  4`(x86)/`  4`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        }
      },
      "required": [
        "key",
        "value"
      ]
    },
    "hkxMaterialShader": {
      "title": "C++ Info",
      "description": "- name: `hkxMaterialShader`\n - version: `1`\n - signature: `0x28515eff`\n - size: ` 40`(x86)/` 72`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum ShaderType`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/ShaderType"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "data": {
          "title": "C++ Info",
          "description": "- name: `data`(ctype: `hkArray<hkUint8>`)\n - offset: ` 28`(x86)/` 56`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint8",
            "minimum": 0
          }
        },
        "geomEntryName": {
          "title": "C++ Info",
          "description": "- name: `geomEntryName`(ctype: `hkStringPtr`)\n - offset: ` 20`(x86)/` 40`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "pixelEntryName": {
          "title": "C++ Info",
          "description": "- name: `pixelEntryName`(ctype: `hkStringPtr`)\n - offset: ` 24`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "vertexEntryName": {
          "title": "C++ Info",
          "description": "- name: `vertexEntryName`(ctype: `hkStringPtr`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "type",
        "data"
      ]
    },
    "hkxMaterialShaderSet": {
      "title": "C++ Info",
      "description": "- name: `hkxMaterialShaderSet`\n - version: `1`\n - signature: `0x154650f3`\n - size: ` 20`(x86)/` 32`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "shaders": {
          "title": "C++ Info",
          "description": "- name: `shaders`(ctype: `hkArray<hkxMaterialShader*>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "shaders"
      ]
    },
    "hkxMaterialTextureStage": {
      "title": "C++ Info",
      "description": "- name: `hkxMaterialTextureStage`\n - version: `0`\n - signature: `0xfa6facb2`\n - size: ` 12`(x86)/` 16`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "tcoordChannel": {
          "title": "C++ Info",
          "description": "- name: `tcoordChannel`(ctype: `hkInt32`)\n - offset: `  8`(x86)/` 12`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "int32"
        },
        "texture": {
          "title": "C++ Info",
          "description": "- name: `texture`(ctype: `struct hkReferencedObject*`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "usageHint": {
          "title": "C++ Info",
          "description": "- name: `usageHint`(ctype: `enum TextureType`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "$ref": "#/$defs/TextureType"
        }
      },
      "required": [
        "texture",
        "usageHint",
        "tcoordChannel"
      ]
    },
    "hkxMesh": {
      "title": "C++ Info",
      "description": "- name: `hkxMesh`\n - version: `1`\n - signature: `0xf2edcc5f`\n - size: ` 32`(x86)/` 48`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "sections": {
          "title": "C++ Info",
          "description": "- name: `sections`(ctype: `hkArray<hkxMeshSection*>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "userChannelInfos": {
          "title": "C++ Info",
          "description": "- name: `userChannelInfos`(ctype: `hkArray<hkxMeshUserChannelInfo*>`)\n - offset: ` 20`(x86)/` 32`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "sections",
        "userChannelInfos"
      ]
    },
    "hkxMeshSection": {
      "title": "C++ Info",
      "description": "- name: `hkxMeshSection`\n - version: `1`\n - signature: `0xe2286cf8`\n - size: ` 40`(x86)/` 64`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "indexBuffers": {
          "title": "C++ Info",
          "description": "- name: `indexBuffers`(ctype: `hkArray<hkxIndexBuffer*>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "material": {
          "title": "C++ Info",
          "description": "- name: `material`(ctype: `struct hkxMaterial*`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "userChannels": {
          "title": "C++ Info",
          "description": "- name: `userChannels`(ctype: `hkArray<hkReferencedObject*>`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "vertexBuffer": {
          "title": "C++ Info",
          "description": "- name: `vertexBuffer`(ctype: `struct hkxVertexBuffer*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "vertexBuffer",
        "indexBuffers",
        "material",
        "userChannels"
      ]
    },
    "hkxMeshUserChannelInfo": {
      "title": "C++ Info",
      "description": "- name: `hkxMeshUserChannelInfo`\n - version: `0`\n - signature: `0x270724a5`\n - size: ` 28`(x86)/` 48`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "attributeGroups": {
          "title": "C++ Info",
          "description": "- name: `attributeGroups`(ctype: `hkArray<struct hkxAttributeGroup>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkxAttributeGroup"
          }
        },
        "className": {
          "title": "C++ Info",
          "description": "- name: `className`(ctype: `hkStringPtr`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 20`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "attributeGroups"
      ]
    },
    "hkxNode": {
      "title": "C++ Info",
      "description": "- name: `hkxNode`\n - version: `1`\n - signature: `0x5a218502`\n - size: ` 72`(x86)/`112`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "annotations": {
          "title": "C++ Info",
          "description": "- name: `annotations`(ctype: `hkArray<struct hkxNodeAnnotationData>`)\n - offset: ` 52`(x86)/` 80`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkxNodeAnnotationData"
          }
        },
        "attributeGroups": {
          "title": "C++ Info",
          "description": "- name: `attributeGroups`(ctype: `hkArray<struct hkxAttributeGroup>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkxAttributeGroup"
          }
        },
        "children": {
          "title": "C++ Info",
          "description": "- name: `children`(ctype: `hkArray<hkxNode*>`)\n - offset: ` 40`(x86)/` 64`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "keyFrames": {
          "title": "C++ Info",
          "description": "- name: `keyFrames`(ctype: `hkArray<hkMatrix4>`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/Matrix4"
          }
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 20`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "object": {
          "title": "C++ Info",
          "description": "- name: `object`(ctype: `struct hkReferencedObject*`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "selected": {
          "title": "C++ Info",
          "description": "- name: `selected`(ctype: `hkBool`)\n - offset: ` 68`(x86)/`104`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "boolean"
        },
        "userProperties": {
          "title": "C++ Info",
          "description": "- name: `userProperties`(ctype: `hkStringPtr`)\n - offset: ` 64`(x86)/` 96`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "attributeGroups",
        "object",
        "keyFrames",
        "children",
        "annotations",
        "selected"
      ]
    },
    "hkxNodeAnnotationData": {
      "title": "C++ Info",
      "description": "- name: `hkxNodeAnnotationData`\n - version: `0`\n - signature: `0x433dee92`\n - size: `  8`(x86)/` 16`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "description": {
          "title": "C++ Info",
          "description": "- name: `description`(ctype: `hkStringPtr`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "time": {
          "title": "C++ Info",
          "description": "- name: `time`(ctype: `hkReal`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        }
      },
      "required": [
        "time"
      ]
    },
    "hkxNodeSelectionSet": {
      "title": "C++ Info",
      "description": "- name: `hkxNodeSelectionSet`\n - version: `0`\n - signature: `0xd753fc4d`\n - size: ` 36`(x86)/` 56`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "attributeGroups": {
          "title": "C++ Info",
          "description": "- name: `attributeGroups`(ctype: `hkArray<struct hkxAttributeGroup>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkxAttributeGroup"
          }
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 32`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "selectedNodes": {
          "title": "C++ Info",
          "description": "- name: `selectedNodes`(ctype: `hkArray<hkxNode*>`)\n - offset: ` 20`(x86)/` 32`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "attributeGroups",
        "selectedNodes"
      ]
    },
    "hkxScene": {
      "title": "C++ Info",
      "description": "- name: `hkxScene`\n - version: `1`\n - signature: `0x5f673ddd`\n - size: `176`(x86)/`224`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "appliedTransform": {
          "title": "C++ Info",
          "description": "- name: `appliedTransform`(ctype: `hkMatrix3`)\n - offset: `128`(x86)/`176`(x86_64)\n - type_size: ` 48`(x86)/` 48`(x86_64)",
          "$ref": "#/$defs/Matrix3"
        },
        "asset": {
          "title": "C++ Info",
          "description": "- name: `asset`(ctype: `hkStringPtr`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "cameras": {
          "title": "C++ Info",
          "description": "- name: `cameras`(ctype: `hkArray<hkxCamera*>`)\n - offset: ` 36`(x86)/` 64`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "externalTextures": {
          "title": "C++ Info",
          "description": "- name: `externalTextures`(ctype: `hkArray<hkxTextureFile*>`)\n - offset: ` 96`(x86)/`144`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "inplaceTextures": {
          "title": "C++ Info",
          "description": "- name: `inplaceTextures`(ctype: `hkArray<hkxTextureInplace*>`)\n - offset: ` 84`(x86)/`128`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "lights": {
          "title": "C++ Info",
          "description": "- name: `lights`(ctype: `hkArray<hkxLight*>`)\n - offset: ` 48`(x86)/` 80`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "materials": {
          "title": "C++ Info",
          "description": "- name: `materials`(ctype: `hkArray<hkxMaterial*>`)\n - offset: ` 72`(x86)/`112`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "meshes": {
          "title": "C++ Info",
          "description": "- name: `meshes`(ctype: `hkArray<hkxMesh*>`)\n - offset: ` 60`(x86)/` 96`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "modeller": {
          "title": "C++ Info",
          "description": "- name: `modeller`(ctype: `hkStringPtr`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "rootNode": {
          "title": "C++ Info",
          "description": "- name: `rootNode`(ctype: `struct hkxNode*`)\n - offset: ` 20`(x86)/` 40`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "sceneLength": {
          "title": "C++ Info",
          "description": "- name: `sceneLength`(ctype: `hkReal`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "number",
          "format": "float"
        },
        "selectionSets": {
          "title": "C++ Info",
          "description": "- name: `selectionSets`(ctype: `hkArray<hkxNodeSelectionSet*>`)\n - offset: ` 24`(x86)/` 48`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "skinBindings": {
          "title": "C++ Info",
          "description": "- name: `skinBindings`(ctype: `hkArray<hkxSkinBinding*>`)\n - offset: `108`(x86)/`160`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "sceneLength",
        "rootNode",
        "selectionSets",
        "cameras",
        "lights",
        "meshes",
        "materials",
        "inplaceTextures",
        "externalTextures",
        "skinBindings",
        "appliedTransform"
      ]
    },
    "hkxSkinBinding": {
      "title": "C++ Info",
      "description": "- name: `hkxSkinBinding`\n - version: `2`\n - signature: `0x5a93f338`\n - size: `112`(x86)/`128`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "bindPose": {
          "title": "C++ Info",
          "description": "- name: `bindPose`(ctype: `hkArray<hkMatrix4>`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/Matrix4"
          }
        },
        "initSkinTransform": {
          "title": "C++ Info",
          "description": "- name: `initSkinTransform`(ctype: `hkMatrix4`)\n - offset: ` 48`(x86)/` 64`(x86_64)\n - type_size: ` 64`(x86)/` 64`(x86_64)",
          "$ref": "#/$defs/Matrix4"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "mesh": {
          "title": "C++ Info",
          "description": "- name: `mesh`(ctype: `struct hkxMesh*`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "nodeNames": {
          "title": "C++ Info",
          "description": "- name: `nodeNames`(ctype: `hkArray<hkStringPtr>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "mesh",
        "nodeNames",
        "bindPose",
        "initSkinTransform"
      ]
    },
    "hkxSparselyAnimatedBool": {
      "title": "C++ Info",
      "description": "- name: `hkxSparselyAnimatedBool`\n - version: `1`\n - signature: `0x7a894596`\n - size: ` 32`(x86)/` 48`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "bools": {
          "title": "C++ Info",
          "description": "- name: `bools`(ctype: `hkArray<hkBool>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "boolean"
          }
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "times": {
          "title": "C++ Info",
          "description": "- name: `times`(ctype: `hkArray<hkReal>`)\n - offset: ` 20`(x86)/` 32`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          }
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "bools",
        "times"
      ]
    },
    "hkxSparselyAnimatedEnum": {
      "title": "C++ Info",
      "description": "- name: `hkxSparselyAnimatedEnum`\n - version: `1`\n - signature: `0x68a47b64`\n - size: ` 36`(x86)/` 56`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "enum": {
          "title": "C++ Info",
          "description": "- name: `enum`(ctype: `struct hkxEnum*`)\n - offset: ` 32`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": "string"
        },
        "ints": {
          "title": "C++ Info",
          "description": "- name: `ints`(ctype: `hkArray<hkInt32>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "times": {
          "title": "C++ Info",
          "description": "- name: `times`(ctype: `hkArray<hkReal>`)\n - offset: ` 20`(x86)/` 32`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          }
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "ints",
        "times",
        "enum"
      ]
    },
    "hkxSparselyAnimatedInt": {
      "title": "C++ Info",
      "description": "- name: `hkxSparselyAnimatedInt`\n - version: `1`\n - signature: `0xca961951`\n - size: ` 32`(x86)/` 48`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "ints": {
          "title": "C++ Info",
          "description": "- name: `ints`(ctype: `hkArray<hkInt32>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "times": {
          "title": "C++ Info",
          "description": "- name: `times`(ctype: `hkArray<hkReal>`)\n - offset: ` 20`(x86)/` 32`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          }
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "ints",
        "times"
      ]
    },
    "hkxSparselyAnimatedString": {
      "title": "C++ Info",
      "description": "- name: `hkxSparselyAnimatedString`\n - version: `2`\n - signature: `0x185da6fd`\n - size: ` 32`(x86)/` 48`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "strings": {
          "title": "C++ Info",
          "description": "- name: `strings`(ctype: `hkArray<hkStringPtr>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "times": {
          "title": "C++ Info",
          "description": "- name: `times`(ctype: `hkArray<hkReal>`)\n - offset: ` 20`(x86)/` 32`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          }
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "strings",
        "times"
      ]
    },
    "hkxTextureFile": {
      "title": "C++ Info",
      "description": "- name: `hkxTextureFile`\n - version: `1`\n - signature: `0x1e289259`\n - size: ` 20`(x86)/` 40`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "filename": {
          "title": "C++ Info",
          "description": "- name: `filename`(ctype: `hkStringPtr`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "originalFilename": {
          "title": "C++ Info",
          "description": "- name: `originalFilename`(ctype: `hkStringPtr`)\n - offset: ` 16`(x86)/` 32`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount"
      ]
    },
    "hkxTextureInplace": {
      "title": "C++ Info",
      "description": "- name: `hkxTextureInplace`\n - version: `1`\n - signature: `0xd45841d6`\n - size: ` 32`(x86)/` 56`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "data": {
          "title": "C++ Info",
          "description": "- name: `data`(ctype: `hkArray<hkUint8>`)\n - offset: ` 12`(x86)/` 24`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint8",
            "minimum": 0
          }
        },
        "fileType": {
          "title": "C++ Info",
          "description": "- name: `fileType`(ctype: `hkChar[4]`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "array",
          "items": {
            "type": "string",
            "maxLength": 1,
            "minLength": 1
          },
          "maxItems": 4,
          "minItems": 4
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "name": {
          "title": "C++ Info",
          "description": "- name: `name`(ctype: `hkStringPtr`)\n - offset: ` 24`(x86)/` 40`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "originalFilename": {
          "title": "C++ Info",
          "description": "- name: `originalFilename`(ctype: `hkStringPtr`)\n - offset: ` 28`(x86)/` 48`(x86_64)\n - type_size: `  4`(x86)/`  8`(x86_64)",
          "type": [
            "string",
            "null"
          ]
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "fileType",
        "data"
      ]
    },
    "hkxTriangleSelectionChannel": {
      "title": "C++ Info",
      "description": "- name: `hkxTriangleSelectionChannel`\n - version: `1`\n - signature: `0xa02cfca9`\n - size: ` 20`(x86)/` 32`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "selectedTriangles": {
          "title": "C++ Info",
          "description": "- name: `selectedTriangles`(ctype: `hkArray<hkInt32>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "selectedTriangles"
      ]
    },
    "hkxVertexBuffer": {
      "title": "C++ Info",
      "description": "- name: `hkxVertexBuffer`\n - version: `1`\n - signature: `0x4ab10615`\n - size: `104`(x86)/`136`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "data": {
          "title": "C++ Info",
          "description": "- name: `data`(ctype: `struct hkxVertexBufferVertexData`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 84`(x86)/`104`(x86_64)",
          "$ref": "#/$defs/hkxVertexBufferVertexData"
        },
        "desc": {
          "title": "C++ Info",
          "description": "- name: `desc`(ctype: `struct hkxVertexDescription`)\n - offset: ` 92`(x86)/`120`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "$ref": "#/$defs/hkxVertexDescription"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "data",
        "desc"
      ]
    },
    "hkxVertexBufferVertexData": {
      "title": "C++ Info",
      "description": "- name: `hkxVertexBufferVertexData`\n - version: `0`\n - signature: `0xd72b6fd0`\n - size: ` 84`(x86)/`104`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "floatData": {
          "title": "C++ Info",
          "description": "- name: `floatData`(ctype: `hkArray<hkReal>`)\n - offset: ` 12`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "floatStride": {
          "title": "C++ Info",
          "description": "- name: `floatStride`(ctype: `hkUint32`)\n - offset: ` 68`(x86)/` 88`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "numVerts": {
          "title": "C++ Info",
          "description": "- name: `numVerts`(ctype: `hkUint32`)\n - offset: ` 60`(x86)/` 80`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "uint16Data": {
          "title": "C++ Info",
          "description": "- name: `uint16Data`(ctype: `hkArray<hkUint16>`)\n - offset: ` 36`(x86)/` 48`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint16",
            "minimum": 0
          }
        },
        "uint16Stride": {
          "title": "C++ Info",
          "description": "- name: `uint16Stride`(ctype: `hkUint32`)\n - offset: ` 76`(x86)/` 96`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "uint32Data": {
          "title": "C++ Info",
          "description": "- name: `uint32Data`(ctype: `hkArray<hkUint32>`)\n - offset: ` 24`(x86)/` 32`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          }
        },
        "uint32Stride": {
          "title": "C++ Info",
          "description": "- name: `uint32Stride`(ctype: `hkUint32`)\n - offset: ` 72`(x86)/` 92`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "uint8Data": {
          "title": "C++ Info",
          "description": "- name: `uint8Data`(ctype: `hkArray<hkUint8>`)\n - offset: ` 48`(x86)/` 64`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint8",
            "minimum": 0
          }
        },
        "uint8Stride": {
          "title": "C++ Info",
          "description": "- name: `uint8Stride`(ctype: `hkUint32`)\n - offset: ` 80`(x86)/`100`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "vectorData": {
          "title": "C++ Info",
          "description": "- name: `vectorData`(ctype: `hkArray<hkVector4>`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/Vector4"
          }
        },
        "vectorStride": {
          "title": "C++ Info",
          "description": "- name: `vectorStride`(ctype: `hkUint32`)\n - offset: ` 64`(x86)/` 84`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        }
      },
      "required": [
        "vectorData",
        "floatData",
        "uint32Data",
        "uint16Data",
        "uint8Data",
        "numVerts",
        "vectorStride",
        "floatStride",
        "uint32Stride",
        "uint16Stride",
        "uint8Stride"
      ]
    },
    "hkxVertexDescription": {
      "title": "C++ Info",
      "description": "- name: `hkxVertexDescription`\n - version: `1`\n - signature: `0x2df6313d`\n - size: ` 12`(x86)/` 16`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "decls": {
          "title": "C++ Info",
          "description": "- name: `decls`(ctype: `hkArray<struct hkxVertexDescriptionElementDecl>`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/hkxVertexDescriptionElementDecl"
          }
        }
      },
      "required": [
        "decls"
      ]
    },
    "hkxVertexDescriptionElementDecl": {
      "title": "C++ Info",
      "description": "- name: `hkxVertexDescriptionElementDecl`\n - version: `2`\n - signature: `0x483a429b`\n - size: ` 16`(x86)/` 16`(x86_64)\n -  vtable: `false`",
      "type": "object",
      "properties": {
        "type": {
          "title": "C++ Info",
          "description": "- name: `type`(ctype: `enum DataType`)\n - offset: `  4`(x86)/`  4`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "$ref": "#/$defs/DataType"
        },
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "byteOffset": {
          "title": "C++ Info",
          "description": "- name: `byteOffset`(ctype: `hkUint32`)\n - offset: `  0`(x86)/`  0`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "byteStride": {
          "title": "C++ Info",
          "description": "- name: `byteStride`(ctype: `hkUint32`)\n - offset: `  8`(x86)/`  8`(x86_64)\n - type_size: `  4`(x86)/`  4`(x86_64)",
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "numElements": {
          "title": "C++ Info",
          "description": "- name: `numElements`(ctype: `hkUint8`)\n - offset: ` 12`(x86)/` 12`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "type": "integer",
          "format": "uint8",
          "minimum": 0
        },
        "usage": {
          "title": "C++ Info",
          "description": "- name: `usage`(ctype: `enum DataUsage`)\n - offset: `  6`(x86)/`  6`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)",
          "$ref": "#/$defs/DataUsage"
        }
      },
      "required": [
        "byteOffset",
        "type",
        "usage",
        "byteStride",
        "numElements"
      ]
    },
    "hkxVertexFloatDataChannel": {
      "title": "C++ Info",
      "description": "- name: `hkxVertexFloatDataChannel`\n - version: `1`\n - signature: `0xbeeb397c`\n - size: ` 24`(x86)/` 40`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "dimensions": {
          "title": "C++ Info",
          "description": "- name: `dimensions`(ctype: `enum VertexFloatDimensions`)\n - offset: ` 20`(x86)/` 32`(x86_64)\n - type_size: `  1`(x86)/`  1`(x86_64)",
          "$ref": "#/$defs/VertexFloatDimensions"
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "perVertexFloats": {
          "title": "C++ Info",
          "description": "- name: `perVertexFloats`(ctype: `hkArray<hkReal>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "perVertexFloats",
        "dimensions"
      ]
    },
    "hkxVertexIntDataChannel": {
      "title": "C++ Info",
      "description": "- name: `hkxVertexIntDataChannel`\n - version: `1`\n - signature: `0x5a50e673`\n - size: ` 20`(x86)/` 32`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "perVertexInts": {
          "title": "C++ Info",
          "description": "- name: `perVertexInts`(ctype: `hkArray<hkInt32>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "perVertexInts"
      ]
    },
    "hkxVertexSelectionChannel": {
      "title": "C++ Info",
      "description": "- name: `hkxVertexSelectionChannel`\n - version: `1`\n - signature: `0x866ec6d0`\n - size: ` 20`(x86)/` 32`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        },
        "selectedVertices": {
          "title": "C++ Info",
          "description": "- name: `selectedVertices`(ctype: `hkArray<hkInt32>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "selectedVertices"
      ]
    },
    "hkxVertexVectorDataChannel": {
      "title": "C++ Info",
      "description": "- name: `hkxVertexVectorDataChannel`\n - version: `1`\n - signature: `0x2ea63179`\n - size: ` 20`(x86)/` 32`(x86_64)\n -  vtable: `true`",
      "type": "object",
      "properties": {
        "__ptr": {
          "title": "Unique index for this class",
          "description": "- Represents a pointer on XML (`<hkobject name=\"#0001\"></hkobject>`)\n - [`Option::None`] => This class is `class in field`.(`<hkobject></hkobject>`)\n\n # Note\n Not present in the binary & Not exist actual C++ field.",
          "type": [
            "string",
            "null"
          ]
        },
        "memSizeAndFlags": {
          "title": "C++ Info",
          "description": "- name: `memSizeAndFlags`(ctype: `hkUint16`)\n - offset: `  4`(x86)/`  8`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        },
        "perVertexVectors": {
          "title": "C++ Info",
          "description": "- name: `perVertexVectors`(ctype: `hkArray<hkVector4>`)\n - offset: `  8`(x86)/` 16`(x86_64)\n - type_size: ` 12`(x86)/` 16`(x86_64)",
          "type": "array",
          "items": {
            "$ref": "#/$defs/Vector4"
          }
        },
        "referenceCount": {
          "title": "C++ Info",
          "description": "- name: `referenceCount`(ctype: `hkInt16`)\n - offset: `  6`(x86)/` 10`(x86_64)\n - type_size: `  2`(x86)/`  2`(x86_64)\n - flags: `SERIALIZE_IGNORED`",
          "type": "integer",
          "format": "int16"
        }
      },
      "required": [
        "memSizeAndFlags",
        "referenceCount",
        "perVertexVectors"
      ]
    }
  }
}